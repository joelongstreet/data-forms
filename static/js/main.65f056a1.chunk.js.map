{"version":3,"sources":["Styles.js","d3/scale-radial.js","Tile.js","TileGroup.js","Settings.context.js","Preview.js","UnitSlider.js","Settings-shape.js","Settings-datum.js","Settings-page.js","Settings.js","Settings.provider.js","App.js","serviceWorker.js","index.js","util.js"],"names":["colors","square","x","radial","linear","d3","scale","Math","sqrt","domain","_","arguments","length","range","map","rotationMap","3","4","5","6","7","8","radialXF","scaleRadial","PI","polygonSurroundLineFunction","d","y","curve","Tile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSvg","bind","assertThisInitialized","node","group","select","append","selectAll","remove","_this$props","cellWidth","cellHeight","data","shapeSideCount","shapeType","throughHoleExists","throughHoleRadius","throughHoleX","throughHoleY","xOffset","yDataDomain","yOffset","halfSquared","pow","radialYF","radialLineFunction","angle","radius","attr","concat","rotation","vertices","toConsumableArray","Array","i","radian","convertDegreesToRadians","getCoordsFromRadiansAndRadius","push","getVerticesForSurroundingPolygon","Styles","datum","style","Component","TileGroup","subProps","dataSets","p","objectSpread","split","ds","chunk","yDataRange","uniq","flat","extent","assign","convertUnitsToPixels","units","width","_this2","setSubProps","react_default","a","createElement","ref","height","src_Tile","key","SettingsContext","React","createContext","Preview","Settings_context","Consumer","context","src_TileGroup","state","UnitSlider","row","col","span","marginTop","label","slider","value","min","max","step","defaultSliderStepSize","onChange","input_number","float","formatter","hideUnits","parser","replace","SettingsShape","Fragment","divider","offset","es_radio","Group","buttonStyle","e","setShapeType","target","Button","effectType","setEffectType","disabled","position","top","left","cellConstrainRatio","icon","type","onClick","toggleCellConstrainRatio","src_UnitSlider","setCellWidth","cellSizeMin","cellSizeMax","setCellHeight","setShapeSideCount","es_checkbox","marginBottom","checked","toggleThroughHoleExists","setThroughHoleRadius","setThroughHoleX","setThroughHoleY","Option","TextArea","examples","name","isolate","examplesOptions","SettingsDatum","es_select","defaultValue","val","console","log","handleExampleChange","rows","setDatum","presets","presetOptions","Settings_page_Option","margin","display","textAlign","setUnits","current","pageWidth","pageHeight","dimensions","setPageHeight","setPageWidth","handlePresetChange","pageWidthMax","pageHeightMax","TabPane","Settings","tabs","defaultActiveKey","tabBarStyle","tab","Settings_shape","Settings_datum","Settings_page","SettingsProvider","getStateKeysWithUnits","Provider","unit","factor","centimetersPerInch","inchesPerCentimenter","keys","zipped","zipObject","round","setState","s","bool","r","w","h","children","Content","Sider","App","Settings_provider","backgroundColor","fontFamily","color","padding","letterSpacing","fontSize","fontWeight","layout","background","src_Preview","marginRight","border","borderBottom","paddingBottom","src_Settings","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","testElement","setAttribute","body","appendChild","pixelsPerInch","offsetWidth","module","exports","Error","degrees","cos","sin"],"mappings":"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","file":"static/js/main.65f056a1.chunk.js","sourcesContent":["const colors = [\n  '#262626', // almost black\n  '#ffffff', // white\n  '#eb2f96', // magenta\n  '#1890ff', // blue\n  '#faad14', // gold\n];\n\n// eslint-disable-next-line import/prefer-default-export\nexport { colors };\n","import * as d3 from 'd3';\n\nfunction square(x) {\n  return x * x;\n}\n\nfunction radial() {\n  const linear = d3.scaleLinear();\n\n  function scale(x) {\n    return Math.sqrt(linear(x));\n  }\n\n  scale.domain = function domain(_) {\n    return arguments.length ? (linear.domain(_), scale) : linear.domain();\n  };\n\n  scale.range = function range(_) {\n    return arguments.length ? (linear.range(_.map(square)), scale) : linear.range().map(Math.sqrt);\n  };\n\n  return scale;\n}\n\nexport default radial;\n","import { Component } from 'react';\nimport { select } from 'd3-selection';\nimport * as d3 from 'd3';\n\nimport scaleRadial from './d3/scale-radial';\nimport * as Styles from './Styles';\nimport {\n  convertDegreesToRadians,\n  getCoordsFromRadiansAndRadius,\n} from './util';\n\n\n// surrounding polygons can \"look\" off center.\n// rotate each polygon a certain number of degrees\n// dependent on the number of sides\nconst rotationMap = {\n  3: -90, 4: 45, 5: -18, 6: 0, 7: 13, 8: 1,\n};\n\n// scale the x axis around a circle\nconst radialXF = scaleRadial().range([0, 2 * Math.PI]);\n\n// straight lines to connect the vertices of a polygon\nconst polygonSurroundLineFunction = d3\n  .line()\n  .x(d => d[0])\n  .y(d => d[1])\n  .curve(d3.curveLinearClosed);\n\n// return a [[x, y], [x,y]...] list of points to create the\n// vertices of a surrounding polygon\nfunction getVerticesForSurroundingPolygon(shapeSideCount, radius) {\n  const vertices = [...Array(shapeSideCount)].map((x, i) => {\n    const angle = (360 / shapeSideCount) * i;\n    const radian = convertDegreesToRadians(angle);\n\n    return getCoordsFromRadiansAndRadius(radian, radius);\n  });\n\n  vertices.push(vertices[0]);\n  return vertices;\n}\n\n\nclass Tile extends Component {\n  constructor(props) {\n    super(props);\n    this.updateSvg = this.updateSvg.bind(this);\n  }\n\n  componentDidUpdate() {\n    // I don't know why I can't put this in the component did mount...\n    const { node } = this.props;\n    if (!this.group) {\n      this.group = select(node).append('g');\n    }\n\n    this.group.selectAll('*').remove();\n    this.updateSvg();\n  }\n\n  updateSvg() {\n    const {\n      cellWidth,\n      cellHeight,\n      data,\n      shapeSideCount,\n      shapeType,\n      throughHoleExists,\n      throughHoleRadius,\n      throughHoleX,\n      throughHoleY,\n      xOffset,\n      yDataDomain,\n      yOffset,\n    } = this.props;\n\n    // set min and max y values\n    // constrain the y axis to the passed domain\n    const halfSquared = ((cellWidth / 2) ** 2) * 2;\n    const radialYF = scaleRadial().range([\n      cellWidth / 5,\n      Math.sqrt(halfSquared) * 0.5,\n    ]).domain(yDataDomain);\n\n    // constrain the x axis to this tile's x domain\n    radialXF.domain(d3.extent(data, d => d[0]));\n\n    const radialLineFunction = d3.lineRadial()\n      .angle(d => radialXF(d[0]))\n      .radius(d => radialYF(d[1]))\n      // .curve(d3.curveLinearClosed);\n      .curve(d3.curveBasisClosed);\n\n    // draw the group for this tile which contains all other shapes\n    this.group\n      .attr(\n        'transform',\n        `translate(${xOffset}, ${yOffset})`,\n      )\n      .attr('width', cellWidth)\n      .attr('height', cellHeight);\n\n    // optionally draw a surrounding polygon\n    if (shapeType === 'surround') {\n      const rotation = rotationMap[shapeSideCount] || 0;\n      const vertices = getVerticesForSurroundingPolygon(shapeSideCount, cellWidth / 2);\n\n      if (shapeSideCount === 2) {\n        this.group.append('circle')\n          .attr('fill', 'none')\n          .attr('stroke', Styles.colors[2])\n          .attr('r', cellWidth / 2)\n          .attr('cx', cellWidth / 2)\n          .attr('cy', cellWidth / 2)\n          .attr('stroke-width', 1);\n      } else {\n        this.group\n          .append('path')\n          .datum(vertices)\n          .attr('fill', 'none')\n          .attr('stroke', Styles.colors[2])\n          .attr('stroke-width', 1)\n          .attr('transform', `rotate(${rotation}, ${cellWidth / 2}, ${cellHeight / 2})`)\n          .attr('d', polygonSurroundLineFunction);\n      }\n    }\n\n    this.group\n      .append('path')\n      .attr(\n        'transform',\n        `translate(${(cellWidth / 2)}, ${(cellWidth / 2)})`,\n      )\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', Styles.colors[2])\n      .attr('d', radialLineFunction)\n      .style('stroke-linecap', 'round')\n      .style('stroke-linejoin', 'round')\n      .attr('stroke-width', 3);\n\n    if (throughHoleExists) {\n      this.group.append('circle')\n        .attr('cx', throughHoleX)\n        .attr('cy', throughHoleY)\n        .attr('fill', 'none')\n        .attr('stroke', Styles.colors[2])\n        .attr('r', throughHoleRadius)\n        .attr('stroke-width', 1);\n    }\n  }\n\n  render() { return ''; }\n}\n\nexport default Tile;\n","import React, { Component } from 'react';\nimport { extent } from 'd3';\nimport { chunk, uniq } from 'lodash';\n\nimport Tile from './Tile';\nimport { convertUnitsToPixels } from './util';\n\n\nclass TileGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.subProps = { dataSets: [] };\n  }\n\n  setSubProps() {\n    const { props: p } = this;\n    this.subProps = { ...p };\n\n    // break the stringed datasets into rows and columns\n    const dataSets = p\n      .datum\n      .split('\\n')\n      .map(ds => chunk(ds.split(','), 2));\n\n    // list all possible ranges for the y column\n    const yDataRange = uniq(\n      dataSets.map(ds => (\n        ds.map(d => d[1])\n      )).flat(),\n    );\n\n    // find the highest and lowest values for the y value\n    const yDataDomain = extent(yDataRange);\n\n    Object.assign(this.subProps, {\n      dataSets,\n      yDataDomain,\n      cellWidth: convertUnitsToPixels(p.cellWidth, p.units),\n      cellHeight: convertUnitsToPixels(p.cellHeight, p.units),\n      throughHoleRadius: convertUnitsToPixels(p.throughHoleRadius, p.units),\n      throughHoleX: convertUnitsToPixels(p.throughHoleX, p.units),\n      throughHoleY: convertUnitsToPixels(p.throughHoleY, p.units),\n    });\n    this.subProps.width = this.subProps.cellWidth * this.subProps.datum.length;\n  }\n\n  render() {\n    this.setSubProps();\n    return (\n      <svg\n        ref={(node) => { this.node = node; }}\n        width={this.subProps.width}\n        height={this.subProps.cellHeight}\n      >\n        {this.subProps.dataSets.map((data, i) => (\n          <Tile\n            cellWidth={this.subProps.cellWidth}\n            cellHeight={this.subProps.cellHeight}\n            data={data}\n            // eslint-disable-next-line react/no-array-index-key\n            key={i}\n            node={this.node}\n            shapeSideCount={this.subProps.shapeSideCount}\n            shapeType={this.subProps.shapeType}\n            throughHoleExists={this.subProps.throughHoleExists}\n            throughHoleRadius={this.subProps.throughHoleRadius}\n            throughHoleX={this.subProps.throughHoleX}\n            throughHoleY={this.subProps.throughHoleY}\n            xOffset={i * this.subProps.cellWidth}\n            yDataDomain={this.subProps.yDataDomain}\n            yOffset={0}\n          />\n        ))}\n      </svg>\n    );\n  }\n}\n\nexport default TileGroup;\n","import React from 'react';\n\nconst SettingsContext = React.createContext();\n\nexport default SettingsContext;\n","import React from 'react';\n\nimport TileGroup from './TileGroup';\nimport SettingsContext from './Settings.context';\n\nfunction Preview() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <TileGroup\n          cellWidth={context.state.cellWidth}\n          cellHeight={context.state.cellHeight}\n          datum={context.state.datum}\n          shapeSideCount={context.state.shapeSideCount}\n          shapeType={context.state.shapeType}\n          throughHoleExists={context.state.throughHoleExists}\n          throughHoleRadius={context.state.throughHoleRadius}\n          throughHoleX={context.state.throughHoleX}\n          throughHoleY={context.state.throughHoleY}\n          units={context.state.units}\n        />\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default Preview;\n","import React from 'react';\n\nimport {\n  Row,\n  Col,\n  Slider,\n  InputNumber,\n} from 'antd';\n\nimport SettingsContext from './Settings.context';\n\nfunction UnitSlider(props) {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <Row>\n          <Col span={4}>\n            <div style={{ marginTop: '7px' }}>{props.label}</div>\n          </Col>\n          <Col span={14}>\n            <Slider\n              value={props.value}\n              min={props.min}\n              max={props.max}\n              step={props.step || context.state.defaultSliderStepSize}\n              onChange={props.onChange}\n            />\n          </Col>\n          <Col span={6}>\n            <InputNumber\n              style={{ float: 'right' }}\n              min={props.min}\n              max={props.max}\n              value={props.value}\n              onChange={props.onChange}\n              step={props.step || context.state.defaultSliderStepSize}\n              formatter={(value) => {\n                if (!props.hideUnits) {\n                  return `${value} ${context.state.units}`;\n                }\n                return value;\n              }}\n              parser={value => value.replace(context.state.units, '')}\n            />\n          </Col>\n        </Row>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default UnitSlider;\n","import React from 'react';\nimport {\n  Checkbox,\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Icon,\n} from 'antd';\n\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\n\n\nfunction SettingsShape() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Form</Divider>\n\n          <Row>\n            <Col span={10} offset={2}>\n              <Radio.Group\n                value={context.state.shapeType}\n                buttonStyle=\"solid\"\n                onChange={e => context.setShapeType(e.target.value)}\n              >\n                <Radio.Button value=\"surround\">Surround</Radio.Button>\n                <Radio.Button value=\"isolate\">Isolate</Radio.Button>\n              </Radio.Group>\n            </Col>\n            <Col span={10} offset={2}>\n              <Radio.Group\n                value={context.state.effectType}\n                buttonStyle=\"solid\"\n                onChange={e => context.setEffectType(e.target.value)}\n              >\n                <Radio.Button value=\"etch\" disabled={context.state.shapeType === 'isolate'}>Etch</Radio.Button>\n                <Radio.Button value=\"cut\">Cut</Radio.Button>\n              </Radio.Group>\n            </Col>\n          </Row>\n\n          <Divider>Cell</Divider>\n\n          <div style={{ position: 'relative', top: '45px', left: '-30px' }}>\n            { context.state.cellConstrainRatio ? (\n              <Icon type=\"lock\" onClick={context.toggleCellConstrainRatio} />\n            ) : (\n              <Icon type=\"unlock\" onClick={context.toggleCellConstrainRatio} />\n            )}\n          </div>\n\n          <UnitSlider\n            label=\"Width\"\n            onChange={context.setCellWidth}\n            value={context.state.cellWidth}\n            min={context.state.cellSizeMin}\n            max={context.state.cellSizeMax}\n          />\n          <UnitSlider\n            label=\"Height\"\n            onChange={context.setCellHeight}\n            value={context.state.cellHeight}\n            min={context.state.cellSizeMin}\n            max={context.state.cellSizeMax}\n          />\n\n          { context.state.shapeType === 'surround' && (\n          <UnitSlider\n            label=\"Sides\"\n            onChange={context.setShapeSideCount}\n            value={context.state.shapeSideCount}\n            min={2}\n            max={8}\n            step={1}\n            hideUnits\n          />\n          )}\n\n          <Divider>Through</Divider>\n          <Row>\n            <Col>\n              <Checkbox\n                style={{ float: 'right', marginBottom: 20 }}\n                checked={context.state.throughHoleExists}\n                onChange={context.toggleThroughHoleExists}\n              >\n                Through Hole\n              </Checkbox>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Radius\"\n            onChange={context.setThroughHoleRadius}\n            value={context.state.throughHoleRadius}\n            min={0}\n            max={Math.min(context.state.cellHeight, context.state.cellWidth)}\n          />\n          <UnitSlider\n            label=\"X\"\n            onChange={context.setThroughHoleX}\n            value={context.state.throughHoleX}\n            min={0}\n            max={context.state.cellWidth}\n          />\n          <UnitSlider\n            label=\"Y\"\n            onChange={context.setThroughHoleY}\n            value={context.state.throughHoleY}\n            min={0}\n            max={context.state.cellHeight}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsShape;\n","import React from 'react';\nimport {\n  Divider,\n  Input,\n  Select,\n} from 'antd';\n\nimport SettingsContext from './Settings.context';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst examples = [\n  {\n    name: 'Median Antarctic annual temperature (1900 - 2018)', // walnut on a dowel\n    isolate: true,\n  },\n  {\n    name: 'Daily S&P 500 closing price, grouped by financial quarter (2004 - 2012)',\n    shapeSideCount: 1,\n  },\n  {\n    name: 'Annual sum of singles, doubles and triples for the Kansas City Royals (1969-2018)', // blue plastic discs with labels\n    isolate: true,\n  },\n];\n\nconst examplesOptions = examples.map((e, i) => {\n  // eslint-disable-next-line react/no-array-index-key\n  return <Option key={i} value={i}>{e.name}</Option>;\n});\nexamplesOptions.push(\n  <Option key=\"custom\" value={examples.length}>Custom</Option>,\n);\n\nfunction handleExampleChange(val, context) {\n  console.log(val);\n}\n\nfunction SettingsDatum() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Examples</Divider>\n          <Select\n            defaultValue={6}\n            style={{ width: 500 }}\n            onChange={val => handleExampleChange(val, context)}\n          >\n            {examplesOptions}\n          </Select>\n          <Divider>Data Entry</Divider>\n          <TextArea\n            rows={10}\n            value={context.state.datum}\n            onChange={e => context.setDatum(e.target.value)}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsDatum;\n","import React from 'react';\nimport {\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Select,\n} from 'antd';\n\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\n\nconst { Option } = Select;\nconst presets = [\n  {\n    name: 'Epilog Fusion Pro 48',\n    width: 48,\n    height: 36,\n  },\n  {\n    name: 'Epilog Fusion Pro 32',\n    width: 32,\n    height: 20,\n  },\n  {\n    name: 'Epilog Helix',\n    width: 24,\n    height: 18,\n  },\n  {\n    name: 'Epilog Mini 24',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Mini 18',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 24',\n    width: 24,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 16',\n    width: 16,\n    height: 12,\n  },\n];\n\nconst presetOptions = presets.map((p, i) => {\n  return <Option key={p.name} value={i}>{p.name}</Option>;\n});\npresetOptions.push(\n  <Option key=\"default\" value={presets.length}>Custom</Option>,\n);\n\nfunction handlePresetChange(val, context) {\n  if (context.state.units !== 'in') {\n    context.setUnits('in');\n  }\n\n  const current = { width: context.state.pageWidth, height: context.state.pageHeight }\n  const dimensions = presets[val] || current;\n  context.setPageHeight(dimensions.height);\n  context.setPageWidth(dimensions.width);\n}\n\nfunction SettingsShape() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Units</Divider>\n\n          <Row>\n            <Col>\n              <Radio.Group\n                style={{ margin: 'auto', display: 'block', textAlign: 'center' }}\n                value={context.state.units}\n                buttonStyle=\"solid\"\n                onChange={e => context.setUnits(e.target.value)}\n              >\n                <Radio.Button value=\"in\">Inches</Radio.Button>\n                <Radio.Button value=\"cm\">Centimeters</Radio.Button>\n              </Radio.Group>\n            </Col>\n          </Row>\n\n          <Divider>Dimensions</Divider>\n\n          <Row style={{ marginBottom: 10 }}>\n            <Col>\n              <Select defaultValue={6} style={{ width: 200, float: 'right' }} onChange={val => handlePresetChange(val, context)}>\n                {presetOptions}\n              </Select>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Width\"\n            onChange={context.setPageWidth}\n            value={context.state.pageWidth}\n            min={0}\n            max={context.state.pageWidthMax}\n          />\n          <UnitSlider\n            label=\"Height\"\n            onChange={context.setPageHeight}\n            value={context.state.pageHeight}\n            min={0}\n            max={context.state.pageHeightMax}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsShape;\n","import React from 'react';\nimport {\n  Tabs,\n  Row,\n  Col,\n} from 'antd';\n\nimport SettingsShape from './Settings-shape';\nimport SettingsDatum from './Settings-datum';\nimport SettingsPage from './Settings-page';\n\nconst { TabPane } = Tabs;\n\nfunction Settings() {\n  return (\n    <Tabs defaultActiveKey=\"1\" tabBarStyle={{ textAlign: 'center' }}>\n      <TabPane tab=\"Form\" key=\"1\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsShape />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Data\" key=\"2\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsDatum />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Page\" key=\"3\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsPage />\n          </Col>\n        </Row>\n      </TabPane>\n    </Tabs>\n  );\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { zipObject, round } from 'lodash';\n\nimport { inchesPerCentimenter, centimetersPerInch } from './util';\nimport SettingsContext from './Settings.context';\n\nconst precision = 2;\n\nclass SettingsProvider extends Component {\n  state = {\n    cellWidth: 4,\n    cellHeight: 4,\n    cellSizeMin: 1,\n    cellSizeMax: 10,\n    cellConstrainRatio: true,\n    datum: '1,14,2,10,3,10,4,500,5,100',\n    defaultSliderStepSize: 0.01,\n    effectType: 'etch',\n    pageWidth: 24,\n    pageWidthMax: 48,\n    pageHeight: 12,\n    pageHeightMax: 96,\n    shapeType: 'surround',\n    shapeSideCount: 4,\n    throughHoleExists: true,\n    throughHoleRadius: 0.25,\n    throughHoleX: 3.5,\n    throughHoleY: 0.5,\n    units: 'in',\n  }\n\n  getStateKeysWithUnits = () => [\n    'defaultSliderStepSize',\n    'cellWidth', 'cellHeight', 'cellSizeMin', 'cellSizeMax',\n    'throughHoleRadius', 'throughHoleX', 'throughHoleY',\n    'pageWidth', 'pageWidthMax', 'pageHeight', 'pageHeightMax',\n  ]\n\n  render() {\n    return (\n      <SettingsContext.Provider value={{\n        state: this.state,\n        setUnits: (unit) => {\n          const { state } = this;\n          if (state.units !== unit) {\n            const factor = unit === 'cm' ? centimetersPerInch : inchesPerCentimenter;\n\n            const keys = this.getStateKeysWithUnits();\n            const zipped = zipObject(\n              keys,\n              keys.map(key => round(state[key] * factor, precision)),\n            );\n            this.setState(zipped);\n          }\n\n          this.setState({ units: unit });\n        },\n        setDatum: datum => this.setState({ datum }),\n        setShapeType: (shapeType) => {\n          this.setState({ shapeType });\n          if (shapeType === 'isolate') {\n            this.setState({ effectType: 'cut' });\n          }\n        },\n        setEffectType: effectType => this.setState({ effectType }),\n        setShapeSideCount: shapeSideCount => this.setState({\n          shapeSideCount,\n        }),\n        setCellWidth: (width) => {\n          const { state } = this;\n          const s = round(width, 2);\n          this.setState({ cellWidth: s });\n          if (state.cellConstrainRatio) {\n            this.setState({ cellHeight: s });\n          }\n        },\n        setCellHeight: (height) => {\n          const { state } = this;\n          const s = round(height, 2);\n          this.setState({ cellHeight: s });\n          if (state.cellConstrainRatio) {\n            this.setState({ cellWidth: s });\n          }\n        },\n        toggleCellConstrainRatio: () => {\n          const { state } = this;\n          const bool = !state.cellConstrainRatio;\n          this.setState({\n            cellConstrainRatio: bool,\n          });\n        },\n        toggleThroughHoleExists: () => {\n          const { state } = this;\n          const bool = !state.throughHoleExists;\n          this.setState({\n            throughHoleExists: bool,\n          });\n        },\n        setThroughHoleRadius: (r) => {\n          const throughHoleRadius = round(r, 2);\n          this.setState({ throughHoleRadius });\n        },\n        setThroughHoleX: (x) => {\n          const throughHoleX = round(x, 2);\n          this.setState({ throughHoleX });\n        },\n        setThroughHoleY: (y) => {\n          const throughHoleY = round(y, 2);\n          this.setState({ throughHoleY });\n        },\n        setPageWidth: (w) => {\n          const pageWidth = round(w, 2);\n          this.setState({ pageWidth });\n        },\n        setPageHeight: (h) => {\n          const pageHeight = round(h, 2);\n          this.setState({ pageHeight });\n        },\n      }}\n      >\n        {this.props.children}\n      </SettingsContext.Provider>\n    );\n  }\n}\n\nexport default SettingsProvider;\n","import React from 'react';\nimport {\n  Col,\n  Layout,\n  Row,\n} from 'antd';\n\nimport * as Styles from './Styles';\nimport Preview from './Preview';\nimport Settings from './Settings';\nimport SettingsProvider from './Settings.provider';\n\nconst {\n  Content,\n  Sider,\n} = Layout;\n\nfunction App() {\n  return (\n    <SettingsProvider>\n      <Row style={{ backgroundColor: Styles.colors[0] }}>\n        <Col span={23} offset={1}>\n          <h1 style={{\n            fontFamily: \"'Share Tech Mono', monospace\",\n            color: Styles.colors[1],\n            padding: '10px 0 7px 0',\n            margin: 0,\n            letterSpacing: 20,\n            fontSize: '40px',\n            fontWeight: 'bold',\n          }}\n          >\n            DATA FORMS\n          </h1>\n        </Col>\n      </Row>\n\n      <Layout style={{ background: 'none' }}>\n        <Content>\n          <Row>\n            <Col\n              span={24}\n              style={{ marginTop: 20 }}\n            >\n              <Preview />\n            </Col>\n          </Row>\n        </Content>\n\n        <Sider\n          width={500}\n          style={{\n            background: Styles.colors[1],\n            marginRight: 20,\n            marginTop: -35,\n            border: `1px solid ${Styles.colors[0]}`,\n            borderBottom: 'none',\n            paddingBottom: 50,\n          }}\n        >\n          <Settings />\n        </Sider>\n\n      </Layout>\n    </SettingsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const centimetersPerInch = 2.54;\nconst inchesPerCentimenter = 0.393701;\n\nconst testElement = document.createElement('div');\ntestElement.setAttribute('id', 'test-element');\ntestElement.setAttribute('style', 'width: 1in; height: 1in');\ndocument.body.appendChild(testElement);\n\nconst pixelsPerInch = testElement.offsetWidth;\n\nfunction convertUnitsToPixels(float, unit) {\n  if (unit === 'in') {\n    return float * pixelsPerInch;\n  }\n  if (unit === 'cm') {\n    return float * pixelsPerInch * centimetersPerInch;\n  }\n\n  throw new Error(`${unit} unit not supported`);\n}\n\nfunction convertDegreesToRadians(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\n// pass in a radian and the radius of a circle\n// get back an array with 2 items: [xPosition, yPosition]\nfunction getCoordsFromRadiansAndRadius(radian, radius) {\n  return [\n    Math.round(Math.cos(radian) * radius) + radius,\n    Math.round(Math.sin(radian) * radius) + radius,\n  ];\n}\n\nmodule.exports = {\n  convertUnitsToPixels,\n  centimetersPerInch,\n  inchesPerCentimenter,\n  convertDegreesToRadians,\n  getCoordsFromRadiansAndRadius,\n};\n"],"sourceRoot":""}