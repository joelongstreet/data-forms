{"version":3,"sources":["Styles.js","util.js","Analytics.js","Contact.form.js","Footer.js","Settings.context.js","Legend.js","PagePreview.js","Tile.js","Tiles.js","Preview.js","UnitSlider.js","Settings-shape.js","Examples.js","Settings-datum.js","Settings-page.js","Settings.js","Settings.provider.js","App.js","serviceWorker.js","index.js"],"names":["colors","module","exports","headerHeight","footerHeight","divider","marginTop","previewVerticalCellPadding","getLegendLineStyle","styleColorIndex","borderTop","concat","width","float","marginRight","centimetersPerInch","pixelsPerInch","convertDegreesToRadians","degrees","Math","PI","convertUnitsToPixels","unit","Error","getCoordsFromRadiansAndRadius","radian","radius","round","cos","sin","inchesPerCentimenter","svgDocumentMeta","version","xmlns","xmlns:xlink","xml:space","xmlns:dataforms","svgDownloadContainerId","isProduction","env","GA","initialize","ga","tracker","trackerClientId","get","fullstoryInitted","setInterval","window","_fs_namespace","FullStoryAPI","clearInterval","Analytics","react_default","a","createElement","Fragment","build_default","org","NestedForm","handleSubmit","e","_this$props","_this","props","form","onSubmit","preventDefault","validateFields","err","values","label","name","email","message","replace","substring","event","category","action","getFieldDecorator","this","style","href","rel","target","es_form","Item","rules","required","type","input","whitespace","TextArea_default","es_button","htmlType","React","Component","ContactForm","create","Footer","state","contactModalVisible","showContactModal","setState","closeContactModal","row","height","Styles","position","bottom","col","span","offset","padding","onClick","modal","onCancel","visible","footer","wrapClassName","Contact_form","SettingsContext","createContext","Legend","Settings_context","Consumer","context","cursor","paddingRight","left","border","borderLeft","zIndex","top","setEffectType","scaleFactor","PagePreview","cellSize","datum","pageHeight","pageWidth","units","dataRowCount","split","length","s","w","h","console","log","right","times","boxSizing","margin","rotationMap","3","4","5","6","7","8","polygonSurroundLineFunction","d3","x","d","y","curve","Tile","curveOffsetX","curveOffsetY","curveRotation","curveScaleX","curveScaleY","curveType","data","effectType","etchWidth","group","isPreview","lineType","forceClose","shapeSideCount","showSurround","throughHoleExists","throughHoleRadius","throughHoleX","throughHoleY","xOffset","yDomain","yOffset","etchColor","cutColor","cutPathWidth","map","i","push","xF","yF","lineF","xDomain","range","domain","angle","attr","rotation","vertices","Object","toConsumableArray","Array","getVerticesForSurroundingPolygon","append","translate","curvePathWidth","curveColor","curveTranslationString","curveRotationString","dontRenderOnUpdate","Tiles","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderD3","bind","assertThisInitialized","svg","createRef","prevProps","keys","some","key","includes","fauxDoc","connectFauxDOM","fauxDocPreview","select","svgPreview","empty","isDramatic","isSingleton","dataSets","ds","reduce","r","Number","uniq","flat","reverse","svgPreviewHeight","attrs","display","assign","viewBox","selectAll","remove","tileOptions","opts","cellsPerRow","floor","offsetPlusOne","drawFauxDOM","document","documentPreview","FauxDom","withFauxDOM","Preview","scrollArea","textAreaHighlightIndex","cellWithPadding","scrollTo","ref","smooth","overflow","src_Tiles","ScrollToHOC","handleSelect","setSelectionRange","value","UnitSlider","slider","disabled","min","max","step","defaultSliderStepSize","onChange","input_number","val","stateSetter","num","isNaN","handleChange","paddingTop","fontSize","hideUnits","Option","curves","functionName","title","curveOptions","getDefaultCurve","findIndex","c","SettingsShape","es_checkbox","marginBottom","checked","setShowSurround","src_UnitSlider","setCellSize","cellSizeMin","cellSizeMax","setShapeSideCount","setThroughHoleExists","setThroughHoleRadius","setThroughHoleX","setThroughHoleY","es_radio","Group","setLineType","Button","setForceClose","es_select","defaultValue","setCurveType","handleCurveChange","setCurveScaleX","setCurveScaleY","setCurveRotation","setCurveOffsetX","setCurveOffsetY","Examples","description","settings","TextArea","examplesOptions","Settings_datum_Option","handleExampleChange","forEach","settingKey","fn","charAt","toUpperCase","slice","calculateTilePreviewPosition","line","substr","selectionStart","setTextAreaHighlightIndex","defaultSelectValue","random","SettingsDatum","shapeType","setIsSingleton","setEtchWidth","etchWidthMin","etchWidthMax","setIsDramatic","Settings_datum_TextArea","rows","onKeyUp","fontFamily","setDatum","contextType","presets","presetOptions","p","Settings_page_Option","downloadSvgDocument","svgDocument","getElementById","innerHTML","file","btoa","timestamp","dayjs","format","aLink","download","dispatchEvent","MouseEvent","SettingsPage","textAlign","setUnits","current","dimensions","setPageHeight","setPageWidth","handlePresetChange","pageWidthMax","pageHeightMax","TabPane","Settings","tabs","defaultActiveKey","tabBarStyle","paddingBottom","tab","Settings_shape","Settings_datum","Settings_page","SettingsProvider","getStateKeysWithUnits","_this2","children","Provider","factor","zipped","zipObject","Content","Sider","App","Settings_provider","src_Legend","borderBottom","color","letterSpacing","textShadow","layout","background","src_PagePreview","src_Preview","overflowY","src_Settings","src_Footer","src_Analytics","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c9607e4.chunk.js","sourcesContent":["const colors = [\n  'rgb(36, 41, 52)', // black\n  'rgb(203, 204, 198)', // white\n  'rgb(212, 193, 253)', // purple\n  'rgb(187, 229, 131)', // green\n  'rgb(244, 205, 130)', // gold\n  'rgb(90, 101, 112)', // grey (white)\n  'rgb(240, 135, 123)', // red,\n  'rgb(45, 55, 65)', // grey (black)\n  'rgb(255, 255, 255)', // white white\n  'rgb(95,202,224)', // blue\n];\n\nconst divider = { marginTop: 75 };\nconst previewVerticalCellPadding = 50;\nconst headerHeight = 77;\nconst footerHeight = 75;\n\nfunction getLegendLineStyle(styleColorIndex) {\n  return {\n    borderTop: `1px solid ${colors[styleColorIndex]}`,\n    width: 10,\n    float: 'left',\n    marginTop: 10,\n    marginRight: 10,\n  };\n}\n\nmodule.exports = {\n  colors,\n  headerHeight,\n  footerHeight,\n  divider,\n  previewVerticalCellPadding,\n  getLegendLineStyle,\n};\n","const centimetersPerInch = 2.54;\nconst inchesPerCentimenter = 0.393701;\nconst pixelsPerInch = 96;\nconst svgDownloadContainerId = 'svg-download-container';\n\nfunction convertUnitsToPixels(float, unit) {\n  if (unit === 'in') {\n    return float * pixelsPerInch;\n  }\n  if (unit === 'cm') {\n    return (float * pixelsPerInch) / centimetersPerInch;\n  }\n\n  throw new Error(`${unit} unit not supported`);\n}\n\nfunction convertDegreesToRadians(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\n// pass in a radian and the radius of a circle\n// get back an array with 2 items: [xPosition, yPosition]\nfunction getCoordsFromRadiansAndRadius(radian, radius) {\n  return [\n    Math.round(Math.cos(radian) * radius) + radius,\n    Math.round(Math.sin(radian) * radius) + radius,\n  ];\n}\n\nconst svgDocumentMeta = {\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  'xml:space': 'preserve',\n  'xmlns:dataforms': 'http://joelongstreet.com',\n};\n\nmodule.exports = {\n  centimetersPerInch,\n  convertDegreesToRadians,\n  convertUnitsToPixels,\n  getCoordsFromRadiansAndRadius,\n  inchesPerCentimenter,\n  pixelsPerInch,\n  svgDocumentMeta,\n  svgDownloadContainerId,\n};\n","import React from 'react';\nimport FullStory, { FullStoryAPI } from 'react-fullstory';\nimport GA from 'react-ga';\n\nconst env = process.env.NODE_ENV;\nconst isProduction = env === 'production';\n\nif (isProduction) {\n  GA.initialize('UA-137049621-1');\n  GA.ga((tracker) => {\n    const trackerClientId = tracker.get('clientId');\n\n    const fullstoryInitted = setInterval(() => {\n      if (window._fs_namespace) {\n        FullStoryAPI('identify', trackerClientId);\n        clearInterval(fullstoryInitted);\n      }\n    }, 500);\n  });\n}\n\nfunction Analytics() {\n  return (\n    <React.Fragment>\n      { isProduction\n        && <FullStory org=\"K5HZ8\" />\n      }\n    </React.Fragment>\n  );\n}\n\nexport default Analytics;\n","import React from 'react';\nimport GA from 'react-ga';\n\nimport {\n  Button, Form, Input,\n} from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\n\nclass NestedForm extends React.Component {\n  handleSubmit = (e) => {\n    const { form, onSubmit } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        let label = `${values.name} | ${values.email} | ${values.message}`;\n        // https://github.com/react-ga/react-ga/issues/144\n        label = label.replace('@', ' at ');\n        // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#el\n        label = label.substring(0, 500);\n\n        GA.event({\n          category: 'Contact',\n          action: 'Contact:Submit',\n          label,\n        });\n\n        onSubmit();\n      }\n    });\n  }\n\n  render() {\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n\n    return (\n      <React.Fragment>\n        <h3 style={{ marginRight: 35 }}>\n          { /* eslint-disable-next-line max-len */ }\n          { /* eslint-disable-next-line react/no-unescaped-entities, react/jsx-one-expression-per-line */ }\n          Say hi 👋. Tell me what you've made with DataForms. Send me feature requests. Contribute at <a href=\"https://github.com/joelongstreet/data-forms\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a>.\n        </h3>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item label=\"E-mail\">\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, type: 'email', message: 'Not a valid email address' },\n              ],\n            })(\n              <Input />,\n            )}\n          </Form.Item>\n          <Form.Item label=\"Name\">\n            {getFieldDecorator('name', {\n              rules: [\n                { required: true, message: 'What\\'s your name?', whitespace: true },\n              ],\n            })(\n              <Input />,\n            )}\n          </Form.Item>\n          <Form.Item label=\"Message\">\n            {getFieldDecorator('message', {\n              rules: [\n                { required: true, message: 'What would you like to tell me?', whitespace: true },\n              ],\n            })(\n              <TextArea />,\n            )}\n          </Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">Send</Button>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ContactForm = Form.create({ name: 'contact_form' })(NestedForm);\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport { Col, Modal, Row } from 'antd';\n\nimport ContactForm from './Contact.form';\nimport * as Styles from './Styles';\n\n\nclass Footer extends Component {\n  state = {\n    contactModalVisible: false,\n  }\n\n  showContactModal = (e) => {\n    e.preventDefault();\n    this.setState({ contactModalVisible: true });\n  }\n\n  closeContactModal = () => {\n    this.setState({ contactModalVisible: false });\n  }\n\n  render() {\n    const { contactModalVisible } = this.state;\n    return (\n      <React.Fragment>\n        <Row style={{\n          height: Styles.footerHeight,\n          borderTop: `1px solid ${Styles.colors[5]}`,\n          position: 'absolute',\n          bottom: 0,\n          width: '100%',\n        }}\n        >\n          <Col\n            span={23}\n            offset={1}\n            style={{\n              marginRight: 20, marginTop: 10, padding: '15px 0 30px',\n            }}\n          >\n            <a\n              style={{ padding: 20 }}\n              href=\"#contact-modal\"\n              onClick={this.showContactModal}\n            >\n              Contact\n            </a>\n            <span> | </span>\n            <a\n              style={{ padding: 20 }}\n              href=\"https://github.com/joelongstreet/data-forms\"\n              target=\"blank\"\n            >\n              Github\n            </a>\n          </Col>\n        </Row>\n        <Modal\n          onCancel={this.closeContactModal}\n          visible={contactModalVisible}\n          footer={[]}\n          wrapClassName=\"ant-modal-wrap-contact\"\n        >\n          <ContactForm onSubmit={this.closeContactModal} />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nconst SettingsContext = React.createContext();\n\nexport default SettingsContext;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport * as Styles from './Styles';\n\nimport SettingsContext from './Settings.context';\n\n\nfunction Legend() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <div\n          style={{\n            cursor: 'pointer',\n            padding: 10,\n            paddingRight: 20,\n            left: 0,\n            border: `1px solid ${Styles.colors[5]}`,\n            borderLeft: 'none',\n            position: 'absolute',\n            zIndex: 999,\n            top: Styles.headerHeight + 30,\n          }}\n        >\n          <div onClick={() => context.setEffectType('cut')}>\n            <div style={Styles.getLegendLineStyle(2)} />\n            Cut\n          </div>\n          <div onClick={() => context.setEffectType('etch')}>\n            <div style={Styles.getLegendLineStyle(3)} />\n            Etch\n          </div>\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default Legend;\n","import React from 'react';\nimport { times } from 'lodash';\n\nimport * as Styles from './Styles';\nimport { convertUnitsToPixels } from './util';\n\nconst scaleFactor = 10;\n\nfunction PagePreview(props) {\n  const {\n    cellSize,\n    datum,\n    pageHeight,\n    pageWidth,\n    units,\n  } = props;\n\n  const dataRowCount = datum.split('\\n').length;\n  const s = convertUnitsToPixels(cellSize, units) / scaleFactor;\n  const w = convertUnitsToPixels(pageWidth, units) / scaleFactor;\n  const h = convertUnitsToPixels(pageHeight, units) / scaleFactor;\n\n  console.log(s);\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        bottom: 20,\n        right: 20,\n        border: `1px solid ${Styles.colors[1]}`,\n        width: w,\n        height: h,\n      }}\n    >\n      {times(dataRowCount, () => (\n        <div\n          style={{\n            width: s,\n            height: s,\n            border: `1px solid ${Styles.colors[6]}`,\n            boxSizing: 'border-box',\n            float: 'left',\n            margin: 1,\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default PagePreview;\n","import * as d3 from 'd3';\n\nimport * as Styles from './Styles';\nimport {\n  convertDegreesToRadians,\n  getCoordsFromRadiansAndRadius,\n} from './util';\n\n\n// surrounding polygons can \"look\" off center.\n// rotate each polygon a certain number of degrees\n// dependent on the number of sides\nconst rotationMap = {\n  3: -90, 4: 0, 5: -18, 6: 0, 7: 38.5, 8: 0,\n};\n\n// straight lines to connect the vertices of a polygon\nconst polygonSurroundLineFunction = d3\n  .line()\n  .x(d => d[0])\n  .y(d => d[1])\n  .curve(d3.curveLinearClosed);\n\n// return a [[x, y], [x,y]...] list of points to create the\n// vertices of a surrounding polygon\nfunction getVerticesForSurroundingPolygon(shapeSideCount, radius) {\n  const vertices = [...Array(shapeSideCount)].map((x, i) => {\n    const angle = (360 / shapeSideCount) * i;\n    const radian = convertDegreesToRadians(angle);\n\n    return getCoordsFromRadiansAndRadius(radian, radius);\n  });\n\n  vertices.push(vertices[0]);\n  return vertices;\n}\n\n\nfunction Tile(props) {\n  const {\n    cellSize,\n    curveOffsetX,\n    curveOffsetY,\n    curveRotation,\n    curveScaleX,\n    curveScaleY,\n    curveType,\n    data,\n    effectType,\n    etchWidth,\n    group,\n    isPreview,\n    lineType,\n    forceClose,\n    shapeSideCount,\n    showSurround,\n    throughHoleExists,\n    throughHoleRadius,\n    throughHoleX,\n    throughHoleY,\n    xOffset,\n    yDomain,\n    yOffset,\n  } = props;\n\n  const etchColor = isPreview ? Styles.colors[3] : 'black';\n  const cutColor = isPreview ? Styles.colors[2] : 'black';\n  const cutPathWidth = isPreview ? 1 : 0.1;\n\n  // create a multidimensional array to give each item an x value (the indece)\n  const datum = data.map((d, i) => [i, d]);\n  if (forceClose) datum.push([data.length, data[0]]);\n\n  // scale x axis to the length of the data set\n  const xDomainMax = forceClose ? datum.length - 1 : datum.length;\n  const xDomain = [0, xDomainMax];\n\n  let xF;\n  let yF;\n  let lineF;\n\n  if (lineType === 'linear') {\n    xF = d3.scaleLinear()\n      .range([0, cellSize * curveScaleX])\n      .domain(xDomain);\n\n    yF = d3.scaleLinear()\n      .range([0, cellSize * curveScaleY])\n      .domain(yDomain);\n\n    lineF = d3.line()\n      .x(d => xF(d[0]))\n      .y(d => yF(d[1]));\n  } else if (lineType === 'radial') {\n    xF = d3.scaleTime()\n      .range([0, 2 * Math.PI])\n      .domain(xDomain);\n\n    yF = d3.scaleLinear().range([\n      (cellSize / (curveScaleY * 7)) * curveScaleX,\n      cellSize * curveScaleX,\n    ]).domain(yDomain);\n\n    lineF = d3.lineRadial()\n      .angle(d => xF(d[0]))\n      .radius(d => yF(d[1]));\n  }\n\n  lineF.curve(d3[curveType]);\n\n  // draw the group for this tile which contains all other shapes\n  group.attr(\n    'transform',\n    `translate(${xOffset}, ${yOffset})`,\n  );\n\n  // optionally draw a surrounding polygon\n  if (showSurround) {\n    const rotation = rotationMap[shapeSideCount] || 0;\n    const vertices = getVerticesForSurroundingPolygon(shapeSideCount, cellSize / 2);\n\n    if (shapeSideCount === 2) {\n      group.append('circle')\n        .attr('fill', 'none')\n        .attr('stroke', cutColor)\n        .attr('r', cellSize / 2)\n        .attr('cx', cellSize / 2)\n        .attr('cy', cellSize / 2)\n        .attr('stroke-width', cutPathWidth);\n    } else {\n      group\n        .append('path')\n        .datum(vertices)\n        .attr('fill', 'none')\n        .attr('stroke', cutColor)\n        .attr('stroke-width', cutPathWidth)\n        .attr('transform', `rotate(${rotation}, ${cellSize / 2}, ${cellSize / 2})`)\n        .attr('d', polygonSurroundLineFunction);\n    }\n  }\n\n  const translate = lineType === 'radial' ? [cellSize / 2, cellSize / 2] : [0, 0];\n  translate[0] += curveOffsetX;\n  translate[1] += curveOffsetY;\n\n  const curvePathWidth = effectType === 'etch' ? etchWidth : cutPathWidth;\n  const curveColor = effectType === 'etch' ? etchColor : cutColor;\n  const curveTranslationString = `${translate[0]}, ${translate[1]}`;\n  const curveRotationString = lineType === 'radial' ? curveRotation : `${curveRotation}, ${cellSize / 2}, ${cellSize / 2}`;\n\n  group\n    .append('path')\n    .attr(\n      'transform',\n      `translate(${curveTranslationString}) rotate(${curveRotationString})`,\n    )\n    .datum(datum)\n    .attr('fill', 'none')\n    .attr('stroke', curveColor)\n    .attr('d', lineF)\n    .attr('stroke-width', curvePathWidth);\n\n  if (throughHoleExists) {\n    group.append('circle')\n      .attr('cx', throughHoleX)\n      .attr('cy', throughHoleY)\n      .attr('fill', 'none')\n      .attr('stroke', Styles.colors[2])\n      .attr('r', throughHoleRadius / 2) // why?\n      .attr('stroke-width', cutPathWidth);\n  }\n\n  return group;\n}\n\nexport default Tile;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport 'd3-selection-multi';\nimport { withFauxDOM } from 'react-faux-dom';\nimport { uniq } from 'lodash';\n\nimport {\n  convertUnitsToPixels,\n  svgDocumentMeta,\n  svgDownloadContainerId,\n} from './util';\nimport * as Styles from './Styles';\nimport Tile from './Tile';\n\n\nconst dontRenderOnUpdate = [\n  'animateFauxDOM',\n  'connectFauxDOM',\n  'document',\n  'documentPreview',\n  'drawFauxDOM',\n  'isAnimagiontFauxDOM',\n  'stopAnimatingFauxDOM',\n];\n\nclass Tiles extends Component {\n  constructor(props) {\n    super(props);\n    this.renderD3 = this.renderD3.bind(this);\n    this.svg = React.createRef();\n  }\n\n  componentDidMount() {\n    this.renderD3();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { props } = this;\n\n    // fauxDom attaches items to props\n    // manually check props for update so we can ignore\n    // any magically added fauxDom props, avoids infinite\n    // redraw loops\n    const render = Object.keys(props).some((key) => {\n      if (dontRenderOnUpdate.includes(key)) return false;\n      return props[key] !== prevProps[key];\n    });\n\n    if (render) this.renderD3();\n  }\n\n  renderD3() {\n    const { props } = this;\n\n    // setup the faux doms and draw the svgs if they don't already exist\n    const fauxDoc = props.connectFauxDOM('div', 'document');\n    const fauxDocPreview = props.connectFauxDOM('div', 'documentPreview');\n    let svg = d3.select(fauxDoc).select('svg');\n    let svgPreview = d3.select(fauxDocPreview).select('svg');\n    if (svg.empty()) svg = d3.select(fauxDoc).append('svg');\n    if (svgPreview.empty()) svgPreview = d3.select(fauxDocPreview).append('svg');\n\n    // create a static id so we can reference the inner html of this\n    // element for other parts of the application\n    d3.select(fauxDoc).attr('id', svgDownloadContainerId);\n    d3.select(fauxDocPreview).attr('style', { height: '100%' });\n\n    const {\n      curveRotation,\n      curveScaleX,\n      curveScaleY,\n      curveType,\n      datum,\n      effectType,\n      isDramatic,\n      isSingleton,\n      lineType,\n      forceClose,\n      shapeSideCount,\n      showSurround,\n      throughHoleExists,\n      units,\n    } = props;\n\n    // these props will be converted to pixel units\n    let {\n      cellSize,\n      curveOffsetX,\n      curveOffsetY,\n      etchWidth,\n      pageHeight,\n      pageWidth,\n      throughHoleRadius,\n      throughHoleX,\n      throughHoleY,\n    } = props;\n\n    cellSize = convertUnitsToPixels(cellSize, units);\n    curveOffsetX = convertUnitsToPixels(curveOffsetX, units);\n    curveOffsetY = convertUnitsToPixels(curveOffsetY, units);\n    etchWidth = convertUnitsToPixels(etchWidth, units);\n    pageHeight = convertUnitsToPixels(pageHeight, units);\n    pageWidth = convertUnitsToPixels(pageWidth, units);\n    throughHoleRadius = convertUnitsToPixels(throughHoleRadius, units);\n    throughHoleX = convertUnitsToPixels(throughHoleX, units);\n    throughHoleY = convertUnitsToPixels(throughHoleY, units);\n\n    // break the stringed datasets into rows and columns\n    const dataSets = datum\n      .split('\\n')\n      .map((ds) => {\n        let row = ds.split(',');\n        if (isDramatic) {\n          row = row.reduce((r, a) => r.concat(a, 0), []);\n        }\n        return row.map(d => Number(d));\n      });\n\n    // find the highest and lowest values for the data set\n    const yDomain = d3.extent(\n      uniq(\n        dataSets.flat(),\n      ),\n    );\n\n    // reverse the data domain when displaying linearly to\n    // make the data feel right side up\n    if (lineType === 'linear') yDomain.reverse();\n\n    // determine the total height of the svgPreview\n    let svgPreviewHeight = (\n      (cellSize * dataSets.length)\n      + (Styles.previewVerticalCellPadding * dataSets.length)\n    );\n    if (isSingleton) svgPreviewHeight = '100%';\n\n    svgPreview.attrs({\n      style: { display: 'block', margin: 'auto' },\n      width: cellSize,\n      height: svgPreviewHeight,\n    });\n\n    svg.attrs(\n      Object.assign({\n        width: '100%',\n        height: '100%',\n        viewBox: `0 0 ${pageWidth} ${pageHeight}`,\n      }, svgDocumentMeta),\n    );\n\n    // dump all the svg children whenever we redraw\n    svg.selectAll('*').remove();\n    svgPreview.selectAll('*').remove();\n\n    const tileOptions = {\n      cellSize,\n      curveOffsetX,\n      curveOffsetY,\n      curveRotation,\n      curveScaleX,\n      curveScaleY,\n      curveType,\n      effectType,\n      etchWidth,\n      lineType,\n      forceClose,\n      shapeSideCount,\n      showSurround,\n      throughHoleExists,\n      throughHoleRadius,\n      throughHoleX,\n      throughHoleY,\n      yDomain,\n    };\n\n    // Draw the preview tiles\n    dataSets.map((data, i) => {\n      const xOffset = 0;\n      let yOffset = i * cellSize + Styles.previewVerticalCellPadding * (i + 1);\n      if (isSingleton) yOffset = 0;\n\n      const group = svgPreview.append('g');\n      const opts = Object.assign({}, tileOptions, {\n        xOffset, yOffset, data, group, isPreview: true,\n      });\n      return new Tile(opts);\n    });\n\n    // Draw the hidden tile download document\n    const cellsPerRow = Math.floor(pageWidth / cellSize);\n    dataSets.map((data, i) => {\n      const offsetPlusOne = cellSize * (i + 1);\n      let yOffset = Math.floor(offsetPlusOne / pageWidth) * cellSize;\n      let xOffset = (i % cellsPerRow) * cellSize;\n\n      if (isSingleton) {\n        xOffset = 0;\n        yOffset = 0;\n      }\n\n      const group = svg.append('g');\n      const opts = Object.assign({}, tileOptions, {\n        xOffset, yOffset, data, group, isPreview: false,\n      });\n      return new Tile(opts);\n    });\n\n    props.drawFauxDOM();\n  }\n\n  render() {\n    const { document, documentPreview } = this.props;\n    return (\n      <React.Fragment>\n        {document}\n        {documentPreview}\n      </React.Fragment>\n    );\n  }\n}\n\nconst FauxDom = withFauxDOM(Tiles);\n\nexport default FauxDom;\n","import React, { Component } from 'react';\nimport { ScrollToHOC } from 'react-scroll-to';\n\nimport * as Styles from './Styles';\nimport { convertUnitsToPixels } from './util';\nimport SettingsContext from './Settings.context';\nimport Tiles from './Tiles';\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollArea = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { props } = this;\n\n    if (props.textAreaHighlightIndex !== prevProps.textAreaHighlightIndex) {\n      const cellSize = convertUnitsToPixels(props.cellSize, props.units);\n      const cellWithPadding = cellSize + Styles.previewVerticalCellPadding;\n      const y = props.textAreaHighlightIndex * cellWithPadding - cellWithPadding;\n      props.scrollTo({\n        ref: this.scrollArea, y, smooth: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.scrollArea}\n        style={{\n          position: 'relative',\n          height: '100%',\n          overflow: 'scroll',\n        }}\n      >\n        <SettingsContext.Consumer>\n          {context => (\n            <Tiles\n              curveOffsetX={context.state.curveOffsetX}\n              curveOffsetY={context.state.curveOffsetY}\n              curveRotation={context.state.curveRotation}\n              curveScaleX={context.state.curveScaleX}\n              curveScaleY={context.state.curveScaleY}\n              curveType={context.state.curveType}\n              cellSize={context.state.cellSize}\n              datum={context.state.datum}\n              effectType={context.state.effectType}\n              etchWidth={context.state.etchWidth}\n              forceClose={context.state.forceClose}\n              isDramatic={context.state.isDramatic}\n              isSingleton={context.state.isSingleton}\n              lineType={context.state.lineType}\n              pageHeight={context.state.pageHeight}\n              pageWidth={context.state.pageWidth}\n              shapeSideCount={context.state.shapeSideCount}\n              showSurround={context.state.showSurround}\n              throughHoleExists={context.state.throughHoleExists}\n              throughHoleRadius={context.state.throughHoleRadius}\n              throughHoleX={context.state.throughHoleX}\n              throughHoleY={context.state.throughHoleY}\n              units={context.state.units}\n            />\n          )}\n        </SettingsContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport default ScrollToHOC(Preview);\n","import React from 'react';\n\nimport {\n  Row,\n  Col,\n  Slider,\n  InputNumber,\n} from 'antd';\n\nimport SettingsContext from './Settings.context';\n\nfunction handleSelect(e) {\n  const { target } = e;\n  target.type = 'text';\n  target.setSelectionRange(0, target.value.length);\n  target.type = 'number';\n}\n\nfunction handleChange(val, stateSetter) {\n  if (!val) return;\n\n  const num = Number(val);\n  if (Number.isNaN(num)) return;\n\n  stateSetter(num);\n}\n\nfunction UnitSlider(props) {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <Row>\n          <Col span={4}>\n            <div style={{ marginTop: 7 }}>{props.label}</div>\n          </Col>\n          <Col span={13}>\n            <Slider\n              disabled={props.disabled}\n              value={props.value}\n              min={props.min}\n              max={props.max}\n              step={props.step || context.state.defaultSliderStepSize}\n              onChange={props.onChange}\n            />\n          </Col>\n          <Col span={6}>\n            <InputNumber\n              disabled={props.disabled}\n              style={{ float: 'right' }}\n              min={props.min}\n              max={props.max}\n              value={props.value}\n              onChange={val => handleChange(val, props.onChange)}\n              onClick={handleSelect}\n              step={props.step || context.state.defaultSliderStepSize}\n            />\n          </Col>\n          <Col span={1}>\n            <span style={{ float: 'right', paddingTop: 8, fontSize: '85%' }}>\n              {props.hideUnits ? '' : context.state.units}\n            </span>\n          </Col>\n        </Row>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default UnitSlider;\n","import React from 'react';\nimport {\n  Checkbox,\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Select,\n} from 'antd';\n\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\nimport * as Styles from './Styles';\n\nconst { Option } = Select;\n\n/* eslint-disable no-multi-spaces */\nconst curves = [\n  { functionName: 'curveBasis',             title: 'Basis'              },\n  { functionName: 'curveBasisClosed',       title: 'BasisClosed'        },\n  { functionName: 'curveCardinal',          title: 'Cardinal'           },\n  { functionName: 'curveCardinalClosed',    title: 'Cardinal Closed'    },\n  { functionName: 'curveCatmullRom',        title: 'Catmull-Rom'        },\n  { functionName: 'curveCatmullRomClosed',  title: 'Catmull-Rom Closed' },\n  { functionName: 'curveLinear',            title: 'Linear'             },\n  { functionName: 'curveLinearClosed',      title: 'Linear Closed'      },\n  { functionName: 'curveMonotoneX',         title: 'MonotoneX'          },\n  { functionName: 'curveMonotoneY',         title: 'MonotoneY'          },\n  { functionName: 'curveNatural',           title: 'Natural'            },\n  { functionName: 'curveStep',              title: 'Step'               },\n  { functionName: 'curveStepAfter',         title: 'Step After'         },\n  { functionName: 'curveStepBefore',        title: 'Step Before'        },\n];\n/* eslint-enable no-multi-spaces */\n\n/* eslint-disable react/no-array-index-key */\nconst curveOptions = curves.map((e, i) => <Option key={i} value={i}>{e.title}</Option>);\n/* eslint-enable react/no-array-index-key */\n\nfunction getDefaultCurve(context) {\n  return curves.findIndex(c => c.functionName === context.state.curveType);\n}\n\nfunction handleCurveChange(val, context) {\n  const curve = curves[val];\n  context.setCurveType(curve.functionName);\n}\n\nfunction SettingsShape() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Surround</Divider>\n          <Row>\n            <Col>\n              <Checkbox\n                style={{ float: 'right', marginBottom: 10 }}\n                disabled={context.state.isSingleton}\n                checked={context.state.showSurround}\n                onChange={e => context.setShowSurround(e.target.checked)}\n              >\n                Show\n              </Checkbox>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Size\"\n            onChange={context.setCellSize}\n            value={context.state.cellSize}\n            min={context.state.cellSizeMin}\n            max={context.state.cellSizeMax}\n          />\n\n          <UnitSlider\n            label=\"Sides\"\n            disabled={!context.state.showSurround}\n            onChange={context.setShapeSideCount}\n            value={context.state.shapeSideCount}\n            min={2}\n            max={8}\n            step={1}\n            hideUnits\n          />\n\n          <Divider style={Styles.divider}>Through</Divider>\n          <Row>\n            <Col>\n              <Checkbox\n                style={{ float: 'right', marginBottom: 10 }}\n                disabled={context.state.isSingleton}\n                checked={context.state.throughHoleExists}\n                onChange={e => context.setThroughHoleExists(e.target.checked)}\n              >\n                Show\n              </Checkbox>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Radius\"\n            onChange={context.setThroughHoleRadius}\n            value={context.state.throughHoleRadius}\n            min={0}\n            max={context.state.cellSize / 2}\n            disabled={!context.state.throughHoleExists}\n          />\n          <UnitSlider\n            label=\"X\"\n            onChange={context.setThroughHoleX}\n            value={context.state.throughHoleX}\n            min={0}\n            max={context.state.cellSize}\n            disabled={!context.state.throughHoleExists}\n          />\n          <UnitSlider\n            label=\"Y\"\n            onChange={context.setThroughHoleY}\n            value={context.state.throughHoleY}\n            min={0}\n            max={context.state.cellSize}\n            disabled={!context.state.throughHoleExists}\n          />\n\n          <Divider style={Styles.divider}>Curve</Divider>\n          <Row style={{ marginBottom: 20 }}>\n            <Col span={12}>\n              <Radio.Group\n                value={context.state.lineType}\n                onChange={e => context.setLineType(e.target.value)}\n              >\n                <Radio.Button value=\"radial\">Radial</Radio.Button>\n                <Radio.Button value=\"linear\">Linear</Radio.Button>\n              </Radio.Group>\n            </Col>\n            <Col span={12}>\n              <Checkbox\n                style={{ float: 'right' }}\n                checked={context.state.forceClose}\n                disabled={context.state.lineType === 'linear'}\n                onChange={e => context.setForceClose(e.target.checked)}\n              >\n                Close Path\n              </Checkbox>\n            </Col>\n          </Row>\n          <Select\n            defaultValue={getDefaultCurve(context)}\n            style={{ width: '100%', marginBottom: 15 }}\n            onChange={val => handleCurveChange(val, context)}\n          >\n            {curveOptions}\n          </Select>\n\n          <UnitSlider\n            label=\"Scale X\"\n            hideUnits\n            onChange={context.setCurveScaleX}\n            value={context.state.curveScaleX}\n            min={-3}\n            max={3}\n          />\n          <UnitSlider\n            label=\"Scale Y\"\n            hideUnits\n            onChange={context.setCurveScaleY}\n            value={context.state.curveScaleY}\n            min={-3}\n            max={3}\n          />\n          <UnitSlider\n            label=\"Rotate\"\n            hideUnits\n            onChange={context.setCurveRotation}\n            value={context.state.curveRotation}\n            min={-180}\n            max={180}\n          />\n          <UnitSlider\n            label=\"X\"\n            onChange={context.setCurveOffsetX}\n            value={context.state.curveOffsetX}\n            min={-1 * context.state.cellSize}\n            max={context.state.cellSize}\n          />\n          <UnitSlider\n            label=\"Y\"\n            onChange={context.setCurveOffsetY}\n            value={context.state.curveOffsetY}\n            min={-1 * context.state.cellSize}\n            max={context.state.cellSize}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsShape;\n","export default [\n  {\n    title: 'Slugging Percentage - American Baseball',\n    description: '162 game average slugging percentage (Singles * 1, Doubles * 2, Triples * 3, HR * 4). Players include Ty Cobb, Babe Ruth, Shoeless Joe Jackson, Honus Wagner, Ted Williams, Lou Gehrig, Joe DiMaggio, Jackie Robinson, Stan Musial, Mickey Mantle, Yogi Berra, Roberto Clemente, Willie Mays, Hank Aaron, Pete Rose, George Brett, Derek Jeter, Ken Griffey Jr, Mark McGwire, Cal Ripken Jr, and Sammy Sosa.',\n    settings: {\n      cellSize: 2.25,\n      curveOffsetX: 0,\n      curveOffsetY: 0,\n      curveRotation: 0,\n      curveScaleX: 0.35,\n      curveScaleY: 0.5,\n      curveType: 'curveLinearClosed',\n      datum: `78,163,24,48\n66,98,184,27\n74,152,28,60\n74,140,24,45\n74,109,148,15\n80,115,148,36\n72,125,136,36\n64,124,64,18\n78,121,100,27\n46,99,144,15\n50,108,108,12\n58,144,64,33\n56,106,144,24\n62,112,148,15\n68,147,28,18\n80,122,76,24\n64,153,60,12\n64,97,152,6\n44,68,200,3\n66,114,92,6\n52,95,168,9`,\n      effectType: 'etch',\n      etchWidth: 0.01,\n      isDramatic: false,\n      isSingleton: false,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 4,\n      showSurround: true,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Ocean Tide - New York, New York USA',\n    description: 'Alternating low and high tide height for New York City USA. Dates include April 30 2019 to May 8 2019',\n    settings: {\n      cellSize: 3,\n      curveOffsetX: 0.14,\n      curveOffsetY: 0.38,\n      curveRotation: 45,\n      curveScaleX: 0.93,\n      curveScaleY: 0.66,\n      curveType: 'curveBasis',\n      datum: `0.37,1.29,0.26,1.22,0.37\n0.37,1.29,0.22,1.29,0.31\n0.31,1.32,0.17,1.37,0.23\n0.23,1.37,0.12,1.45,0.15\n0.15,1.41,0.08,1.54,0.08\n0.08,1.44,0.05,1.60,0.02\n0.02,1.44,0.03,1.65,-0.02\n-0.02,1.44,0.02,1.68,-0.04\n-0.04,1.41,0.04,1.68,-0.03\n-0.03,1.38,0.07,1.66,0.00`,\n      effectType: 'cut',\n      isDramatic: false,\n      isSingleton: false,\n      lineType: 'linear',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 4,\n      showSurround: true,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Monthly Weather - Kansas City, Missouri USA',\n    description: 'Every other day\\'s high temperature in Kansas City, Missouri USA for 4 notable months. Jane, Ruby, Lucy (my 3 children) and Megan (wife) birth month year. November 2015, March 2017, June 2018, and March 1986 respectively.',\n    settings: {\n      cellSize: 0.75,\n      curveOffsetX: 0,\n      curveOffsetY: 0.02,\n      curveRotation: 0,\n      curveScaleX: 0.15,\n      curveScaleY: 0.3,\n      curveType: 'curveLinearClosed',\n      datum: `76,71,72,60,61,74,60,62,61,50,38,62,62,34,35,40\n51,55,60,59,62,34,41,35,73,87,61,80,57,53,56,53,50\n91,82,86,88,91,95,83,95,95,83,70,83,84,90,97,96\n55,41,46,30,75,53,42,52,66,46,48,63,72,70,84,82,80`,\n      effectType: 'cut',\n      isDramatic: true,\n      isSingleton: false,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 3,\n      showSurround: true,\n      throughHoleExists: true,\n      throughHoleRadius: 0.08,\n      throughHoleX: 0.38,\n      throughHoleY: 0.18,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Weekly S&P 500 closing price - 1950 to 2018',\n    description: 'The weekly closing price of the S&P 500, grouped by year. Range includes every week for even years between Jan 03 1950 and Dec 31 2018.',\n    settings: {\n      cellSize: 9,\n      curveOffsetX: 0,\n      curveOffsetY: 0,\n      curveRotation: 0,\n      curveScaleX: 0.5,\n      curveScaleY: 2,\n      curveType: 'curveCatmullRomClosed',\n      datum: `17.09,16.65,16.940001,16.9,17.35,17.209999,17.23,17.26,17.33,17.139999,17.49,17.610001,17.34,17.82,17.860001,17.950001,18.07,18.33,18.200001,18.709999,18.65,18.790001,19.26,18.969999,19.139999,17.690001,17.67,16.870001,17.59,17.690001,18.139999,18.280001,18.68,18.540001,18.549999,18.75,19.290001,19.440001,19.450001,20.16,19.709999,20.01,19.790001,19.780001,19.940001,19.950001,20.280001,19.540001,19.5,19.639999,20.07,20.41\n24.059999,24.33,24.59,24.41,24.25,23.84,23.360001,23.280001,23.77,23.83,23.940001,24.34,24,24.15,23.51,23.58,23.59,23.799999,23.559999,23.889999,23.860001,24.26,24.370001,24.59,24.83,25.049999,24.98,24.85,25.16,25.450001,25.549999,25.200001,24.99,25.030001,25.209999,24.709999,24.57,24.73,24.5,24.549999,24.200001,24.030001,24.52,24.780001,24.75,25.27,25.66,25.620001,26.040001,26.15,26.25,26.540001\n24.93,25.43,25.85,26.08,26.299999,26.120001,25.92,26.15,26.52,26.690001,26.809999,26.559999,27.209999,27.379999,27.940001,27.780001,28.26,28.65,28.799999,28.99,29.190001,29.1,28.58,29.040001,29.200001,29.59,30.139999,30.059999,30.309999,30.879999,30.379999,30.719999,31.209999,30.66,30.5,30.84,31.709999,32.400002,32.290001,32.669998,31.709999,32.130001,31.68,32.709999,33.540001,33.450001,34.549999,34.490002,34.560001,35.919998,35.369999,35.98\n45.139999,44.669998,43.220001,43.349998,44.779999,43.639999,44.52,45.32,45.810001,46.700001,48.139999,48.830002,48.48,48.849998,47.950001,47.759998,47.990002,48.509998,47.119999,46.389999,44.619999,45.580002,45.139999,46.369999,46.59,46.970001,48.040001,48.720001,49.349998,49.080002,49.639999,49.09,48.82,47.950001,47.509998,47.810001,47.209999,46.580002,45.349998,46.450001,47,46.240002,46.27,46.98,46.34,45.740002,45.139999,45.080002,47.040001,46.540001,46.369999,46.560001,46.66\n40.369999,41.099998,41.709999,41.700001,41.73,41.330002,40.880001,40.84,42.07,42.330002,42.419998,42.200001,41.48,41.740002,42.709999,43.360001,43.689999,44.09,43.360001,43.869999,44.09,44.639999,45.02,44.849998,44.900002,45.470001,45.720001,45.77,46.970001,47.490002,48.049999,47.5,47.73,47.75,47.970001,48.529999,49.400002,49.66,50.369999,51.389999,51.459999,50.810001,51.330002,52.259998,53.09,52.700001,52.48,52.459999,53.220001,54.07,54.110001,55.439999\n59.5,58.380001,57.380001,55.610001,55.98,55.459999,56.240002,56.16,54.57,54.240002,55.009998,55.98,55.43,56.389999,56.43,55.419998,54.369999,54.75,55.299999,55.73,55.740002,56.23,57.970001,57.439999,57.68,57.060001,57.380001,56.049999,54.720001,55.509998,55.439999,56.66,57.009998,57.599998,57,56.110001,55.110001,53.900002,53.52,54.029999,54.860001,53.720001,53.41,54.900002,55.869999,55.82,56.130001,55.389999,56.650002,57.200001,57.439999,58.110001\n69.660004,69.610001,68.75,68.129997,69.809998,70.480003,70.589996,70.160004,70.160004,70.419998,70.940002,70.449997,69.550003,68.839996,67.900002,68.589996,66.300003,66.239998,62.650002,63.82,59.470001,59.380001,58.450001,55.889999,52.68,54.75,56.169998,57.830002,56.810001,57.200001,58.119999,57.549999,59.009998,59.580002,59.119999,58.380001,58.889999,57.689999,56.27,57.07,56.950001,55.59,54.540001,57.75,58.779999,60.16,61.540001,62.259998,63.060001,62.57,62.639999,62.959999,64.129997\n76.239998,76.559998,77.110001,77.040001,77.18,77.480003,77.620003,77.800003,78.309998,79.139999,78.919998,79.190002,79.940002,79.849998,80.550003,79.75,80.169998,81,81.099998,80.730003,80.370003,79.019997,79.599998,80.889999,81.459999,82.599998,83.360001,84.010002,83.459999,83.18,81.860001,82.349998,82.07,81.989998,82.760002,83.449997,83.480003,84.209999,84.360001,85.220001,84.830002,85.139999,84.860001,85.230003,85.209999,86.279999,85.160004,84.349998,83.660004,84.290001,84.150002,84.75\n93.139999,93.5,93.470001,93.309998,93.260002,93.809998,92.410004,91.139999,89.239998,88.849998,88.529999,89.540001,89.940002,91.760002,91.989998,92.269997,91.059998,87.839996,85.470001,85.43,87.330002,86.059998,86.440002,86.510002,86.580002,85.610001,87.610001,87.080002,85.410004,83.599998,84,83.169998,79.620003,76.410004,77.419998,76.290001,79.989998,77.669998,76.559998,73.199997,76.599998,78.190002,80.239998,80.809998,81.940002,81.260002,80.849998,80.129997,82.139999,81.580002,81.470001,80.330002\n95.940002,96.720001,95.239998,93.449997,92.269997,89.860001,89.959999,90.889999,89.110001,89.029999,89.099998,88.419998,90.199997,93.290001,96.529999,95.849998,97.209999,98.660004,98.5,96.900002,97.150002,98.68,101.269997,101.129997,100.660004,99.580002,100.910004,102.339996,100.459999,98.339996,96.629997,97.010002,98.68,98.690002,98.860001,101.199997,100.860001,101.660004,102.309998,103.709999,103.18,104.82,104.199997,103.059998,103.949997,105.779999,106.300003,108.370003,107.93,107.580002,106.339996,104.739998,103.989998\n92.400002,90.919998,89.370003,85.019997,86.330002,86.540001,88.029999,89.5,89.440002,87.860001,87.059998,89.919998,89.389999,88.239998,85.669998,82.769997,81.440002,79.440002,76.900002,72.25,76.550003,76.169998,73.879997,77.050003,73.470001,72.919998,74.449997,77.690002,77.82,78.050003,77.279999,75.18,79.239998,81.860001,82.830002,82.519997,82.620003,82.830002,85.160004,85.080002,84.279999,83.769997,83.25,84.220001,83.370003,83.720001,85.93,89.459999,90.260002,90.220001,90.610001,92.150002\n103.470001,103.389999,103.650002,104.160004,104.860001,105.080002,105.279999,106.18,107.940002,108.379997,107.919998,107.519997,107.199997,109.620003,109.839996,108.889999,107.669998,106.629997,106.379997,108.980003,110.660004,109.730003,106.860001,108.360001,108.269997,107.139999,108.690002,106.800003,106.660004,107.379997,110.43,111.949997,111.760002,110.669998,111.510002,110.150002,108.809998,108.519997,110.550003,109.620003,107.919998,109.239998,110.620003,114.220001,113.730003,115.489998,117.269997,117.379997,118.860001,118.260002,115.830002,118.050003\n93.660004,95.559998,96.629997,95.32,92.330002,92.269997,95.389999,95.529999,97.779999,99.279999,97.269997,93.980003,93.010002,92.120003,93.75,90.18,91.290001,91.470001,88.209999,88.580002,87.279999,92.550003,91.300003,87.459999,86,83.660004,83.150002,83.540001,82.400002,78.589996,80.860001,75.669998,71.550003,72.150002,71.419998,65.199997,70.139999,64.940002,62.34,71.139999,72.279999,70.120003,73.879997,74.910004,71.910004,68.900002,69.970001,65.010002,67.07,66.910004,67.139999,70.709999\n94.949997,97,99.209999,100.860001,99.459999,99.669998,102.099998,99.709999,99.110001,100.860001,100.580002,102.849998,102.25,100.349998,100.669998,102.290001,101.639999,101.879997,101.339996,101.260002,100.18,99.150002,100.919998,103.760002,103.720001,104.110001,104.980003,104.68,104.059998,103.440002,103.790001,104.25,102.370003,101.480003,104.300003,104.650002,106.269997,106.800003,104.169998,102.559998,100.879997,99.959999,102.900002,100.82,99.239998,101.919998,103.150002,102.760002,104.699997,104.260002,104.839996,107.459999\n91.620003,89.690002,89.889999,88.580002,89.620003,90.080002,87.959999,88.489998,87.449997,88.879997,90.199997,89.360001,89.209999,90.169998,92.919998,94.339996,96.830002,96.529999,98.07,98.120003,96.580002,98.139999,99.93,97.419998,95.849998,95.529999,94.889999,97.580002,97.75,100,103.919998,103.959999,104.730003,104.900002,103.68,106.790001,104.120003,101.839996,102.540001,103.519997,104.660004,97.949997,94.589996,96.18,94.769997,94.419998,95.790001,96.279999,96.629997,95.330002,96.309998,96.110001\n109.919998,111.07,113.610001,115.120003,117.949997,115.410004,115.040001,113.660004,106.900002,105.43,102.309998,100.68,102.150002,103.790001,100.550003,105.160004,105.580002,104.720001,107.349998,110.620003,111.239998,113.199997,115.809998,114.059998,116,117.459999,117.839996,122.040001,120.779999,121.209999,123.610001,125.720001,126.019997,122.379997,124.879997,125.540001,129.25,126.349998,129.330002,130.289993,131.520004,129.850006,127.470001,129.179993,137.149994,139.110001,140.520004,134.029999,129.229996,133.699997,136.570007,136.339996\n119.550003,116.330002,115.379997,120.400002,117.260002,114.379997,113.220001,113.110001,109.339996,108.610001,110.610001,111.940002,115.120003,116.220001,116.809998,118.639999,116.440002,119.470001,118.010002,114.889999,111.879997,110.089996,111.239998,107.279999,109.139999,107.650002,108.830002,111.07,111.169998,107.089996,103.709999,103.849998,113.019997,117.110001,122.68,120.970001,122.550003,123.32,121.970001,131.050003,133.570007,138.830002,133.720001,142.160004,139.529999,137.020004,134.880005,138.690002,139.570007,137.490005,139.720001,140.639999\n169.279999,167.020004,166.210007,163.940002,160.910004,156.300003,155.740005,157.509995,159.240005,154.350006,159.270004,156.860001,159.179993,155.479996,157.309998,158.020004,159.889999,159.110001,158.490005,155.779999,151.619995,153.240005,155.169998,149.029999,154.460007,153.179993,152.240005,150.880005,149.550003,151.190002,162.350006,165.419998,164.139999,167.509995,166.679993,164.369995,168.779999,165.669998,166.100006,162.679993,164.179993,167.960007,165.289993,167.419998,167.600006,164.100006,166.919998,163.580002,162.259995,162.690002,165.509995,166.259995,163.679993\n205.960007,208.429993,206.429993,211.779999,214.559998,219.759995,224.619995,226.919998,225.570007,236.550003,233.339996,238.970001,228.690002,235.970001,242.380005,242.289993,234.789993,237.850006,232.759995,241.350006,247.350006,245.669998,245.729996,247.580002,249.600006,251.789993,242.220001,236.360001,240.220001,234.910004,236.880005,247.149994,250.190002,252.929993,250.470001,230.669998,232.210007,232.229996,233.710007,235.479996,238.839996,238.259995,243.979996,245.770004,244.5,245.860001,249.220001,251.169998,247.350006,249.729996,246.919998,246.449997\n243.399994,252.050003,246.5,257.070007,250.960007,257.630005,261.609985,262.459991,267.299988,264.940002,271.119995,258.51001,258.890015,269.429993,259.769989,260.140015,261.329987,257.480011,256.779999,253.020004,253.419998,266.450012,271.26001,270.679993,273.779999,271.779999,270.019989,272.049988,263.5,272.019989,271.149994,262.549988,260.23999,259.679993,264.480011,266.839996,270.649994,269.76001,271.910004,278.070007,275.5,283.660004,278.529999,276.309998,267.920013,266.470001,267.230011,271.809998,277.029999,276.290009,277.869995,277.720001\n352.200012,339.929993,339.149994,325.799988,330.920013,333.619995,332.720001,324.149994,335.540009,337.929993,341.910004,337.220001,339.940002,340.079987,344.339996,335.119995,329.109985,338.390015,352,354.640015,354.579987,363.160004,358.709991,362.910004,355.429993,358.019989,358.420013,367.309998,361.609985,353.440002,344.859985,335.519989,327.829987,311.51001,322.559998,323.399994,316.829987,311.320007,306.049988,311.5,300.029999,312.480011,304.709991,311.850006,313.73999,317.119995,315.100006,322.220001,327.75,326.820007,331.75,328.720001,321\n415.100006,418.859985,415.480011,408.779999,411.089996,412.480011,411.429993,412.700012,404.440002,405.839996,411.299988,403.5,401.549988,404.290009,416.040009,409.019989,412.529999,416.049988,410.089996,414.019989,415.350006,413.480011,409.76001,403.670013,403.450012,411.769989,414.619995,415.619995,411.600006,424.209991,418.880005,419.910004,414.850006,414.839996,417.079987,419.579987,422.929993,414.350006,410.470001,402.660004,411.730011,414.100006,418.679993,417.579987,422.429993,426.649994,430.160004,432.059998,433.730011,441.279999,439.769989,435.709991\n469.899994,474.910004,474.720001,478.700012,469.809998,470.179993,467.690002,466.070007,464.73999,466.440002,471.059998,460.579987,445.769989,447.100006,446.179993,447.630005,450.910004,447.820007,444.140015,454.920013,457.329987,460.130005,458.670013,458.450012,442.799988,446.200012,449.549988,454.160004,453.109985,458.26001,457.089996,461.940002,463.679993,473.799988,470.98999,468.179993,471.190002,459.670013,462.709991,455.100006,469.100006,464.890015,473.769989,462.279999,462.350006,461.470001,452.290009,453.299988,446.959991,458.799988,459.829987,459.269989\n616.710022,601.809998,611.830017,621.619995,635.840027,656.369995,647.97998,659.080017,644.369995,633.5,641.429993,650.619995,645.5,655.859985,636.710022,645.070007,653.460022,641.630005,652.090027,668.909973,678.51001,669.119995,673.309998,665.849976,666.840027,670.630005,657.440002,646.190002,638.72998,635.900024,662.48999,662.099976,665.210022,667.030029,651.98999,655.679993,680.539978,687.030029,686.190002,701.460022,700.659973,710.820007,700.919983,703.77002,730.820007,737.619995,748.72998,757.02002,739.599976,728.640015,748.869995,756.789978,748.030029\n927.690002,961.51001,957.590027,980.280029,1012.460022,1020.090027,1034.209961,1049.339966,1055.689941,1068.609985,1099.160034,1095.439941,1122.699951,1110.670044,1122.719971,1107.900024,1121,1108.140015,1108.72998,1110.469971,1090.819946,1113.859985,1098.839966,1100.650024,1133.199951,1146.420044,1164.329956,1186.75,1140.800049,1120.670044,1089.449951,1062.75,1081.23999,1027.140015,973.890015,1009.059998,1020.090027,1044.75,1002.599976,984.390015,1056.420044,1070.670044,1098.670044,1141.01001,1125.719971,1163.550049,1192.329956,1176.73999,1166.459961,1188.030029,1226.27002,1229.22998\n1441.469971,1465.150024,1441.359985,1360.160034,1424.369995,1387.119995,1346.089966,1333.359985,1409.170044,1395.069946,1464.469971,1527.459961,1498.579956,1516.349976,1356.560059,1434.540039,1452.430054,1432.630005,1420.959961,1406.949951,1378.02002,1477.26001,1456.949951,1464.459961,1441.47998,1454.599976,1478.900024,1509.97998,1480.189941,1419.890015,1462.930054,1471.839966,1491.719971,1506.449951,1520.77002,1494.5,1465.810059,1448.719971,1436.51001,1408.98999,1374.170044,1396.930054,1379.579956,1426.689941,1365.97998,1367.719971,1341.77002,1315.22998,1369.890015,1312.150024,1305.949951,1320.280029\n1145.599976,1127.579956,1133.280029,1122.199951,1096.219971,1104.180054,1089.839966,1131.780029,1164.310059,1166.160034,1148.699951,1147.390015,1122.72998,1111.01001,1125.170044,1076.319946,1073.430054,1054.98999,1106.589966,1083.819946,1067.140015,1027.530029,1007.27002,989.140015,989.820007,989.030029,921.390015,847.75,852.840027,864.23999,908.640015,928.77002,940.859985,916.070007,893.919983,889.809998,845.390015,827.369995,800.580017,835.320007,884.390015,897.650024,900.960022,894.73999,909.830017,930.549988,936.309998,912.22998,889.47998,895.76001,875.400024,908.590027\n1121.859985,1139.829956,1141.550049,1131.130005,1142.76001,1145.810059,1144.109985,1144.939941,1156.859985,1120.569946,1109.780029,1108.060059,1141.810059,1139.319946,1134.609985,1140.599976,1107.300049,1098.699951,1095.699951,1093.560059,1120.680054,1122.5,1136.469971,1135.02002,1134.430054,1125.380005,1112.810059,1101.390015,1086.199951,1101.719971,1063.969971,1064.800049,1098.349976,1107.77002,1113.630005,1123.920044,1128.550049,1110.109985,1131.5,1122.140015,1108.199951,1095.73999,1130.199951,1166.170044,1184.170044,1170.339966,1182.650024,1191.170044,1188,1194.199951,1210.130005,1211.920044\n1285.449951,1287.609985,1261.48999,1283.719971,1264.030029,1266.98999,1287.23999,1289.430054,1287.22998,1281.420044,1307.25,1302.949951,1294.869995,1295.5,1289.119995,1311.280029,1310.609985,1325.76001,1291.23999,1267.030029,1280.160034,1288.219971,1252.300049,1251.540039,1244.5,1270.199951,1265.47998,1236.199951,1240.290039,1278.550049,1279.359985,1266.73999,1302.300049,1295.089966,1311.01001,1298.920044,1319.660034,1314.780029,1335.849976,1349.589966,1365.619995,1368.599976,1377.339966,1364.300049,1380.900024,1401.199951,1400.949951,1396.709961,1409.839966,1427.089966,1410.76001,1418.300049\n1401.02002,1325.189941,1330.609985,1395.420044,1331.290039,1349.98999,1353.109985,1330.630005,1293.369995,1288.140015,1329.51001,1315.219971,1370.400024,1332.829956,1390.329956,1397.839966,1413.900024,1388.280029,1425.349976,1375.930054,1400.380005,1360.680054,1360.030029,1317.930054,1278.380005,1262.900024,1239.48999,1260.680054,1257.76001,1260.310059,1296.319946,1298.199951,1292.199951,1282.829956,1242.310059,1251.699951,1255.079956,1213.27002,1099.22998,899.219971,940.549988,876.77002,968.75,930.98999,873.289978,800.030029,896.23999,876.070007,879.72998,887.880005,872.799988,931.799988\n1144.97998,1136.030029,1091.76001,1073.869995,1066.189941,1075.51001,1109.170044,1104.48999,1138.699951,1149.98999,1159.900024,1166.589966,1178.099976,1194.369995,1192.130005,1217.280029,1186.689941,1110.880005,1135.680054,1087.689941,1089.410034,1064.880005,1091.599976,1117.51001,1076.76001,1022.580017,1077.959961,1064.880005,1102.660034,1101.599976,1121.640015,1079.25,1071.689941,1064.589966,1104.51001,1109.550049,1125.589966,1148.670044,1146.23999,1165.150024,1176.189941,1183.079956,1183.26001,1225.849976,1199.209961,1199.72998,1189.400024,1224.709961,1240.400024,1243.910034,1256.77002,1257.640015\n1277.810059,1289.089966,1315.380005,1316.329956,1344.900024,1342.640015,1361.22998,1365.73999,1369.630005,1370.869995,1404.170044,1397.109985,1408.469971,1398.079956,1370.26001,1378.530029,1403.359985,1369.099976,1353.390015,1295.219971,1317.819946,1278.040039,1325.660034,1342.839966,1335.02002,1362.160034,1354.680054,1356.780029,1362.660034,1385.969971,1390.98999,1405.869995,1418.160034,1411.130005,1406.579956,1437.920044,1465.77002,1460.150024,1440.670044,1460.930054,1428.589966,1433.189941,1411.939941,1414.199951,1379.849976,1359.880005,1409.150024,1416.180054,1418.069946,1413.579956,1430.150024,1402.430054,1466.469971\n1842.369995,1838.699951,1790.290039,1782.589966,1797.02002,1838.630005,1836.25,1859.449951,1878.040039,1841.130005,1866.52002,1857.619995,1865.089966,1815.689941,1864.849976,1863.400024,1881.140015,1878.47998,1877.859985,1900.530029,1923.569946,1949.439941,1936.160034,1962.869995,1960.959961,1985.439941,1967.569946,1978.219971,1978.339966,1925.150024,1931.589966,1955.060059,1988.400024,2003.369995,2007.709961,1985.540039,2010.400024,1982.849976,1967.900024,1906.130005,1886.76001,1964.579956,2018.050049,2031.920044,2039.819946,2063.5,2067.560059,2075.370117,2002.329956,2070.649902,2088.77002,2058.199951\n1922.030029,1880.329956,1906.900024,1940.23999,1880.050049,1864.780029,1917.780029,1948.050049,1999.98999,2022.189941,2049.580078,2035.939941,2072.780029,2047.599976,2080.72998,2091.580078,2065.300049,2057.139893,2046.609985,2052.320068,2099.060059,2099.129883,2096.070068,2071.219971,2037.410034,2102.949951,2129.899902,2161.73999,2175.030029,2173.600098,2182.870117,2184.050049,2183.870117,2169.040039,2179.97998,2127.810059,2139.159912,2164.689941,2168.27002,2153.73999,2132.97998,2141.159912,2126.409912,2085.179932,2164.449951,2181.899902,2213.350098,2191.949951,2259.530029,2258.070068,2263.790039,2238.830078\n2743.149902,2786.23999,2810.300049,2872.870117,2762.129883,2619.550049,2732.219971,2747.300049,2691.25,2786.570068,2752.01001,2588.26001,2640.870117,2604.469971,2656.300049,2670.139893,2669.909912,2663.419922,2727.719971,2712.969971,2721.330078,2734.620117,2779.030029,2779.659912,2754.879883,2718.370117,2759.820068,2801.310059,2801.830078,2818.820068,2840.350098,2833.280029,2850.129883,2874.689941,2901.52002,2871.679932,2904.97998,2929.669922,2913.97998,2885.570068,2767.129883,2767.780029,2658.689941,2723.060059,2781.01001,2736.27002,2632.560059,2760.169922,2633.080078,2599.949951,2416.620117,2485.73999,2506.850098`,\n      effectType: 'etch',\n      isDramatic: false,\n      isSingleton: true,\n      lineType: 'radial',\n      pageWidth: 12,\n      pageHeight: 12,\n      showSurround: false,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n];\n","import React, { Component } from 'react';\nimport { random } from 'lodash';\nimport {\n  Checkbox,\n  Col,\n  Divider,\n  Input,\n  Radio,\n  Row,\n  Select,\n} from 'antd';\n\nimport Examples from './Examples';\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\nimport * as Styles from './Styles';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\n/* eslint-disable react/no-array-index-key */\nconst examplesOptions = Examples.map((e, i) => <Option key={i} value={i}>{e.title}</Option>);\n/* eslint-enable react/no-array-index-key */\n\nfunction capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nfunction handleExampleChange(val, context) {\n  const { settings } = Examples[val];\n  Object.keys(settings).forEach((settingKey) => {\n    const fn = `set${capitalize(settingKey)}`;\n    context[fn](settings[settingKey]);\n  });\n}\n\nfunction calculateTilePreviewPosition(e, context) {\n  const { target } = e;\n  const line = target.value.substr(0, target.selectionStart).split('\\n').length;\n  context.setTextAreaHighlightIndex(line);\n}\n\nconst defaultSelectValue = random(0, Examples.length - 1);\n\nclass SettingsDatum extends Component {\n  componentDidMount() {\n    handleExampleChange(defaultSelectValue, this.context);\n  }\n\n  render() {\n    return (\n      <SettingsContext.Consumer>\n        {context => (\n          <React.Fragment>\n            <Divider>Example</Divider>\n            <Select\n              defaultValue={defaultSelectValue}\n              style={{ width: '100%' }}\n              onChange={val => handleExampleChange(val, context)}\n            >\n              {examplesOptions}\n            </Select>\n\n            <Divider style={Styles.divider}>Interpret</Divider>\n\n            <Row style={{ marginBottom: 20 }}>\n              <Col span={12}>\n                <Radio.Group\n                  value={context.state.effectType}\n                  onChange={e => context.setEffectType(e.target.value)}\n                >\n                  <Radio.Button value=\"etch\" disabled={context.state.shapeType === 'isolate'}>Etch</Radio.Button>\n                  <Radio.Button value=\"cut\">Cut</Radio.Button>\n                </Radio.Group>\n              </Col>\n              <Col span={12}>\n                <Checkbox\n                  style={{ float: 'right' }}\n                  checked={context.state.isSingleton}\n                  onChange={e => context.setIsSingleton(e.target.checked)}\n                >\n                  Singleton\n                </Checkbox>\n              </Col>\n            </Row>\n\n            <UnitSlider\n              label=\"Etch\"\n              onChange={context.setEtchWidth}\n              value={context.state.etchWidth}\n              min={context.state.etchWidthMin}\n              step={0.001}\n              max={context.state.etchWidthMax}\n              disabled={context.state.effectType !== 'etch'}\n            />\n\n            <Divider style={Styles.divider}>Entry</Divider>\n            <Row>\n              <Col>\n                <Checkbox\n                  style={{ float: 'right', marginBottom: 10 }}\n                  checked={context.state.isDramatic}\n                  onChange={e => context.setIsDramatic(e.target.checked)}\n                >\n                  Dramatize\n                </Checkbox>\n              </Col>\n            </Row>\n            <TextArea\n              rows={10}\n              onClick={e => calculateTilePreviewPosition(e, context)}\n              onKeyUp={e => calculateTilePreviewPosition(e, context)}\n              value={context.state.datum}\n              style={{ fontFamily: 'monospace' }}\n              onChange={e => context.setDatum(e.target.value)}\n            />\n          </React.Fragment>\n        )}\n      </SettingsContext.Consumer>\n    );\n  }\n}\n\nSettingsDatum.contextType = SettingsContext;\nexport default SettingsDatum;\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {\n  Button,\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Select,\n} from 'antd';\n\nimport * as Styles from './Styles';\nimport { svgDownloadContainerId } from './util';\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\n\nconst { Option } = Select;\nconst presets = [\n  {\n    name: 'Epilog Fusion Pro 48',\n    width: 48,\n    height: 36,\n  },\n  {\n    name: 'Epilog Fusion Pro 32',\n    width: 32,\n    height: 20,\n  },\n  {\n    name: 'Epilog Helix',\n    width: 24,\n    height: 18,\n  },\n  {\n    name: 'Epilog Mini 24',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Mini 18',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 24',\n    width: 24,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 16',\n    width: 16,\n    height: 12,\n  },\n];\n\nconst presetOptions = presets.map((p, i) => <Option key={p.name} value={i}>{p.name}</Option>);\n\nfunction handlePresetChange(val, context) {\n  if (context.state.units !== 'in') {\n    context.setUnits('in');\n  }\n\n  const current = { width: context.state.pageWidth, height: context.state.pageHeight };\n  const dimensions = presets[val] || current;\n  context.setPageHeight(dimensions.height);\n  context.setPageWidth(dimensions.width);\n}\n\nfunction downloadSvgDocument() {\n  const documentContainer = document.getElementById(svgDownloadContainerId);\n  const svgDocument = documentContainer.innerHTML;\n  const file = `data:application/octet-stream;base64,${window.btoa(svgDocument)}`;\n\n  const timestamp = dayjs().format('YYYY-MM-DDTHH:mm');\n\n  const aLink = document.createElement('a');\n  aLink.download = `DataForms ${timestamp}.svg`;\n  aLink.href = file;\n  aLink.dispatchEvent(new window.MouseEvent('click'));\n}\n\nfunction SettingsPage() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Setup</Divider>\n\n          <Row style={{ marginBottom: 20 }}>\n            <Col>\n              <Radio.Group\n                style={{ textAlign: 'center', width: '100%' }}\n                value={context.state.units}\n                onChange={e => context.setUnits(e.target.value)}\n              >\n                <Radio.Button value=\"in\">in</Radio.Button>\n                <Radio.Button value=\"cm\">cm</Radio.Button>\n              </Radio.Group>\n            </Col>\n          </Row>\n\n          <Select\n            defaultValue={6}\n            style={{ width: '100%', marginBottom: 15 }}\n            onChange={val => handlePresetChange(val, context)}\n          >\n            {presetOptions}\n          </Select>\n\n          <UnitSlider\n            label=\"Width\"\n            onChange={context.setPageWidth}\n            value={context.state.pageWidth}\n            min={0}\n            max={context.state.pageWidthMax}\n          />\n          <UnitSlider\n            label=\"Height\"\n            onChange={context.setPageHeight}\n            value={context.state.pageHeight}\n            min={0}\n            max={context.state.pageHeightMax}\n          />\n\n          <Divider style={Styles.divider} />\n          <Button\n            type=\"primary\"\n            onClick={downloadSvgDocument}\n            style={{ display: 'block', margin: 'auto' }}\n          >\n            Download Cut File\n          </Button>\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsPage;\n","import React from 'react';\nimport {\n  Tabs,\n  Row,\n  Col,\n} from 'antd';\n\nimport SettingsShape from './Settings-shape';\nimport SettingsDatum from './Settings-datum';\nimport SettingsPage from './Settings-page';\n\nconst { TabPane } = Tabs;\n\nfunction Settings() {\n  return (\n    <Tabs\n      defaultActiveKey=\"2\"\n      tabBarStyle={{ textAlign: 'center' }}\n      style={{ paddingBottom: 50 }}\n    >\n      <TabPane tab=\"Shape\" key=\"1\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsShape />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Data\" key=\"2\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsDatum />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Page\" key=\"3\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsPage />\n          </Col>\n        </Row>\n      </TabPane>\n    </Tabs>\n  );\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { zipObject, round } from 'lodash';\nimport SettingsContext from './Settings.context';\n\nimport { inchesPerCentimenter, centimetersPerInch } from './util';\n\nconst unitConversionPrecision = 2;\n\n\nclass SettingsProvider extends Component {\n  state = {\n    cellSize: 4,\n    cellSizeMin: 0.1,\n    cellSizeMax: 10,\n    curveOffsetX: 0,\n    curveOffsetY: 0.2,\n    curveRotation: 0,\n    curveScaleX: 0.5,\n    curveScaleY: 0.5,\n    curveType: 'curveBasisClosed',\n    datum: '',\n    defaultSliderStepSize: 0.01,\n    effectType: 'etch',\n    etchWidth: 0.01,\n    etchWidthMin: 0.001,\n    etchWidthMax: 0.2,\n    isDramatic: true,\n    isSingleton: false,\n    lineType: 'radial',\n    pageWidth: 16,\n    pageWidthMax: 48,\n    pageHeight: 12,\n    pageHeightMax: 96,\n    shapeSideCount: 4,\n    showSurround: true,\n    textAreaHighlightIndex: 0,\n    throughHoleExists: true,\n    throughHoleRadius: 0.12,\n    throughHoleX: 2,\n    throughHoleY: 0.5,\n    units: 'in',\n  }\n\n  getStateKeysWithUnits = () => [\n    'defaultSliderStepSize',\n    'cellSize', 'cellSizeMin', 'cellSizeMax',\n    'curveOffsetX', 'curveOffsetY',\n    'etchWidth', 'etchWidthMax',\n    'throughHoleRadius', 'throughHoleX', 'throughHoleY',\n    'pageWidth', 'pageWidthMax', 'pageHeight', 'pageHeightMax',\n  ]\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <SettingsContext.Provider value={{\n        state: this.state,\n        setCellSize: cellSize => this.setState({ cellSize }),\n        setCurveType: curveType => this.setState({ curveType }),\n        setCurveOffsetX: curveOffsetX => this.setState({ curveOffsetX }),\n        setCurveOffsetY: curveOffsetY => this.setState({ curveOffsetY }),\n        setCurveRotation: curveRotation => this.setState({ curveRotation }),\n        setCurveScaleX: curveScaleX => this.setState({ curveScaleX }),\n        setCurveScaleY: curveScaleY => this.setState({ curveScaleY }),\n        setDatum: datum => this.setState({ datum }),\n        setEffectType: effectType => this.setState({ effectType }),\n        setEtchWidth: etchWidth => this.setState({ etchWidth }),\n        setForceClose: forceClose => this.setState({ forceClose }),\n        setIsDramatic: isDramatic => this.setState({ isDramatic }),\n        setIsSingleton: (isSingleton) => {\n          if (!isSingleton) {\n            this.setState({\n              throughHoleExists: false,\n              showSurround: false,\n            });\n          }\n\n          this.setState({ isSingleton });\n        },\n        setLineType: (lineType) => {\n          if (lineType === 'linear') {\n            this.setState({ forceClose: false });\n          }\n          this.setState({ lineType });\n        },\n        setPageWidth: pageWidth => this.setState({ pageWidth }),\n        setPageHeight: pageHeight => this.setState({ pageHeight }),\n        setShapeSideCount: shapeSideCount => this.setState({ shapeSideCount }),\n        setTextAreaHighlightIndex: textAreaHighlightIndex => this.setState({\n          textAreaHighlightIndex,\n        }),\n        setThroughHoleExists: throughHoleExists => this.setState({ throughHoleExists }),\n        setThroughHoleRadius: throughHoleRadius => this.setState({ throughHoleRadius }),\n        setThroughHoleX: throughHoleX => this.setState({ throughHoleX }),\n        setThroughHoleY: throughHoleY => this.setState({ throughHoleY }),\n        setUnits: (unit) => {\n          const { state } = this;\n          if (state.units !== unit) {\n            const factor = unit === 'cm' ? centimetersPerInch : inchesPerCentimenter;\n\n            const keys = this.getStateKeysWithUnits();\n            const zipped = zipObject(\n              keys,\n              keys.map(key => round(state[key] * factor, unitConversionPrecision)),\n            );\n            this.setState(zipped);\n          }\n          this.setState({ units: unit });\n        },\n        setShowSurround: (showSurround) => {\n          if (!showSurround) {\n            this.setState({\n              throughHoleExists: false,\n            });\n          }\n          this.setState({ showSurround });\n        },\n      }}\n      >\n        {children}\n      </SettingsContext.Provider>\n    );\n  }\n}\n\nexport default SettingsProvider;\n","import React from 'react';\nimport {\n  Col,\n  Layout,\n  Row,\n} from 'antd';\n\nimport * as Styles from './Styles';\nimport Analytics from './Analytics';\nimport Footer from './Footer';\nimport Legend from './Legend';\nimport PagePreview from './PagePreview';\nimport Preview from './Preview';\nimport Settings from './Settings';\nimport SettingsProvider from './Settings.provider';\nimport SettingsContext from './Settings.context';\n\nconst {\n  Content,\n  Sider,\n} = Layout;\n\nfunction App() {\n  return (\n    <SettingsProvider>\n      <Legend />\n\n      {/* Page Header */}\n      <Row style={{ borderBottom: `1px solid ${Styles.colors[5]}` }}>\n        <Col span={23} offset={1}>\n          <h1 style={{\n            height: Styles.headerHeight,\n            fontFamily: \"'Share Tech Mono', monospace\",\n            color: Styles.colors[8],\n            padding: '10px 0 7px 0',\n            margin: 0,\n            letterSpacing: 20,\n            fontSize: '40px',\n            textShadow: '2px 2px 2px black',\n          }}\n          >\n            DATA FORMS\n          </h1>\n        </Col>\n      </Row>\n\n      { /* Sidebar and preview */ }\n      <Layout\n        style={{\n          width: '100%', height: '100%', position: 'absolute', top: 0, background: 'none', overflow: 'hidden',\n        }}\n      >\n        <Content style={{ marginTop: Styles.headerHeight, marginBottom: Styles.footerHeight, position: 'relative' }}>\n          <SettingsContext.Consumer>\n            {context => (\n              <React.Fragment>\n                <PagePreview\n                  cellSize={context.state.cellSize}\n                  datum={context.state.datum}\n                  pageHeight={context.state.pageHeight}\n                  pageWidth={context.state.pageWidth}\n                  units={context.state.units}\n                />\n                <Preview\n                  cellSize={context.state.cellSize}\n                  textAreaHighlightIndex={context.state.textAreaHighlightIndex}\n                  units={context.state.units}\n                />\n              </React.Fragment>\n            )}\n          </SettingsContext.Consumer>\n        </Content>\n        <Sider\n          width={450}\n          style={{\n            marginBottom: Styles.footerHeight,\n            marginRight: 20,\n            marginTop: 33,\n            background: Styles.colors[0],\n            border: `1px solid ${Styles.colors[5]}`,\n            borderBottom: 'none',\n            overflowY: 'scroll',\n          }}\n        >\n          <Settings />\n        </Sider>\n      </Layout>\n\n      <Footer />\n      <Analytics />\n    </SettingsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}