{"version":3,"sources":["Styles.js","util.js","Tile.js","TileGroup.js","Settings.context.js","Preview.js","UnitSlider.js","Settings-shape.js","Examples.js","Settings-datum.js","Settings-page.js","Settings.js","Settings.provider.js","Contact.form.js","Footer.js","Legend.js","Analytics.js","App.js","serviceWorker.js","index.js"],"names":["colors","module","exports","headerHeight","footerHeight","divider","marginTop","previewVerticalCellPadding","getLegendLineStyle","styleColorIndex","borderTop","concat","width","float","marginRight","centimetersPerInch","testElement","document","createElement","setAttribute","body","appendChild","pixelsPerInch","offsetWidth","window","devicePixelRatio","removeChild","convertUnitsToPixels","unit","Error","inchesPerCentimenter","convertDegreesToRadians","degrees","Math","PI","getCoordsFromRadiansAndRadius","radian","radius","round","cos","sin","rotationMap","3","4","5","6","7","8","polygonSurroundLineFunction","d3","x","d","y","curve","Tile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSvg","bind","assertThisInitialized","node","group","select","append","selectAll","remove","_this$props","cellSize","curveOffsetX","curveOffsetY","curveRotation","curveScaleX","curveScaleY","curveType","data","dataDomain","effectType","etchWidth","lineType","forceClose","shapeSideCount","showSurround","throughHoleExists","throughHoleRadius","throughHoleX","throughHoleY","xOffset","yOffset","halfSquared","pow","datum","map","i","push","length","xF","yF","lineF","xDomainMax","range","domain","sqrt","angle","attr","rotation","vertices","toConsumableArray","Array","getVerticesForSurroundingPolygon","Styles","translate","etchPathWidth","curveColor","curveTranslationString","curveRotationString","Component","TileGroup","subProps","dataSets","p","objectSpread","split","ds","row","isDramatic","reduce","r","a","Number","extent","uniq","flat","reverse","assign","units","height","_this2","setSubProps","react_default","ref","style","display","margin","src_Tile","key","SettingsContext","React","createContext","Preview","Settings_context","Consumer","context","src_TileGroup","state","handleSelect","e","target","type","setSelectionRange","value","UnitSlider","col","span","label","slider","disabled","min","max","step","defaultSliderStepSize","onChange","input_number","val","stateSetter","num","isNaN","handleChange","onClick","paddingTop","fontSize","hideUnits","Option","curves","functionName","title","curveOptions","getDefaultCurve","findIndex","c","SettingsShape","Fragment","es_checkbox","marginBottom","checked","setShowSurround","src_UnitSlider","setCellSize","cellSizeMin","cellSizeMax","setShapeSideCount","setThroughHoleExists","setThroughHoleRadius","setThroughHoleX","setThroughHoleY","es_radio","Group","setLineType","Button","setForceClose","es_select","defaultValue","setCurveType","handleCurveChange","setCurveScaleX","setCurveScaleY","setCurveRotation","setCurveOffsetX","setCurveOffsetY","Examples","description","settings","pageWidth","pageHeight","TextArea","examplesOptions","Settings_datum_Option","SettingsDatum","keys","forEach","settingKey","s","fn","charAt","toUpperCase","slice","handleExampleChange","setEffectType","textAlign","shapeType","setEtchWidth","etchWidthMin","etchWidthMax","setIsDramatic","rows","fontFamily","setDatum","presets","name","presetOptions","Settings_page_Option","SettingsPage","setUnits","current","dimensions","setPageHeight","setPageWidth","handlePresetChange","pageWidthMax","pageHeightMax","TabPane","Settings","tabs","defaultActiveKey","tabBarStyle","paddingBottom","tab","offset","Settings_shape","Settings_datum","Settings_page","SettingsProvider","getStateKeysWithUnits","children","Provider","setState","factor","zipped","zipObject","NestedForm","handleSubmit","form","onSubmit","preventDefault","validateFields","err","values","email","message","replace","substring","GA","event","category","action","getFieldDecorator","href","rel","es_form","Item","rules","required","input","whitespace","TextArea_default","es_button","htmlType","ContactForm","create","Footer","contactModalVisible","showContactModal","closeContactModal","position","bottom","padding","modal","onCancel","visible","footer","wrapClassName","Contact_form","Legend","cursor","paddingRight","left","border","borderLeft","zIndex","top","isProduction","env","initialize","ga","tracker","trackerClientId","get","fullstoryInitted","setInterval","_fs_namespace","FullStoryAPI","clearInterval","Analytics","build_default","org","Content","Sider","App","Settings_provider","src_Legend","borderBottom","color","letterSpacing","textShadow","layout","background","overflow","src_Preview","overflowY","src_Settings","src_Footer","src_Analytics","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb0cc88d.chunk.js","sourcesContent":["const colors = [\n  'rgb(36, 41, 52)', // black\n  'rgb(203, 204, 198)', // white\n  'rgb(212, 193, 253)', // purple\n  'rgb(187, 229, 131)', // green\n  'rgb(244, 205, 130)', // gold\n  'rgb(90, 101, 112)', // grey (white)\n  'rgb(240, 135, 123)', // red,\n  'rgb(45, 55, 65)', // grey (black)\n  'rgb(255, 255, 255)', // white white\n];\n\nconst divider = {\n  marginTop: 75,\n};\n\nconst previewVerticalCellPadding = 50;\n\nconst headerHeight = 77;\nconst footerHeight = 75;\n\nfunction getLegendLineStyle(styleColorIndex) {\n  return {\n    borderTop: `1px solid ${colors[styleColorIndex]}`,\n    width: 10,\n    float: 'left',\n    marginTop: 10,\n    marginRight: 10,\n  };\n}\n\nmodule.exports = {\n  colors,\n  headerHeight,\n  footerHeight,\n  divider,\n  previewVerticalCellPadding,\n  getLegendLineStyle,\n};\n","const centimetersPerInch = 2.54;\nconst inchesPerCentimenter = 0.393701;\n\nconst testElement = document.createElement('div');\ntestElement.setAttribute('id', 'test-element');\ntestElement.setAttribute('style', 'width: 1in; height: 1in');\ndocument.body.appendChild(testElement);\n\nconst pixelsPerInch = testElement.offsetWidth + testElement.offsetWidth / window.devicePixelRatio;\n\ndocument.body.removeChild(testElement);\n\nfunction convertUnitsToPixels(float, unit) {\n  if (unit === 'in') {\n    return float * pixelsPerInch;\n  }\n  if (unit === 'cm') {\n    return (float * pixelsPerInch) / centimetersPerInch;\n  }\n\n  throw new Error(`${unit} unit not supported`);\n}\n\nfunction convertDegreesToRadians(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\n// pass in a radian and the radius of a circle\n// get back an array with 2 items: [xPosition, yPosition]\nfunction getCoordsFromRadiansAndRadius(radian, radius) {\n  return [\n    Math.round(Math.cos(radian) * radius) + radius,\n    Math.round(Math.sin(radian) * radius) + radius,\n  ];\n}\n\nmodule.exports = {\n  convertUnitsToPixels,\n  centimetersPerInch,\n  inchesPerCentimenter,\n  convertDegreesToRadians,\n  getCoordsFromRadiansAndRadius,\n};\n","import { Component } from 'react';\nimport { select } from 'd3-selection';\nimport * as d3 from 'd3';\n\nimport * as Styles from './Styles';\nimport {\n  convertDegreesToRadians,\n  getCoordsFromRadiansAndRadius,\n} from './util';\n\n\n// surrounding polygons can \"look\" off center.\n// rotate each polygon a certain number of degrees\n// dependent on the number of sides\nconst rotationMap = {\n  3: -90, 4: 0, 5: -18, 6: 0, 7: 38.5, 8: 0,\n};\n\n// straight lines to connect the vertices of a polygon\nconst polygonSurroundLineFunction = d3\n  .line()\n  .x(d => d[0])\n  .y(d => d[1])\n  .curve(d3.curveLinearClosed);\n\n// return a [[x, y], [x,y]...] list of points to create the\n// vertices of a surrounding polygon\nfunction getVerticesForSurroundingPolygon(shapeSideCount, radius) {\n  const vertices = [...Array(shapeSideCount)].map((x, i) => {\n    const angle = (360 / shapeSideCount) * i;\n    const radian = convertDegreesToRadians(angle);\n\n    return getCoordsFromRadiansAndRadius(radian, radius);\n  });\n\n  vertices.push(vertices[0]);\n  return vertices;\n}\n\n\nclass Tile extends Component {\n  constructor(props) {\n    super(props);\n    this.updateSvg = this.updateSvg.bind(this);\n  }\n\n  componentDidUpdate() {\n    // I don't know why I can't put this in the component did mount...\n    const { node } = this.props;\n    if (!this.group) {\n      this.group = select(node).append('g');\n    }\n\n    this.group.selectAll('*').remove();\n    this.updateSvg();\n  }\n\n  updateSvg() {\n    const {\n      cellSize,\n      curveOffsetX,\n      curveOffsetY,\n      curveRotation,\n      curveScaleX,\n      curveScaleY,\n      curveType,\n      data,\n      dataDomain,\n      effectType,\n      etchWidth,\n      lineType,\n      forceClose,\n      shapeSideCount,\n      showSurround,\n      throughHoleExists,\n      throughHoleRadius,\n      throughHoleX,\n      throughHoleY,\n      xOffset,\n      yOffset,\n    } = this.props;\n\n    const halfSquared = ((cellSize / 2) ** 2) * 2;\n\n    // create a multidimensional array to give each item an x value (the indece)\n    const datum = data.map((d, i) => [i, d]);\n    if (forceClose) datum.push([data.length, data[0]]);\n\n    // scale the x axis around a circle\n    // and to the length of the data set\n    const xDomainMax = forceClose ? datum.length - 1 : datum.length;\n\n    let xF;\n    let yF;\n    let lineF;\n\n    if (lineType === 'linear') {\n      xF = d3.scaleLinear()\n        .range([0, cellSize * curveScaleX])\n        .domain([0, xDomainMax]);\n\n      yF = d3.scaleLinear()\n        .range([0, cellSize * curveScaleY])\n        .domain(dataDomain);\n\n      lineF = d3.line()\n        .x(d => xF(d[0]))\n        .y(d => yF(d[1]));\n    } else if (lineType === 'radial') {\n      xF = d3.scaleTime()\n        .range([0, 2 * Math.PI])\n        .domain([0, xDomainMax]);\n\n      yF = d3.scaleLinear().range([\n        (cellSize / (curveScaleY * 7)) * curveScaleX,\n        (Math.sqrt(halfSquared)) * curveScaleX,\n      ]).domain(dataDomain);\n\n      lineF = d3.lineRadial()\n        .angle(d => xF(d[0]))\n        .radius(d => yF(d[1]));\n    }\n\n    lineF.curve(d3[curveType]);\n\n    // draw the group for this tile which contains all other shapes\n    this.group\n      .attr(\n        'transform',\n        `translate(${xOffset}, ${yOffset})`,\n      )\n      .attr('width', cellSize)\n      .attr('height', cellSize);\n\n    // optionally draw a surrounding polygon\n    if (showSurround) {\n      const rotation = rotationMap[shapeSideCount] || 0;\n      const vertices = getVerticesForSurroundingPolygon(shapeSideCount, cellSize / 2);\n\n      if (shapeSideCount === 2) {\n        this.group.append('circle')\n          .attr('fill', 'none')\n          .attr('stroke', Styles.colors[2])\n          .attr('r', cellSize / 2)\n          .attr('cx', cellSize / 2)\n          .attr('cy', cellSize / 2)\n          .attr('stroke-width', 1);\n      } else {\n        this.group\n          .append('path')\n          .datum(vertices)\n          .attr('fill', 'none')\n          .attr('stroke', Styles.colors[2])\n          .attr('stroke-width', 1)\n          .attr('transform', `rotate(${rotation}, ${cellSize / 2}, ${cellSize / 2})`)\n          .attr('d', polygonSurroundLineFunction);\n      }\n    }\n\n    const translate = lineType === 'radial' ? [cellSize / 2, cellSize / 2] : [0, 0];\n    translate[0] += curveOffsetX;\n    translate[1] += curveOffsetY;\n\n    const etchPathWidth = effectType === 'etch' ? etchWidth : 1;\n    const curveColor = effectType === 'etch' ? Styles.colors[3] : Styles.colors[2];\n    const curveTranslationString = `${translate[0]}, ${translate[1]}`;\n    const curveRotationString = lineType === 'radial' ? curveRotation : `${curveRotation}, ${cellSize / 2}, ${cellSize / 2}`;\n\n    this.group\n      .append('path')\n      .attr(\n        'transform',\n        `translate(${curveTranslationString}) rotate(${curveRotationString})`,\n      )\n      .datum(datum)\n      .attr('fill', 'none')\n      .attr('stroke', curveColor)\n      .attr('d', lineF)\n      .attr('stroke-width', etchPathWidth);\n\n    if (throughHoleExists) {\n      this.group.append('circle')\n        .attr('cx', throughHoleX)\n        .attr('cy', throughHoleY)\n        .attr('fill', 'none')\n        .attr('stroke', Styles.colors[2])\n        .attr('r', throughHoleRadius / 2) // why?\n        .attr('stroke-width', 1);\n    }\n  }\n\n  render() { return ''; }\n}\n\nexport default Tile;\n","import React, { Component } from 'react';\nimport { extent } from 'd3';\nimport { uniq } from 'lodash';\n\nimport Tile from './Tile';\nimport { convertUnitsToPixels } from './util';\nimport * as Styles from './Styles';\n\n\nclass TileGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.subProps = { dataSets: [] };\n  }\n\n  setSubProps() {\n    const { props: p } = this;\n    this.subProps = { ...p };\n\n    // break the stringed datasets into rows and columns\n    const dataSets = p\n      .datum\n      .split('\\n')\n      .map((ds) => {\n        let row = ds.split(',');\n        if (p.isDramatic) {\n          row = row.reduce((r, a) => r.concat(a, 0), []);\n        }\n        return row.map(d => Number(d));\n      });\n\n    // find the highest and lowest values for the data set\n    const dataDomain = extent(\n      uniq(\n        dataSets.flat(),\n      ),\n    );\n\n    // reverse the data domain when displaying linearly to\n    // make the data feel right side up\n    if (this.subProps.lineType === 'linear') {\n      dataDomain.reverse();\n    }\n\n    Object.assign(this.subProps, {\n      dataSets,\n      dataDomain,\n      cellSize: convertUnitsToPixels(p.cellSize, p.units),\n      curveOffsetX: convertUnitsToPixels(p.curveOffsetX, p.units),\n      curveOffsetY: convertUnitsToPixels(p.curveOffsetY, p.units),\n      etchWidth: convertUnitsToPixels(p.etchWidth, p.units),\n      throughHoleRadius: convertUnitsToPixels(p.throughHoleRadius, p.units),\n      throughHoleX: convertUnitsToPixels(p.throughHoleX, p.units),\n      throughHoleY: convertUnitsToPixels(p.throughHoleY, p.units),\n    });\n    this.subProps.height = (\n      (this.subProps.cellSize * this.subProps.dataSets.length)\n      + (Styles.previewVerticalCellPadding * this.subProps.dataSets.length)\n    );\n    this.subProps.width = this.subProps.cellSize;\n  }\n\n  render() {\n    this.setSubProps();\n    return (\n      <svg\n        ref={(node) => { this.node = node; }}\n        width={this.subProps.width}\n        height={this.subProps.height}\n        style={{ display: 'block', margin: 'auto' }}\n      >\n        {this.subProps.dataSets.map((data, i) => (\n          <Tile\n            cellSize={this.subProps.cellSize}\n            curveOffsetX={this.subProps.curveOffsetX}\n            curveOffsetY={this.subProps.curveOffsetY}\n            curveRotation={this.subProps.curveRotation}\n            curveScaleX={this.subProps.curveScaleX}\n            curveScaleY={this.subProps.curveScaleY}\n            curveType={this.subProps.curveType}\n            data={data}\n            dataDomain={this.subProps.dataDomain}\n            effectType={this.subProps.effectType}\n            etchWidth={this.subProps.etchWidth}\n            forceClose={this.subProps.forceClose}\n            // eslint-disable-next-line react/no-array-index-key\n            key={i}\n            lineType={this.subProps.lineType}\n            node={this.node}\n            shapeSideCount={this.subProps.shapeSideCount}\n            showSurround={this.subProps.showSurround}\n            throughHoleExists={this.subProps.throughHoleExists}\n            throughHoleRadius={this.subProps.throughHoleRadius}\n            throughHoleX={this.subProps.throughHoleX}\n            throughHoleY={this.subProps.throughHoleY}\n            xOffset={0}\n            yOffset={i * this.subProps.cellSize + Styles.previewVerticalCellPadding * (i + 1)}\n          />\n        ))}\n      </svg>\n    );\n  }\n}\n\nexport default TileGroup;\n","import React from 'react';\n\nconst SettingsContext = React.createContext();\n\nexport default SettingsContext;\n","import React from 'react';\n\nimport TileGroup from './TileGroup';\nimport SettingsContext from './Settings.context';\n\nfunction Preview() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <TileGroup\n          curveOffsetX={context.state.curveOffsetX}\n          curveOffsetY={context.state.curveOffsetY}\n          curveRotation={context.state.curveRotation}\n          curveScaleX={context.state.curveScaleX}\n          curveScaleY={context.state.curveScaleY}\n          curveType={context.state.curveType}\n          cellSize={context.state.cellSize}\n          datum={context.state.datum}\n          effectType={context.state.effectType}\n          etchWidth={context.state.etchWidth}\n          lineType={context.state.lineType}\n          forceClose={context.state.forceClose}\n          isDramatic={context.state.isDramatic}\n          shapeSideCount={context.state.shapeSideCount}\n          showSurround={context.state.showSurround}\n          throughHoleExists={context.state.throughHoleExists}\n          throughHoleRadius={context.state.throughHoleRadius}\n          throughHoleX={context.state.throughHoleX}\n          throughHoleY={context.state.throughHoleY}\n          units={context.state.units}\n        />\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default Preview;\n","import React from 'react';\n\nimport {\n  Row,\n  Col,\n  Slider,\n  InputNumber,\n} from 'antd';\n\nimport SettingsContext from './Settings.context';\n\nfunction handleSelect(e) {\n  const { target } = e;\n  target.type = 'text';\n  target.setSelectionRange(0, target.value.length);\n  target.type = 'number';\n}\n\nfunction handleChange(val, stateSetter) {\n  if (!val) return;\n\n  const num = Number(val);\n  if (Number.isNaN(num)) return;\n\n  stateSetter(num);\n}\n\nfunction UnitSlider(props) {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <Row>\n          <Col span={4}>\n            <div style={{ marginTop: 7 }}>{props.label}</div>\n          </Col>\n          <Col span={13}>\n            <Slider\n              disabled={props.disabled}\n              value={props.value}\n              min={props.min}\n              max={props.max}\n              step={props.step || context.state.defaultSliderStepSize}\n              onChange={props.onChange}\n            />\n          </Col>\n          <Col span={6}>\n            <InputNumber\n              disabled={props.disabled}\n              style={{ float: 'right' }}\n              min={props.min}\n              max={props.max}\n              value={props.value}\n              onChange={val => handleChange(val, props.onChange)}\n              onClick={handleSelect}\n              step={props.step || context.state.defaultSliderStepSize}\n            />\n          </Col>\n          <Col span={1}>\n            <span style={{ float: 'right', paddingTop: 8, fontSize: '85%' }}>\n              {props.hideUnits ? '' : context.state.units}\n            </span>\n          </Col>\n        </Row>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default UnitSlider;\n","import React from 'react';\nimport {\n  Checkbox,\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Select,\n} from 'antd';\n\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\nimport * as Styles from './Styles';\n\nconst { Option } = Select;\n\n/* eslint-disable no-multi-spaces */\nconst curves = [\n  { functionName: 'curveBasis',             title: 'Basis'              },\n  { functionName: 'curveBasisClosed',       title: 'BasisClosed'        },\n  { functionName: 'curveCardinal',          title: 'Cardinal'           },\n  { functionName: 'curveCardinalClosed',    title: 'Cardinal Closed'    },\n  { functionName: 'curveCatmullRom',        title: 'Catmull-Rom'        },\n  { functionName: 'curveCatmullRomClosed',  title: 'Catmull-Rom Closed' },\n  { functionName: 'curveLinear',            title: 'Linear'             },\n  { functionName: 'curveLinearClosed',      title: 'Linear Closed'      },\n  { functionName: 'curveMonotoneX',         title: 'MonotoneX'          },\n  { functionName: 'curveMonotoneY',         title: 'MonotoneY'          },\n  { functionName: 'curveNatural',           title: 'Natural'            },\n  { functionName: 'curveStep',              title: 'Step'               },\n  { functionName: 'curveStepAfter',         title: 'Step After'         },\n  { functionName: 'curveStepBefore',        title: 'Step Before'        },\n];\n/* eslint-enable no-multi-spaces */\n\n/* eslint-disable react/no-array-index-key */\nconst curveOptions = curves.map((e, i) => <Option key={i} value={i}>{e.title}</Option>);\n/* eslint-enable react/no-array-index-key */\n\nfunction getDefaultCurve(context) {\n  return curves.findIndex(c => c.functionName === context.state.curveType);\n}\n\nfunction handleCurveChange(val, context) {\n  const curve = curves[val];\n  context.setCurveType(curve.functionName);\n}\n\nfunction SettingsShape() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Surround</Divider>\n          <Row>\n            <Col>\n              <Checkbox\n                style={{ float: 'right', marginBottom: 10 }}\n                checked={context.state.showSurround}\n                onChange={e => context.setShowSurround(e.target.checked)}\n              >\n                Show\n              </Checkbox>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Size\"\n            onChange={context.setCellSize}\n            value={context.state.cellSize}\n            min={context.state.cellSizeMin}\n            max={context.state.cellSizeMax}\n          />\n\n          <UnitSlider\n            label=\"Sides\"\n            disabled={!context.state.showSurround}\n            onChange={context.setShapeSideCount}\n            value={context.state.shapeSideCount}\n            min={2}\n            max={8}\n            step={1}\n            hideUnits\n          />\n\n          <Divider style={Styles.divider}>Through</Divider>\n          <Row>\n            <Col>\n              <Checkbox\n                style={{ float: 'right', marginBottom: 10 }}\n                checked={context.state.throughHoleExists}\n                onChange={e => context.setThroughHoleExists(e.target.checked)}\n              >\n                Show\n              </Checkbox>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Radius\"\n            onChange={context.setThroughHoleRadius}\n            value={context.state.throughHoleRadius}\n            min={0}\n            max={context.state.cellSize / 2}\n            disabled={!context.state.throughHoleExists}\n          />\n          <UnitSlider\n            label=\"X\"\n            onChange={context.setThroughHoleX}\n            value={context.state.throughHoleX}\n            min={0}\n            max={context.state.cellSize}\n            disabled={!context.state.throughHoleExists}\n          />\n          <UnitSlider\n            label=\"Y\"\n            onChange={context.setThroughHoleY}\n            value={context.state.throughHoleY}\n            min={0}\n            max={context.state.cellSize}\n            disabled={!context.state.throughHoleExists}\n          />\n\n          <Divider style={Styles.divider}>Curve</Divider>\n          <Row style={{ marginBottom: 20 }}>\n            <Col span={12}>\n              <Radio.Group\n                value={context.state.lineType}\n                onChange={e => context.setLineType(e.target.value)}\n              >\n                <Radio.Button value=\"radial\">Radial</Radio.Button>\n                <Radio.Button value=\"linear\">Linear</Radio.Button>\n              </Radio.Group>\n            </Col>\n            <Col span={12}>\n              <Checkbox\n                style={{ float: 'right' }}\n                checked={context.state.forceClose}\n                disabled={context.state.lineType === 'linear'}\n                onChange={e => context.setForceClose(e.target.checked)}\n              >\n                Close Path\n              </Checkbox>\n            </Col>\n          </Row>\n          <Select\n            defaultValue={getDefaultCurve(context)}\n            style={{ width: '100%', marginBottom: 15 }}\n            onChange={val => handleCurveChange(val, context)}\n          >\n            {curveOptions}\n          </Select>\n\n          <UnitSlider\n            label=\"Scale X\"\n            hideUnits\n            onChange={context.setCurveScaleX}\n            value={context.state.curveScaleX}\n            min={-2}\n            max={2}\n          />\n          <UnitSlider\n            label=\"Scale Y\"\n            hideUnits\n            onChange={context.setCurveScaleY}\n            value={context.state.curveScaleY}\n            min={-2}\n            max={2}\n          />\n          <UnitSlider\n            label=\"Rotate\"\n            hideUnits\n            onChange={context.setCurveRotation}\n            value={context.state.curveRotation}\n            min={-180}\n            max={180}\n          />\n          <UnitSlider\n            label=\"X\"\n            onChange={context.setCurveOffsetX}\n            value={context.state.curveOffsetX}\n            min={-1 * context.state.cellSize}\n            max={context.state.cellSize}\n          />\n          <UnitSlider\n            label=\"Y\"\n            onChange={context.setCurveOffsetY}\n            value={context.state.curveOffsetY}\n            min={-1 * context.state.cellSize}\n            max={context.state.cellSize}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsShape;\n","export default [\n  {\n    title: 'Slugging Percentage - American Baseball',\n    description: '162 game average slugging percentage (Singles * 1, Doubles * 2, Triples * 3, HR * 4). Players include Ty Cobb, Babe Ruth, Shoeless Joe Jackson, Honus Wagner, Ted Williams, Lou Gehrig, Joe DiMaggio, Jackie Robinson, Stan Musial, Mickey Mantle, Yogi Berra, Roberto Clemente, Willie Mays, Hank Aaron, Pete Rose, George Brett, Derek Jeter, Ken Griffey Jr, Mark McGwire, Cal Ripken Jr, and Sammy Sosa.',\n    settings: {\n      cellSize: 2.25,\n      curveOffsetX: 0,\n      curveOffsetY: 0,\n      curveRotation: 0,\n      curveScaleX: 0.5,\n      curveScaleY: 0.5,\n      curveType: 'curveLinearClosed',\n      datum: `78,163,24,48\n66,98,184,27\n74,152,28,60\n74,140,24,45\n74,109,148,15\n80,115,148,36\n72,125,136,36\n64,124,64,18\n78,121,100,27\n46,99,144,15\n50,108,108,12\n58,144,64,33\n56,106,144,24\n62,112,148,15\n68,147,28,18\n80,122,76,24\n64,153,60,12\n64,97,152,6\n44,68,200,3\n66,114,92,6\n52,95,168,9`,\n      effectType: 'etch',\n      etchWidth: 0.01,\n      isDramatic: false,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 4,\n      showSurround: true,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Ocean Tide - New York, New York USA',\n    description: '',\n    settings: {\n      cellSize: 3,\n      curveOffsetX: 0.14,\n      curveOffsetY: 0.38,\n      curveRotation: 45,\n      curveScaleX: 0.93,\n      curveScaleY: 0.66,\n      curveType: 'curveBasis',\n      datum: `0.37,1.29,0.26,1.22,0.37\n0.37,1.29,0.22,1.29,0.31\n0.31,1.32,0.17,1.37,0.23\n0.23,1.37,0.12,1.45,0.15\n0.15,1.41,0.08,1.54,0.08\n0.08,1.44,0.05,1.60,0.02\n0.02,1.44,0.03,1.65,-0.02\n-0.02,1.44,0.02,1.68,-0.04\n-0.04,1.41,0.04,1.68,-0.03\n-0.03,1.38,0.07,1.66,0.00`,\n      effectType: 'cut',\n      isDramatic: false,\n      lineType: 'linear',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 4,\n      showSurround: true,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Monthly Weather - Kansas City, Missouri USA',\n    description: '',\n    settings: {\n      cellSize: 0.75,\n      curveOffsetX: 0,\n      curveOffsetY: 0.02,\n      curveRotation: 0,\n      curveScaleX: 0.2,\n      curveScaleY: 0.3,\n      curveType: 'curveLinearClosed',\n      datum: `76,71,72,60,61,74,60,62,61,50,38,62,62,34,35,40\n51,55,60,59,62,34,41,35,73,87,61,80,57,53,56,53,50\n91,82,86,88,91,95,83,95,95,83,70,83,84,90,97,96\n55,41,46,30,75,53,42,52,66,46,48,63,72,70,84,82,80`,\n      effectType: 'cut',\n      isDramatic: true,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 3,\n      showSurround: true,\n      throughHoleExists: true,\n      throughHoleRadius: 0.08,\n      throughHoleX: 0.38,\n      throughHoleY: 0.18,\n      units: 'in',\n    },\n  },\n];\n","import React from 'react';\nimport {\n  Checkbox,\n  Col,\n  Divider,\n  Input,\n  Radio,\n  Row,\n  Select,\n} from 'antd';\n\nimport Examples from './Examples';\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\nimport * as Styles from './Styles';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\n/* eslint-disable react/no-array-index-key */\nconst examplesOptions = Examples.map((e, i) => <Option key={i} value={i}>{e.title}</Option>);\n/* eslint-enable react/no-array-index-key */\n\nexamplesOptions.push(\n  <Option key=\"custom\" value={Examples.length}>Custom</Option>,\n);\n\nfunction capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nfunction handleExampleChange(val, context) {\n  const { settings } = Examples[val];\n  Object.keys(settings).forEach((settingKey) => {\n    const fn = `set${capitalize(settingKey)}`;\n    context[fn](settings[settingKey]);\n  });\n}\n\nfunction SettingsDatum() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Example</Divider>\n          <Select\n            defaultValue={1}\n            style={{ width: '100%' }}\n            onChange={val => handleExampleChange(val, context)}\n          >\n            {examplesOptions}\n          </Select>\n\n          <Divider style={Styles.divider}>Interpret</Divider>\n\n          <Row style={{ marginBottom: 20 }}>\n            <Col>\n              <Radio.Group\n                value={context.state.effectType}\n                onChange={e => context.setEffectType(e.target.value)}\n                style={{ textAlign: 'center', width: '100%' }}\n              >\n                <Radio.Button value=\"etch\" disabled={context.state.shapeType === 'isolate'}>Etch</Radio.Button>\n                <Radio.Button value=\"cut\">Cut</Radio.Button>\n              </Radio.Group>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Etch\"\n            onChange={context.setEtchWidth}\n            value={context.state.etchWidth}\n            min={context.state.etchWidthMin}\n            step={0.001}\n            max={context.state.etchWidthMax}\n            disabled={context.state.effectType !== 'etch'}\n          />\n\n          <Divider style={Styles.divider}>Entry</Divider>\n          <Row>\n            <Col>\n              <Checkbox\n                style={{ float: 'right', marginBottom: 10 }}\n                checked={context.state.isDramatic}\n                onChange={e => context.setIsDramatic(e.target.checked)}\n              >\n                Dramatize\n              </Checkbox>\n            </Col>\n          </Row>\n          <TextArea\n            rows={10}\n            value={context.state.datum}\n            style={{ fontFamily: 'monospace' }}\n            onChange={e => context.setDatum(e.target.value)}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsDatum;\n","import React from 'react';\nimport {\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Select,\n} from 'antd';\n\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\n\nconst { Option } = Select;\nconst presets = [\n  {\n    name: 'Epilog Fusion Pro 48',\n    width: 48,\n    height: 36,\n  },\n  {\n    name: 'Epilog Fusion Pro 32',\n    width: 32,\n    height: 20,\n  },\n  {\n    name: 'Epilog Helix',\n    width: 24,\n    height: 18,\n  },\n  {\n    name: 'Epilog Mini 24',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Mini 18',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 24',\n    width: 24,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 16',\n    width: 16,\n    height: 12,\n  },\n];\n\nconst presetOptions = presets.map((p, i) => <Option key={p.name} value={i}>{p.name}</Option>);\npresetOptions.push(<Option key=\"default\" value={presets.length}>Custom</Option>);\n\nfunction handlePresetChange(val, context) {\n  if (context.state.units !== 'in') {\n    context.setUnits('in');\n  }\n\n  const current = { width: context.state.pageWidth, height: context.state.pageHeight };\n  const dimensions = presets[val] || current;\n  context.setPageHeight(dimensions.height);\n  context.setPageWidth(dimensions.width);\n}\n\nfunction SettingsPage() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Setup</Divider>\n\n          <Row style={{ marginBottom: 20 }}>\n            <Col>\n              <Radio.Group\n                style={{ textAlign: 'center', width: '100%' }}\n                value={context.state.units}\n                onChange={e => context.setUnits(e.target.value)}\n              >\n                <Radio.Button value=\"in\">in</Radio.Button>\n                <Radio.Button value=\"cm\">cm</Radio.Button>\n              </Radio.Group>\n            </Col>\n          </Row>\n\n          <Select\n            defaultValue={6}\n            style={{ width: '100%', marginBottom: 15 }}\n            onChange={val => handlePresetChange(val, context)}\n          >\n            {presetOptions}\n          </Select>\n\n          <UnitSlider\n            label=\"Width\"\n            onChange={context.setPageWidth}\n            value={context.state.pageWidth}\n            min={0}\n            max={context.state.pageWidthMax}\n          />\n          <UnitSlider\n            label=\"Height\"\n            onChange={context.setPageHeight}\n            value={context.state.pageHeight}\n            min={0}\n            max={context.state.pageHeightMax}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsPage;\n","import React from 'react';\nimport {\n  Tabs,\n  Row,\n  Col,\n} from 'antd';\n\nimport SettingsShape from './Settings-shape';\nimport SettingsDatum from './Settings-datum';\nimport SettingsPage from './Settings-page';\n\nconst { TabPane } = Tabs;\n\nfunction Settings() {\n  return (\n    <Tabs\n      defaultActiveKey=\"2\"\n      tabBarStyle={{ textAlign: 'center' }}\n      style={{ paddingBottom: 50 }}\n    >\n      <TabPane tab=\"Shape\" key=\"1\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsShape />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Data\" key=\"2\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsDatum />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Page\" key=\"3\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsPage />\n          </Col>\n        </Row>\n      </TabPane>\n    </Tabs>\n  );\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { zipObject, round } from 'lodash';\nimport SettingsContext from './Settings.context';\n\nimport { inchesPerCentimenter, centimetersPerInch } from './util';\n\nconst unitConversionPrecision = 2;\n\n\nclass SettingsProvider extends Component {\n  state = {\n    cellSize: 4,\n    cellSizeMin: 0.1,\n    cellSizeMax: 10,\n    curveOffsetX: 0,\n    curveOffsetY: 0.2,\n    curveRotation: 0,\n    curveScaleX: 0.5,\n    curveScaleY: 0.5,\n    curveType: 'curveBasisClosed',\n    datum: '39,44,58,69,78,86,92,90,82,70,56,43\\n22,28,41,57,70,79,84,81,72,58,41,27\\n61,65,73,80,86,92,96,96,90,82,71,63\\n23,28,31,43,53,59,62,61,55,43,28,25',\n    defaultSliderStepSize: 0.01,\n    effectType: 'etch',\n    etchWidth: 0.01,\n    etchWidthMin: 0.001,\n    etchWidthMax: 0.2,\n    isDramatic: true,\n    lineType: 'radial',\n    pageWidth: 16,\n    pageWidthMax: 48,\n    pageHeight: 12,\n    pageHeightMax: 96,\n    shapeSideCount: 4,\n    showSurround: true,\n    throughHoleExists: true,\n    throughHoleRadius: 0.12,\n    throughHoleX: 2,\n    throughHoleY: 0.5,\n    units: 'in',\n  }\n\n  getStateKeysWithUnits = () => [\n    'defaultSliderStepSize',\n    'cellSize', 'cellSizeMin', 'cellSizeMax',\n    'curveOffsetX', 'curveOffsetY',\n    'etchWidth', 'etchWidthMax',\n    'throughHoleRadius', 'throughHoleX', 'throughHoleY',\n    'pageWidth', 'pageWidthMax', 'pageHeight', 'pageHeightMax',\n  ]\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <SettingsContext.Provider value={{\n        state: this.state,\n        setCellSize: cellSize => this.setState({ cellSize }),\n        setCurveType: curveType => this.setState({ curveType }),\n        setCurveOffsetX: curveOffsetX => this.setState({ curveOffsetX }),\n        setCurveOffsetY: curveOffsetY => this.setState({ curveOffsetY }),\n        setCurveRotation: curveRotation => this.setState({ curveRotation }),\n        setCurveScaleX: curveScaleX => this.setState({ curveScaleX }),\n        setCurveScaleY: curveScaleY => this.setState({ curveScaleY }),\n        setDatum: datum => this.setState({ datum }),\n        setEffectType: effectType => this.setState({ effectType }),\n        setEtchWidth: etchWidth => this.setState({ etchWidth }),\n        setForceClose: forceClose => this.setState({ forceClose }),\n        setIsDramatic: isDramatic => this.setState({ isDramatic }),\n        setLineType: (lineType) => {\n          if (lineType === 'linear') {\n            this.setState({ forceClose: false });\n          }\n          this.setState({ lineType });\n        },\n        setPageWidth: pageWidth => this.setState({ pageWidth }),\n        setPageHeight: pageHeight => this.setState({ pageHeight }),\n        setShapeSideCount: shapeSideCount => this.setState({ shapeSideCount }),\n        setThroughHoleExists: throughHoleExists => this.setState({ throughHoleExists }),\n        setThroughHoleRadius: throughHoleRadius => this.setState({ throughHoleRadius }),\n        setThroughHoleX: throughHoleX => this.setState({ throughHoleX }),\n        setThroughHoleY: throughHoleY => this.setState({ throughHoleY }),\n        setUnits: (unit) => {\n          const { state } = this;\n          if (state.units !== unit) {\n            const factor = unit === 'cm' ? centimetersPerInch : inchesPerCentimenter;\n\n            const keys = this.getStateKeysWithUnits();\n            const zipped = zipObject(\n              keys,\n              keys.map(key => round(state[key] * factor, unitConversionPrecision)),\n            );\n            this.setState(zipped);\n          }\n          this.setState({ units: unit });\n        },\n        setShowSurround: (showSurround) => {\n          if (!showSurround) {\n            this.setState({\n              throughHoleExists: false,\n            });\n          }\n          this.setState({ showSurround });\n        },\n      }}\n      >\n        {children}\n      </SettingsContext.Provider>\n    );\n  }\n}\n\nexport default SettingsProvider;\n","import React from 'react';\nimport GA from 'react-ga';\n\nimport {\n  Button, Form, Input,\n} from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\n\nclass NestedForm extends React.Component {\n  handleSubmit = (e) => {\n    const { form, onSubmit } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        let label = `${values.name} | ${values.email} | ${values.message}`;\n        // https://github.com/react-ga/react-ga/issues/144\n        label = label.replace('@', ' at ');\n        // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#el\n        label = label.substring(0, 500);\n\n        GA.event({\n          category: 'Contact',\n          action: 'Contact:Submit',\n          label,\n        });\n\n        onSubmit();\n      }\n    });\n  }\n\n  render() {\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n\n    return (\n      <React.Fragment>\n        <h3 style={{ marginRight: 35 }}>\n          { /* eslint-disable-next-line max-len */ }\n          { /* eslint-disable-next-line react/no-unescaped-entities, react/jsx-one-expression-per-line */ }\n          Say hi 👋. Tell me what you've made with DataForms. Send me feature requests. Contribute at <a href=\"https://github.com/joelongstreet/data-forms\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a>.\n        </h3>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item label=\"E-mail\">\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, type: 'email', message: 'Not a valid email address' },\n              ],\n            })(\n              <Input />,\n            )}\n          </Form.Item>\n          <Form.Item label=\"Name\">\n            {getFieldDecorator('name', {\n              rules: [\n                { required: true, message: 'What\\'s your name?', whitespace: true },\n              ],\n            })(\n              <Input />,\n            )}\n          </Form.Item>\n          <Form.Item label=\"Message\">\n            {getFieldDecorator('message', {\n              rules: [\n                { required: true, message: 'What would you like to tell me?', whitespace: true },\n              ],\n            })(\n              <TextArea />,\n            )}\n          </Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">Send</Button>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ContactForm = Form.create({ name: 'contact_form' })(NestedForm);\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport { Col, Modal, Row } from 'antd';\n\nimport ContactForm from './Contact.form';\nimport * as Styles from './Styles';\n\n\nclass Footer extends Component {\n  state = {\n    contactModalVisible: false,\n  }\n\n  showContactModal = (e) => {\n    e.preventDefault();\n    this.setState({ contactModalVisible: true });\n  }\n\n  closeContactModal = () => {\n    this.setState({ contactModalVisible: false });\n  }\n\n  render() {\n    const { contactModalVisible } = this.state;\n    return (\n      <React.Fragment>\n        <Row style={{\n          height: Styles.footerHeight,\n          borderTop: `1px solid ${Styles.colors[5]}`,\n          position: 'absolute',\n          bottom: 0,\n          width: '100%',\n        }}\n        >\n          <Col\n            span={23}\n            offset={1}\n            style={{\n              marginRight: 20, marginTop: 10, padding: '15px 0 30px',\n            }}\n          >\n            <a\n              style={{ padding: 20 }}\n              href=\"#contact-modal\"\n              onClick={this.showContactModal}\n            >\n              Contact\n            </a>\n            <span> | </span>\n            <a\n              style={{ padding: 20 }}\n              href=\"https://github.com/joelongstreet/data-forms\"\n              target=\"blank\"\n            >\n              Github\n            </a>\n          </Col>\n        </Row>\n        <Modal\n          onCancel={this.closeContactModal}\n          visible={contactModalVisible}\n          footer={[]}\n          wrapClassName=\"ant-modal-wrap-contact\"\n        >\n          <ContactForm onSubmit={this.closeContactModal} />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Footer;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport * as Styles from './Styles';\n\nimport SettingsContext from './Settings.context';\n\n\nfunction Legend() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <div\n          style={{\n            cursor: 'pointer',\n            padding: 10,\n            paddingRight: 20,\n            left: 0,\n            border: `1px solid ${Styles.colors[5]}`,\n            borderLeft: 'none',\n            position: 'absolute',\n            zIndex: 999,\n            top: Styles.headerHeight + 30,\n          }}\n        >\n          <div onClick={() => context.setEffectType('cut')}>\n            <div style={Styles.getLegendLineStyle(2)} />\n            Cut\n          </div>\n          <div onClick={() => context.setEffectType('etch')}>\n            <div style={Styles.getLegendLineStyle(3)} />\n            Etch\n          </div>\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default Legend;\n","import React from 'react';\nimport FullStory, { FullStoryAPI } from 'react-fullstory';\nimport GA from 'react-ga';\n\nconst env = process.env.NODE_ENV;\nconst isProduction = env === 'production';\n\nif (isProduction) {\n  GA.initialize('UA-137049621-1');\n  GA.ga((tracker) => {\n    const trackerClientId = tracker.get('clientId');\n\n    const fullstoryInitted = setInterval(() => {\n      if (window._fs_namespace) {\n        FullStoryAPI('identify', trackerClientId);\n        clearInterval(fullstoryInitted);\n      }\n    }, 500);\n  });\n}\n\nfunction Analytics() {\n  return (\n    <React.Fragment>\n      { isProduction\n        && <FullStory org=\"K5HZ8\" />\n      }\n    </React.Fragment>\n  );\n}\n\nexport default Analytics;\n","import React from 'react';\nimport {\n  Col,\n  Layout,\n  Row,\n} from 'antd';\n\nimport * as Styles from './Styles';\nimport Preview from './Preview';\nimport Settings from './Settings';\nimport SettingsProvider from './Settings.provider';\nimport Footer from './Footer';\nimport Legend from './Legend';\nimport Analytics from './Analytics';\n\nconst {\n  Content,\n  Sider,\n} = Layout;\n\nfunction App() {\n  return (\n    <SettingsProvider>\n      <Legend />\n\n      {/* Page Header */}\n      <Row style={{ borderBottom: `1px solid ${Styles.colors[5]}` }}>\n        <Col span={23} offset={1}>\n          <h1 style={{\n            height: Styles.headerHeight,\n            fontFamily: \"'Share Tech Mono', monospace\",\n            color: Styles.colors[8],\n            padding: '10px 0 7px 0',\n            margin: 0,\n            letterSpacing: 20,\n            fontSize: '40px',\n            textShadow: '2px 2px 2px black',\n          }}\n          >\n            DATA FORMS\n          </h1>\n        </Col>\n      </Row>\n\n      { /* Sidebar and preview */ }\n      <Layout\n        style={{\n          width: '100%', height: '100%', position: 'absolute', top: 0, background: 'none', overflow: 'hidden',\n        }}\n      >\n        <Content\n          style={{\n            position: 'relative',\n            top: Styles.headerHeight,\n            marginBottom: Styles.headerHeight + Styles.footerHeight,\n            paddingBottom: 200,\n          }}\n        >\n          <Preview />\n        </Content>\n        <Sider\n          width={450}\n          style={{\n            marginBottom: Styles.footerHeight,\n            marginRight: 20,\n            marginTop: 33,\n            background: Styles.colors[0],\n            border: `1px solid ${Styles.colors[5]}`,\n            borderBottom: 'none',\n            overflowY: 'scroll',\n          }}\n        >\n          <Settings />\n        </Sider>\n      </Layout>\n\n      <Footer />\n      <Analytics />\n    </SettingsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}