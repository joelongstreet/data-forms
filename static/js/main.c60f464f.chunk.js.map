{"version":3,"sources":["Styles.js","util.js","Analytics.js","Contact.form.js","Examples.data.js","Example.js","Examples.js","Download.js","Footer.js","Settings.context.js","Legend.js","PagePreview.js","Tile.js","Tiles.js","Preview.js","UnitSlider.js","Settings-shape.js","Settings-datum.js","Settings-page.js","Settings.js","Settings.provider.js","App.js","serviceWorker.js","index.js"],"names":["colors","module","exports","headerHeight","footerHeight","divider","marginTop","previewVerticalCellPadding","getLegendLineStyle","styleColorIndex","borderTop","concat","width","float","marginRight","centimetersPerInch","pixelsPerInch","convertDegreesToRadians","degrees","Math","PI","convertUnitsToPixels","unit","Error","getCoordsFromRadiansAndRadius","radian","radius","round","cos","sin","inchesPerCentimenter","svgDocumentMeta","version","xlinkTitle","xmlns","xmlnsXlink","xmlSpace","svgDownloadContainerId","isProduction","env","GA","initialize","ga","tracker","trackerClientId","get","fullstoryInitted","setInterval","window","_fs_namespace","FullStoryAPI","clearInterval","Analytics","react_default","a","createElement","Fragment","build_default","org","NestedForm","handleSubmit","e","_this$props","_this","props","form","onSubmit","preventDefault","validateFields","err","values","label","name","email","message","replace","substring","event","category","action","getFieldDecorator","this","style","href","rel","target","es_form","Item","rules","required","type","input","whitespace","TextArea_default","es_button","htmlType","React","Component","ContactForm","create","Examples_data","title","description","images","settings","cellSize","curveOffsetX","curveOffsetY","curveRotation","curveScaleX","curveScaleY","curveType","datum","effectType","etchWidth","forceClose","isDramatic","isSingleton","lineType","pageWidth","pageHeight","shapeSideCount","showSurround","throughHoleExists","units","throughHoleRadius","throughHoleX","throughHoleY","Example","state","imageIndex","nextImage","nextIndex","length","setState","popover","content","overlayClassName","overlayStyle","maxWidth","arrowPointAtCenter","tabIndex","role","onKeyPress","onClick","backgroundImage","backgroundSize","backgroundPosition","cursor","paddingBottom","position","display","overflow","Examples","visible","onClose","translateY","examples","ExampleData","map","d","i","src_Example","key","backgroundColor","Styles","height","top","transition","transform","zIndex","id","color","fontSize","right","padding","borderRight","downloadSvgDocument","svgDocument","document","getElementById","innerHTML","file","btoa","timestamp","dayjs","format","notification","warning","duration","aLink","download","dispatchEvent","MouseEvent","Footer","contactModalVisible","examplesVisible","showContactModal","showExamples","closeContactModal","closeExamples","_this$state","row","bottom","col","span","offset","modal","onCancel","footer","wrapClassName","Contact_form","src_Examples","SettingsContext","createContext","Legend","setEffectType","context","Settings_context","Consumer","paddingRight","left","border","borderLeft","scaleFactor","PagePreview","dataRowCount","split","s","w","h","times","boxSizing","margin","rotationMap","3","4","5","6","7","8","polygonSurroundLineFunction","d3","x","y","curve","Tile","data","group","isPreview","xOffset","yDomain","yOffset","etchColor","cutColor","cutPathWidth","push","xF","yF","lineF","xDomain","range","domain","angle","attr","rotation","vertices","Object","toConsumableArray","Array","getVerticesForSurroundingPolygon","append","translate","curvePathWidth","curveColor","curveTranslationString","curveRotationString","ratio","dontRenderOnUpdate","Tiles","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderD3","bind","assertThisInitialized","svg","createRef","prevProps","keys","some","includes","fauxDoc","connectFauxDOM","fauxDocPreview","select","svgPreview","empty","dataSets","ds","reduce","r","Number","uniq","flat","reverse","svgPreviewHeight","attrs","assign","viewBox","selectAll","remove","tileOptions","opts","cellsPerRow","floor","drawFauxDOM","documentPreview","FauxDom","withFauxDOM","Preview","scrollArea","textAreaHighlightIndex","cellWithPadding","scrollTo","ref","smooth","src_Tiles","ScrollToHOC","defaultSliderStepSize","defaultInputPrevision","handleSelect","setSelectionRange","value","UnitSlider","propsPrecision","inputPrecision","precision","slider","disabled","min","max","step","onChange","input_number","val","stateSetter","num","isNaN","handleChange","paddingTop","hideUnits","Option","curves","functionName","curveOptions","getCurrentCurve","find","c","getThroughTooltipTitle","SettingsShape","tooltip","es_checkbox","marginBottom","checked","setShowSurround","src_UnitSlider","setCellSize","cellSizeMin","cellSizeMax","setShapeSideCount","setThroughHoleExists","setThroughHoleRadius","setThroughHoleX","setThroughHoleY","es_radio","Group","setLineType","Button","setForceClose","es_select","defaultValue","findIndex","setCurveType","handleCurveChange","setCurveOffsetX","setCurveOffsetY","setCurveRotation","setCurveScaleX","setCurveScaleY","TextArea","examplesOptions","Settings_datum_Option","handleExampleChange","forEach","settingKey","fn","charAt","toUpperCase","slice","calculateTilePreviewPosition","line","substr","selectionStart","setTextAreaHighlightIndex","defaultSelectValue","random","SettingsDatum","setIsSingleton","setEtchWidth","etchWidthMin","etchWidthMax","setIsDramatic","Settings_datum_TextArea","rows","onKeyUp","fontFamily","whiteSpace","setDatum","contextType","presets","presetOptions","p","Settings_page_Option","SettingsPage","textAlign","setUnits","current","dimensions","setPageHeight","setPageWidth","handlePresetChange","pageWidthMax","pageHeightMax","block","TabPane","Settings","tabs","defaultActiveKey","tabBarStyle","tab","Settings_shape","Settings_datum","Settings_page","SettingsProvider","getStateKeysWithUnits","_this2","children","Provider","xRatio","yRatio","suggestCurveType","newCurveType","factor","zipped","zipObject","Content","Sider","App","Settings_provider","src_Legend","borderBottom","letterSpacing","textShadow","layout","background","src_PagePreview","src_Preview","overflowY","src_Settings","src_Footer","src_Analytics","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c60f464f.chunk.js","sourcesContent":["const colors = [\n  'rgb(36, 41, 52)', // black\n  'rgb(203, 204, 198)', // white\n  'rgb(212, 193, 253)', // purple\n  'rgb(187, 229, 131)', // green\n  'rgb(244, 205, 130)', // gold\n  'rgb(90, 101, 112)', // grey (white)\n  'rgb(240, 135, 123)', // red,\n  'rgb(45, 55, 65)', // grey (black)\n  'rgb(255, 255, 255)', // white white\n  'rgb(95,202,224)', // blue\n  'rgb(26, 31, 42)', // dark black\n];\n\nconst divider = { marginTop: 75 };\nconst previewVerticalCellPadding = 50;\nconst headerHeight = 77;\nconst footerHeight = 75;\n\nfunction getLegendLineStyle(styleColorIndex) {\n  return {\n    borderTop: `1px solid ${colors[styleColorIndex]}`,\n    width: 10,\n    float: 'left',\n    marginTop: 10,\n    marginRight: 10,\n  };\n}\n\nmodule.exports = {\n  colors,\n  headerHeight,\n  footerHeight,\n  divider,\n  previewVerticalCellPadding,\n  getLegendLineStyle,\n};\n","const centimetersPerInch = 2.54;\nconst inchesPerCentimenter = 0.393701;\nconst pixelsPerInch = 72;\nconst svgDownloadContainerId = 'svg-download-container';\n\nfunction convertUnitsToPixels(float, unit) {\n  if (unit === 'in') {\n    return float * pixelsPerInch;\n  }\n  if (unit === 'cm') {\n    return (float * pixelsPerInch) / centimetersPerInch;\n  }\n\n  throw new Error(`${unit} unit not supported`);\n}\n\nfunction convertDegreesToRadians(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\n// pass in a radian and the radius of a circle\n// get back an array with 2 items: [xPosition, yPosition]\nfunction getCoordsFromRadiansAndRadius(radian, radius) {\n  return [\n    Math.round(Math.cos(radian) * radius) + radius,\n    Math.round(Math.sin(radian) * radius) + radius,\n  ];\n}\n\nconst svgDocumentMeta = {\n  version: '1.1',\n  xlinkTitle: 'DataForms',\n  xmlns: 'http://www.w3.org/2000/svg',\n  xmlnsXlink: 'http://www.w3.org/1999/xlink',\n  xmlSpace: 'preserve',\n};\n\nmodule.exports = {\n  centimetersPerInch,\n  convertDegreesToRadians,\n  convertUnitsToPixels,\n  getCoordsFromRadiansAndRadius,\n  inchesPerCentimenter,\n  pixelsPerInch,\n  svgDocumentMeta,\n  svgDownloadContainerId,\n};\n","import React from 'react';\nimport FullStory, { FullStoryAPI } from 'react-fullstory';\nimport GA from 'react-ga';\n\nconst env = process.env.NODE_ENV;\nconst isProduction = env === 'production';\n\nif (isProduction) {\n  GA.initialize('UA-137049621-1');\n  GA.ga((tracker) => {\n    const trackerClientId = tracker.get('clientId');\n\n    const fullstoryInitted = setInterval(() => {\n      if (window._fs_namespace) {\n        FullStoryAPI('identify', trackerClientId);\n        clearInterval(fullstoryInitted);\n      }\n    }, 500);\n  });\n}\n\nfunction Analytics() {\n  return (\n    <React.Fragment>\n      { isProduction\n        && <FullStory org=\"K5HZ8\" />\n      }\n    </React.Fragment>\n  );\n}\n\nexport default Analytics;\n","import React from 'react';\nimport GA from 'react-ga';\n\nimport {\n  Button, Form, Input,\n} from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\n\nclass NestedForm extends React.Component {\n  handleSubmit = (e) => {\n    const { form, onSubmit } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        let label = `${values.name} | ${values.email} | ${values.message}`;\n        // https://github.com/react-ga/react-ga/issues/144\n        label = label.replace('@', ' at ');\n        // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#el\n        label = label.substring(0, 500);\n\n        GA.event({\n          category: 'Contact',\n          action: 'Contact:Submit',\n          label,\n        });\n\n        onSubmit();\n      }\n    });\n  }\n\n  render() {\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n\n    return (\n      <React.Fragment>\n        <h3 style={{ marginRight: 35 }}>\n          { /* eslint-disable-next-line max-len */ }\n          { /* eslint-disable-next-line react/no-unescaped-entities, react/jsx-one-expression-per-line */ }\n          Say hi 👋. Tell me what you've made with DataForms. Send me feature requests. Contribute at <a href=\"https://github.com/joelongstreet/data-forms\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a>.\n        </h3>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item label=\"E-mail\">\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, type: 'email', message: 'Not a valid email address' },\n              ],\n            })(\n              <Input />,\n            )}\n          </Form.Item>\n          <Form.Item label=\"Name\">\n            {getFieldDecorator('name', {\n              rules: [\n                { required: true, message: 'What\\'s your name?', whitespace: true },\n              ],\n            })(\n              <Input />,\n            )}\n          </Form.Item>\n          <Form.Item label=\"Message\">\n            {getFieldDecorator('message', {\n              rules: [\n                { required: true, message: 'What would you like to tell me?', whitespace: true },\n              ],\n            })(\n              <TextArea />,\n            )}\n          </Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">Send</Button>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ContactForm = Form.create({ name: 'contact_form' })(NestedForm);\n\nexport default ContactForm;\n","export default [\n  {\n    title: 'Slugging Percentage - American Baseball',\n    description: '162 game average slugging percentage (Singles * 1, Doubles * 2, Triples * 3, HR * 4). Players include Ty Cobb, Babe Ruth, Shoeless Joe Jackson, Honus Wagner, Ted Williams, Lou Gehrig, Joe DiMaggio, Jackie Robinson, Stan Musial, Mickey Mantle, Yogi Berra, Roberto Clemente, Willie Mays, Hank Aaron, Pete Rose, George Brett, Derek Jeter, Ken Griffey Jr, Mark McGwire, Cal Ripken Jr, and Sammy Sosa.',\n    images: ['examples/slugging-percentage/1.jpg'],\n    settings: {\n      cellSize: 2.5,\n      curveOffsetX: 0,\n      curveOffsetY: 0,\n      curveRotation: 0,\n      curveScaleX: 0.35,\n      curveScaleY: 0.5,\n      curveType: 'curveLinearClosed',\n      datum: `78,163,24,48\n66,98,184,27\n74,152,28,60\n74,140,24,45\n74,109,148,15\n80,115,148,36\n72,125,136,36\n64,124,64,18\n78,121,100,27\n46,99,144,15\n50,108,108,12\n58,144,64,33\n56,106,144,24\n62,112,148,15\n68,147,28,18\n80,122,76,24\n64,153,60,12\n64,97,152,6\n44,68,200,3\n66,114,92,6\n52,95,168,9`,\n      effectType: 'etch',\n      etchWidth: 0.030,\n      forceClose: false,\n      isDramatic: false,\n      isSingleton: false,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 4,\n      showSurround: true,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Ocean Tide - New York, New York USA',\n    description: 'Alternating low and high tide height for New York City USA. Dates include April 30 2019 to May 8 2019',\n    images: ['examples/nyc-ocean-tide/1.jpg'],\n    settings: {\n      cellSize: 2.12,\n      curveOffsetX: 0.01,\n      curveOffsetY: 0.42,\n      curveRotation: 45,\n      curveScaleX: 0.83,\n      curveScaleY: 0.60,\n      curveType: 'curveBasis',\n      datum: `0,0.37,1.29,0.26,1.22,0.37,0\n0,0.37,1.29,0.22,1.29,0.31,0\n0,0.31,1.32,0.17,1.37,0.23,0\n0,0.23,1.37,0.12,1.45,0.15,0\n0,0.15,1.41,0.08,1.54,0.08,0\n0,0.08,1.44,0.05,1.60,0.02,0\n0,0.02,1.44,0.03,1.65,-0.02,0\n0,-0.02,1.44,0.02,1.68,-0.04,0\n0,-0.04,1.41,0.04,1.68,-0.03,0\n0,-0.03,1.38,0.07,1.66,0.00,0`,\n      effectType: 'cut',\n      forceClose: false,\n      isDramatic: false,\n      isSingleton: false,\n      lineType: 'linear',\n      pageWidth: 12,\n      pageHeight: 12,\n      shapeSideCount: 4,\n      showSurround: true,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Monthly Weather - Kansas City, Missouri USA',\n    description: 'Every other day\\'s high temperature in Kansas City, Missouri USA for 4 notable months. Jane, Ruby, Lucy (my 3 children) and Megan (wife) birth month year. November 2015, March 2017, June 2018, and March 1986 respectively.',\n    images: ['examples/kc-weather/1.jpg'],\n    settings: {\n      cellSize: 0.75,\n      curveOffsetX: 0,\n      curveOffsetY: 0.08,\n      curveRotation: 0,\n      curveScaleX: 0.25,\n      curveScaleY: 0.21,\n      curveType: 'curveCatmullRomClosed',\n      datum: `76,71,72,60,61,74,60,62,61,50,38,62,62,34,35,40\n51,55,60,59,62,34,41,35,73,87,61,80,57,53,56,53,50\n91,82,86,88,91,95,83,95,95,83,70,83,84,90,97,96\n55,41,46,30,75,53,42,52,66,46,48,63,72,70,84,82,80`,\n      effectType: 'cut',\n      forceClose: false,\n      isDramatic: true,\n      isSingleton: false,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 2,\n      showSurround: true,\n      throughHoleExists: true,\n      throughHoleRadius: 0.1,\n      throughHoleX: 0.38,\n      throughHoleY: 0.15,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Weekly S&P 500 closing price - 1950 to 2018',\n    description: 'The weekly closing price of the S&P 500, grouped by year. Range includes every week for even years between Jan 03 1950 and Dec 31 2018.',\n    images: ['examples/s-p-500/1.jpg'],\n    settings: {\n      cellSize: 9,\n      curveOffsetX: 0,\n      curveOffsetY: 0,\n      curveRotation: 0,\n      curveScaleX: 0.5,\n      curveScaleY: 2,\n      curveType: 'curveCatmullRomClosed',\n      datum: `17.09,16.65,16.940001,16.9,17.35,17.209999,17.23,17.26,17.33,17.139999,17.49,17.610001,17.34,17.82,17.860001,17.950001,18.07,18.33,18.200001,18.709999,18.65,18.790001,19.26,18.969999,19.139999,17.690001,17.67,16.870001,17.59,17.690001,18.139999,18.280001,18.68,18.540001,18.549999,18.75,19.290001,19.440001,19.450001,20.16,19.709999,20.01,19.790001,19.780001,19.940001,19.950001,20.280001,19.540001,19.5,19.639999,20.07,20.41\n24.059999,24.33,24.59,24.41,24.25,23.84,23.360001,23.280001,23.77,23.83,23.940001,24.34,24,24.15,23.51,23.58,23.59,23.799999,23.559999,23.889999,23.860001,24.26,24.370001,24.59,24.83,25.049999,24.98,24.85,25.16,25.450001,25.549999,25.200001,24.99,25.030001,25.209999,24.709999,24.57,24.73,24.5,24.549999,24.200001,24.030001,24.52,24.780001,24.75,25.27,25.66,25.620001,26.040001,26.15,26.25,26.540001\n24.93,25.43,25.85,26.08,26.299999,26.120001,25.92,26.15,26.52,26.690001,26.809999,26.559999,27.209999,27.379999,27.940001,27.780001,28.26,28.65,28.799999,28.99,29.190001,29.1,28.58,29.040001,29.200001,29.59,30.139999,30.059999,30.309999,30.879999,30.379999,30.719999,31.209999,30.66,30.5,30.84,31.709999,32.400002,32.290001,32.669998,31.709999,32.130001,31.68,32.709999,33.540001,33.450001,34.549999,34.490002,34.560001,35.919998,35.369999,35.98\n45.139999,44.669998,43.220001,43.349998,44.779999,43.639999,44.52,45.32,45.810001,46.700001,48.139999,48.830002,48.48,48.849998,47.950001,47.759998,47.990002,48.509998,47.119999,46.389999,44.619999,45.580002,45.139999,46.369999,46.59,46.970001,48.040001,48.720001,49.349998,49.080002,49.639999,49.09,48.82,47.950001,47.509998,47.810001,47.209999,46.580002,45.349998,46.450001,47,46.240002,46.27,46.98,46.34,45.740002,45.139999,45.080002,47.040001,46.540001,46.369999,46.560001,46.66\n40.369999,41.099998,41.709999,41.700001,41.73,41.330002,40.880001,40.84,42.07,42.330002,42.419998,42.200001,41.48,41.740002,42.709999,43.360001,43.689999,44.09,43.360001,43.869999,44.09,44.639999,45.02,44.849998,44.900002,45.470001,45.720001,45.77,46.970001,47.490002,48.049999,47.5,47.73,47.75,47.970001,48.529999,49.400002,49.66,50.369999,51.389999,51.459999,50.810001,51.330002,52.259998,53.09,52.700001,52.48,52.459999,53.220001,54.07,54.110001,55.439999\n59.5,58.380001,57.380001,55.610001,55.98,55.459999,56.240002,56.16,54.57,54.240002,55.009998,55.98,55.43,56.389999,56.43,55.419998,54.369999,54.75,55.299999,55.73,55.740002,56.23,57.970001,57.439999,57.68,57.060001,57.380001,56.049999,54.720001,55.509998,55.439999,56.66,57.009998,57.599998,57,56.110001,55.110001,53.900002,53.52,54.029999,54.860001,53.720001,53.41,54.900002,55.869999,55.82,56.130001,55.389999,56.650002,57.200001,57.439999,58.110001\n69.660004,69.610001,68.75,68.129997,69.809998,70.480003,70.589996,70.160004,70.160004,70.419998,70.940002,70.449997,69.550003,68.839996,67.900002,68.589996,66.300003,66.239998,62.650002,63.82,59.470001,59.380001,58.450001,55.889999,52.68,54.75,56.169998,57.830002,56.810001,57.200001,58.119999,57.549999,59.009998,59.580002,59.119999,58.380001,58.889999,57.689999,56.27,57.07,56.950001,55.59,54.540001,57.75,58.779999,60.16,61.540001,62.259998,63.060001,62.57,62.639999,62.959999,64.129997\n76.239998,76.559998,77.110001,77.040001,77.18,77.480003,77.620003,77.800003,78.309998,79.139999,78.919998,79.190002,79.940002,79.849998,80.550003,79.75,80.169998,81,81.099998,80.730003,80.370003,79.019997,79.599998,80.889999,81.459999,82.599998,83.360001,84.010002,83.459999,83.18,81.860001,82.349998,82.07,81.989998,82.760002,83.449997,83.480003,84.209999,84.360001,85.220001,84.830002,85.139999,84.860001,85.230003,85.209999,86.279999,85.160004,84.349998,83.660004,84.290001,84.150002,84.75\n93.139999,93.5,93.470001,93.309998,93.260002,93.809998,92.410004,91.139999,89.239998,88.849998,88.529999,89.540001,89.940002,91.760002,91.989998,92.269997,91.059998,87.839996,85.470001,85.43,87.330002,86.059998,86.440002,86.510002,86.580002,85.610001,87.610001,87.080002,85.410004,83.599998,84,83.169998,79.620003,76.410004,77.419998,76.290001,79.989998,77.669998,76.559998,73.199997,76.599998,78.190002,80.239998,80.809998,81.940002,81.260002,80.849998,80.129997,82.139999,81.580002,81.470001,80.330002\n95.940002,96.720001,95.239998,93.449997,92.269997,89.860001,89.959999,90.889999,89.110001,89.029999,89.099998,88.419998,90.199997,93.290001,96.529999,95.849998,97.209999,98.660004,98.5,96.900002,97.150002,98.68,101.269997,101.129997,100.660004,99.580002,100.910004,102.339996,100.459999,98.339996,96.629997,97.010002,98.68,98.690002,98.860001,101.199997,100.860001,101.660004,102.309998,103.709999,103.18,104.82,104.199997,103.059998,103.949997,105.779999,106.300003,108.370003,107.93,107.580002,106.339996,104.739998,103.989998\n92.400002,90.919998,89.370003,85.019997,86.330002,86.540001,88.029999,89.5,89.440002,87.860001,87.059998,89.919998,89.389999,88.239998,85.669998,82.769997,81.440002,79.440002,76.900002,72.25,76.550003,76.169998,73.879997,77.050003,73.470001,72.919998,74.449997,77.690002,77.82,78.050003,77.279999,75.18,79.239998,81.860001,82.830002,82.519997,82.620003,82.830002,85.160004,85.080002,84.279999,83.769997,83.25,84.220001,83.370003,83.720001,85.93,89.459999,90.260002,90.220001,90.610001,92.150002\n103.470001,103.389999,103.650002,104.160004,104.860001,105.080002,105.279999,106.18,107.940002,108.379997,107.919998,107.519997,107.199997,109.620003,109.839996,108.889999,107.669998,106.629997,106.379997,108.980003,110.660004,109.730003,106.860001,108.360001,108.269997,107.139999,108.690002,106.800003,106.660004,107.379997,110.43,111.949997,111.760002,110.669998,111.510002,110.150002,108.809998,108.519997,110.550003,109.620003,107.919998,109.239998,110.620003,114.220001,113.730003,115.489998,117.269997,117.379997,118.860001,118.260002,115.830002,118.050003\n93.660004,95.559998,96.629997,95.32,92.330002,92.269997,95.389999,95.529999,97.779999,99.279999,97.269997,93.980003,93.010002,92.120003,93.75,90.18,91.290001,91.470001,88.209999,88.580002,87.279999,92.550003,91.300003,87.459999,86,83.660004,83.150002,83.540001,82.400002,78.589996,80.860001,75.669998,71.550003,72.150002,71.419998,65.199997,70.139999,64.940002,62.34,71.139999,72.279999,70.120003,73.879997,74.910004,71.910004,68.900002,69.970001,65.010002,67.07,66.910004,67.139999,70.709999\n94.949997,97,99.209999,100.860001,99.459999,99.669998,102.099998,99.709999,99.110001,100.860001,100.580002,102.849998,102.25,100.349998,100.669998,102.290001,101.639999,101.879997,101.339996,101.260002,100.18,99.150002,100.919998,103.760002,103.720001,104.110001,104.980003,104.68,104.059998,103.440002,103.790001,104.25,102.370003,101.480003,104.300003,104.650002,106.269997,106.800003,104.169998,102.559998,100.879997,99.959999,102.900002,100.82,99.239998,101.919998,103.150002,102.760002,104.699997,104.260002,104.839996,107.459999\n91.620003,89.690002,89.889999,88.580002,89.620003,90.080002,87.959999,88.489998,87.449997,88.879997,90.199997,89.360001,89.209999,90.169998,92.919998,94.339996,96.830002,96.529999,98.07,98.120003,96.580002,98.139999,99.93,97.419998,95.849998,95.529999,94.889999,97.580002,97.75,100,103.919998,103.959999,104.730003,104.900002,103.68,106.790001,104.120003,101.839996,102.540001,103.519997,104.660004,97.949997,94.589996,96.18,94.769997,94.419998,95.790001,96.279999,96.629997,95.330002,96.309998,96.110001\n109.919998,111.07,113.610001,115.120003,117.949997,115.410004,115.040001,113.660004,106.900002,105.43,102.309998,100.68,102.150002,103.790001,100.550003,105.160004,105.580002,104.720001,107.349998,110.620003,111.239998,113.199997,115.809998,114.059998,116,117.459999,117.839996,122.040001,120.779999,121.209999,123.610001,125.720001,126.019997,122.379997,124.879997,125.540001,129.25,126.349998,129.330002,130.289993,131.520004,129.850006,127.470001,129.179993,137.149994,139.110001,140.520004,134.029999,129.229996,133.699997,136.570007,136.339996\n119.550003,116.330002,115.379997,120.400002,117.260002,114.379997,113.220001,113.110001,109.339996,108.610001,110.610001,111.940002,115.120003,116.220001,116.809998,118.639999,116.440002,119.470001,118.010002,114.889999,111.879997,110.089996,111.239998,107.279999,109.139999,107.650002,108.830002,111.07,111.169998,107.089996,103.709999,103.849998,113.019997,117.110001,122.68,120.970001,122.550003,123.32,121.970001,131.050003,133.570007,138.830002,133.720001,142.160004,139.529999,137.020004,134.880005,138.690002,139.570007,137.490005,139.720001,140.639999\n169.279999,167.020004,166.210007,163.940002,160.910004,156.300003,155.740005,157.509995,159.240005,154.350006,159.270004,156.860001,159.179993,155.479996,157.309998,158.020004,159.889999,159.110001,158.490005,155.779999,151.619995,153.240005,155.169998,149.029999,154.460007,153.179993,152.240005,150.880005,149.550003,151.190002,162.350006,165.419998,164.139999,167.509995,166.679993,164.369995,168.779999,165.669998,166.100006,162.679993,164.179993,167.960007,165.289993,167.419998,167.600006,164.100006,166.919998,163.580002,162.259995,162.690002,165.509995,166.259995,163.679993\n205.960007,208.429993,206.429993,211.779999,214.559998,219.759995,224.619995,226.919998,225.570007,236.550003,233.339996,238.970001,228.690002,235.970001,242.380005,242.289993,234.789993,237.850006,232.759995,241.350006,247.350006,245.669998,245.729996,247.580002,249.600006,251.789993,242.220001,236.360001,240.220001,234.910004,236.880005,247.149994,250.190002,252.929993,250.470001,230.669998,232.210007,232.229996,233.710007,235.479996,238.839996,238.259995,243.979996,245.770004,244.5,245.860001,249.220001,251.169998,247.350006,249.729996,246.919998,246.449997\n243.399994,252.050003,246.5,257.070007,250.960007,257.630005,261.609985,262.459991,267.299988,264.940002,271.119995,258.51001,258.890015,269.429993,259.769989,260.140015,261.329987,257.480011,256.779999,253.020004,253.419998,266.450012,271.26001,270.679993,273.779999,271.779999,270.019989,272.049988,263.5,272.019989,271.149994,262.549988,260.23999,259.679993,264.480011,266.839996,270.649994,269.76001,271.910004,278.070007,275.5,283.660004,278.529999,276.309998,267.920013,266.470001,267.230011,271.809998,277.029999,276.290009,277.869995,277.720001\n352.200012,339.929993,339.149994,325.799988,330.920013,333.619995,332.720001,324.149994,335.540009,337.929993,341.910004,337.220001,339.940002,340.079987,344.339996,335.119995,329.109985,338.390015,352,354.640015,354.579987,363.160004,358.709991,362.910004,355.429993,358.019989,358.420013,367.309998,361.609985,353.440002,344.859985,335.519989,327.829987,311.51001,322.559998,323.399994,316.829987,311.320007,306.049988,311.5,300.029999,312.480011,304.709991,311.850006,313.73999,317.119995,315.100006,322.220001,327.75,326.820007,331.75,328.720001,321\n415.100006,418.859985,415.480011,408.779999,411.089996,412.480011,411.429993,412.700012,404.440002,405.839996,411.299988,403.5,401.549988,404.290009,416.040009,409.019989,412.529999,416.049988,410.089996,414.019989,415.350006,413.480011,409.76001,403.670013,403.450012,411.769989,414.619995,415.619995,411.600006,424.209991,418.880005,419.910004,414.850006,414.839996,417.079987,419.579987,422.929993,414.350006,410.470001,402.660004,411.730011,414.100006,418.679993,417.579987,422.429993,426.649994,430.160004,432.059998,433.730011,441.279999,439.769989,435.709991\n469.899994,474.910004,474.720001,478.700012,469.809998,470.179993,467.690002,466.070007,464.73999,466.440002,471.059998,460.579987,445.769989,447.100006,446.179993,447.630005,450.910004,447.820007,444.140015,454.920013,457.329987,460.130005,458.670013,458.450012,442.799988,446.200012,449.549988,454.160004,453.109985,458.26001,457.089996,461.940002,463.679993,473.799988,470.98999,468.179993,471.190002,459.670013,462.709991,455.100006,469.100006,464.890015,473.769989,462.279999,462.350006,461.470001,452.290009,453.299988,446.959991,458.799988,459.829987,459.269989\n616.710022,601.809998,611.830017,621.619995,635.840027,656.369995,647.97998,659.080017,644.369995,633.5,641.429993,650.619995,645.5,655.859985,636.710022,645.070007,653.460022,641.630005,652.090027,668.909973,678.51001,669.119995,673.309998,665.849976,666.840027,670.630005,657.440002,646.190002,638.72998,635.900024,662.48999,662.099976,665.210022,667.030029,651.98999,655.679993,680.539978,687.030029,686.190002,701.460022,700.659973,710.820007,700.919983,703.77002,730.820007,737.619995,748.72998,757.02002,739.599976,728.640015,748.869995,756.789978,748.030029\n927.690002,961.51001,957.590027,980.280029,1012.460022,1020.090027,1034.209961,1049.339966,1055.689941,1068.609985,1099.160034,1095.439941,1122.699951,1110.670044,1122.719971,1107.900024,1121,1108.140015,1108.72998,1110.469971,1090.819946,1113.859985,1098.839966,1100.650024,1133.199951,1146.420044,1164.329956,1186.75,1140.800049,1120.670044,1089.449951,1062.75,1081.23999,1027.140015,973.890015,1009.059998,1020.090027,1044.75,1002.599976,984.390015,1056.420044,1070.670044,1098.670044,1141.01001,1125.719971,1163.550049,1192.329956,1176.73999,1166.459961,1188.030029,1226.27002,1229.22998\n1441.469971,1465.150024,1441.359985,1360.160034,1424.369995,1387.119995,1346.089966,1333.359985,1409.170044,1395.069946,1464.469971,1527.459961,1498.579956,1516.349976,1356.560059,1434.540039,1452.430054,1432.630005,1420.959961,1406.949951,1378.02002,1477.26001,1456.949951,1464.459961,1441.47998,1454.599976,1478.900024,1509.97998,1480.189941,1419.890015,1462.930054,1471.839966,1491.719971,1506.449951,1520.77002,1494.5,1465.810059,1448.719971,1436.51001,1408.98999,1374.170044,1396.930054,1379.579956,1426.689941,1365.97998,1367.719971,1341.77002,1315.22998,1369.890015,1312.150024,1305.949951,1320.280029\n1145.599976,1127.579956,1133.280029,1122.199951,1096.219971,1104.180054,1089.839966,1131.780029,1164.310059,1166.160034,1148.699951,1147.390015,1122.72998,1111.01001,1125.170044,1076.319946,1073.430054,1054.98999,1106.589966,1083.819946,1067.140015,1027.530029,1007.27002,989.140015,989.820007,989.030029,921.390015,847.75,852.840027,864.23999,908.640015,928.77002,940.859985,916.070007,893.919983,889.809998,845.390015,827.369995,800.580017,835.320007,884.390015,897.650024,900.960022,894.73999,909.830017,930.549988,936.309998,912.22998,889.47998,895.76001,875.400024,908.590027\n1121.859985,1139.829956,1141.550049,1131.130005,1142.76001,1145.810059,1144.109985,1144.939941,1156.859985,1120.569946,1109.780029,1108.060059,1141.810059,1139.319946,1134.609985,1140.599976,1107.300049,1098.699951,1095.699951,1093.560059,1120.680054,1122.5,1136.469971,1135.02002,1134.430054,1125.380005,1112.810059,1101.390015,1086.199951,1101.719971,1063.969971,1064.800049,1098.349976,1107.77002,1113.630005,1123.920044,1128.550049,1110.109985,1131.5,1122.140015,1108.199951,1095.73999,1130.199951,1166.170044,1184.170044,1170.339966,1182.650024,1191.170044,1188,1194.199951,1210.130005,1211.920044\n1285.449951,1287.609985,1261.48999,1283.719971,1264.030029,1266.98999,1287.23999,1289.430054,1287.22998,1281.420044,1307.25,1302.949951,1294.869995,1295.5,1289.119995,1311.280029,1310.609985,1325.76001,1291.23999,1267.030029,1280.160034,1288.219971,1252.300049,1251.540039,1244.5,1270.199951,1265.47998,1236.199951,1240.290039,1278.550049,1279.359985,1266.73999,1302.300049,1295.089966,1311.01001,1298.920044,1319.660034,1314.780029,1335.849976,1349.589966,1365.619995,1368.599976,1377.339966,1364.300049,1380.900024,1401.199951,1400.949951,1396.709961,1409.839966,1427.089966,1410.76001,1418.300049\n1401.02002,1325.189941,1330.609985,1395.420044,1331.290039,1349.98999,1353.109985,1330.630005,1293.369995,1288.140015,1329.51001,1315.219971,1370.400024,1332.829956,1390.329956,1397.839966,1413.900024,1388.280029,1425.349976,1375.930054,1400.380005,1360.680054,1360.030029,1317.930054,1278.380005,1262.900024,1239.48999,1260.680054,1257.76001,1260.310059,1296.319946,1298.199951,1292.199951,1282.829956,1242.310059,1251.699951,1255.079956,1213.27002,1099.22998,899.219971,940.549988,876.77002,968.75,930.98999,873.289978,800.030029,896.23999,876.070007,879.72998,887.880005,872.799988,931.799988\n1144.97998,1136.030029,1091.76001,1073.869995,1066.189941,1075.51001,1109.170044,1104.48999,1138.699951,1149.98999,1159.900024,1166.589966,1178.099976,1194.369995,1192.130005,1217.280029,1186.689941,1110.880005,1135.680054,1087.689941,1089.410034,1064.880005,1091.599976,1117.51001,1076.76001,1022.580017,1077.959961,1064.880005,1102.660034,1101.599976,1121.640015,1079.25,1071.689941,1064.589966,1104.51001,1109.550049,1125.589966,1148.670044,1146.23999,1165.150024,1176.189941,1183.079956,1183.26001,1225.849976,1199.209961,1199.72998,1189.400024,1224.709961,1240.400024,1243.910034,1256.77002,1257.640015\n1277.810059,1289.089966,1315.380005,1316.329956,1344.900024,1342.640015,1361.22998,1365.73999,1369.630005,1370.869995,1404.170044,1397.109985,1408.469971,1398.079956,1370.26001,1378.530029,1403.359985,1369.099976,1353.390015,1295.219971,1317.819946,1278.040039,1325.660034,1342.839966,1335.02002,1362.160034,1354.680054,1356.780029,1362.660034,1385.969971,1390.98999,1405.869995,1418.160034,1411.130005,1406.579956,1437.920044,1465.77002,1460.150024,1440.670044,1460.930054,1428.589966,1433.189941,1411.939941,1414.199951,1379.849976,1359.880005,1409.150024,1416.180054,1418.069946,1413.579956,1430.150024,1402.430054,1466.469971\n1842.369995,1838.699951,1790.290039,1782.589966,1797.02002,1838.630005,1836.25,1859.449951,1878.040039,1841.130005,1866.52002,1857.619995,1865.089966,1815.689941,1864.849976,1863.400024,1881.140015,1878.47998,1877.859985,1900.530029,1923.569946,1949.439941,1936.160034,1962.869995,1960.959961,1985.439941,1967.569946,1978.219971,1978.339966,1925.150024,1931.589966,1955.060059,1988.400024,2003.369995,2007.709961,1985.540039,2010.400024,1982.849976,1967.900024,1906.130005,1886.76001,1964.579956,2018.050049,2031.920044,2039.819946,2063.5,2067.560059,2075.370117,2002.329956,2070.649902,2088.77002,2058.199951\n1922.030029,1880.329956,1906.900024,1940.23999,1880.050049,1864.780029,1917.780029,1948.050049,1999.98999,2022.189941,2049.580078,2035.939941,2072.780029,2047.599976,2080.72998,2091.580078,2065.300049,2057.139893,2046.609985,2052.320068,2099.060059,2099.129883,2096.070068,2071.219971,2037.410034,2102.949951,2129.899902,2161.73999,2175.030029,2173.600098,2182.870117,2184.050049,2183.870117,2169.040039,2179.97998,2127.810059,2139.159912,2164.689941,2168.27002,2153.73999,2132.97998,2141.159912,2126.409912,2085.179932,2164.449951,2181.899902,2213.350098,2191.949951,2259.530029,2258.070068,2263.790039,2238.830078\n2743.149902,2786.23999,2810.300049,2872.870117,2762.129883,2619.550049,2732.219971,2747.300049,2691.25,2786.570068,2752.01001,2588.26001,2640.870117,2604.469971,2656.300049,2670.139893,2669.909912,2663.419922,2727.719971,2712.969971,2721.330078,2734.620117,2779.030029,2779.659912,2754.879883,2718.370117,2759.820068,2801.310059,2801.830078,2818.820068,2840.350098,2833.280029,2850.129883,2874.689941,2901.52002,2871.679932,2904.97998,2929.669922,2913.97998,2885.570068,2767.129883,2767.780029,2658.689941,2723.060059,2781.01001,2736.27002,2632.560059,2760.169922,2633.080078,2599.949951,2416.620117,2485.73999,2506.850098`,\n      effectType: 'etch',\n      etchWidth: 0.030,\n      forceClose: false,\n      isDramatic: false,\n      isSingleton: true,\n      lineType: 'radial',\n      pageWidth: 12,\n      pageHeight: 12,\n      showSurround: false,\n      throughHoleExists: false,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Customer value over time (C2FO) - 2014 to 2018',\n    description: 'Daily value (accepted invoice amount) provided to C2FO suppliers per day, grouped by financial quarter.',\n    images: ['examples/c2fo-accepted-invoice-amount/1.jpg', 'examples/c2fo-accepted-invoice-amount/2.jpg', 'examples/c2fo-accepted-invoice-amount/3.jpg', 'examples/c2fo-accepted-invoice-amount/4.jpg', 'examples/c2fo-accepted-invoice-amount/5.jpg', 'examples/c2fo-accepted-invoice-amount/6.jpg'],\n    settings: {\n      cellSize: 3,\n      curveOffsetX: 0,\n      curveOffsetY: 0.25,\n      curveRotation: 0,\n      curveScaleX: 0.40,\n      curveScaleY: 0.68,\n      curveType: 'curveLinear',\n      datum: `0,3182921.963707,1741552.4815,4817556.077904,3966220.776965,7474535.657035,4977016.348529,10004560.802315,2657178.5328,19548080.414169,5867292.15779,5562732.197815,9252.600145,13748623.15,7155723.41,5290350.91468,3573381.194,15066707.446392,4911451.197572,9303451.8498,13727156.976344,6111026.898076,13717213.094427,9564968.499876,11956227.46981,9914051.704121,6697745.510864,13377227.959542,10153366.317459,4837050.367483,10349033.641741,8517318.174646,11888070.846633,7726556.20668,14972153.13718,8997864.60845,9056028.061528,21229163.281186,10184716.983667,6011933.349821,11991524.343773,5592064.486334,9371246.775689,18656867.595031,9224046.601171,11377741.920928,10251114.075296,16302220.360086,9303279.559056,7661703.784305,14583511.687952,6885921.84111,18888814.049442,24526741.603558,26800423.74364,13267479.75664,13779944.201325,23346550.4203,18048947.622388,22441648.881704,22438260.303964,7675943.938103,14564091.11208,8286022.11028\n13084575.259074,12183896.627776,11684128.6139,11058913.860843,4888607.760386,5548433.68,13917424.557512,8602693.286003,13000251.44011,8274555.729793,8799802.92353,14952583.479036,11189095.084748,11071656.24588,14043727.226914,5080162.3777,22095817.92001,14957299.931356,9611510.34528,16044878.111987,8493083.844284,15764743.785041,11266760.204894,14219904.394758,15813622.225808,15826205.952728,21743867.210799,12298694.986145,16090571.561092,12439186.61664,11292930.564462,16739409.771448,8058535.686324,22985851.030446,14582992.754968,21300852.544492,18665054.693531,11579796.708312,8376.77148,22195382.920758,21669631.940518,13032427.380736,15734337.562876,10491089.440272,11878753.71434,6520825.265986,16611346.35541,9017407.695208,30066779.560494,15591996.25928,14036564.6061,19945686.27008,19172269.251232,24555695.928165,32181927.736417,41139257.320688,24082203.085876,36784969.016126,36854737.220465,47531466.279464,27593311.966538,28838150.417255,23102221.259748,25938572.411558,13993148.671632\n12934153.841364,17034658.053996,7907902.589959,9335830.839147,11384772.38724,19511885.54878,18070753.00503,17354300.266308,18858808.27707,11315596.018295,21455200.456498,17446365.326987,10574666.112788,11255893.161613,29859023.714936,18086529.955989,19220714.829004,14131854.70003,14162782.285701,23353591.801903,24126566.217119,19095351.61488,12009971.01572,14164543.177664,10063525.599768,12007686.828258,13038345.828757,27182823.338807,11918093.193402,22176622.857147,24504478.0049,18623932.06087,13346919.659957,19419465.926535,18379236.358013,14449924.876091,26393553.889275,12310833.14514,21854351.378341,16159840.702995,30693277.809003,20707324.530923,7886585.614285,17693409.390451,10895249.92009,25651405.61637,27211597.086963,13819230.562766,69049.726632,22439262.118842,31602292.488503,19304541.908752,28861369.109839,36879024.74719,26090195.03724,35898389.98452,28395470.847228,21767815.847854,39155927.771324,57128402.302165,46185671.748998,24132836.251422,16224560.53239,27465271.839534,16229767.041307,24013240.761408\n28320224.849479,18680539.60132,27988071.768752,16857902.907673,26240288.114652,33758940.03125,12259398.572093,21727725.402174,21789862.535108,37888470.949738,28643210.332536,13730727.667798,26834792.930712,63641649.986713,27679969.33854,34604717.225329,25403392.594679,54714828.907796,25734048.77773,38590280.810017,35199941.871815,16818814.668976,24721289.762173,17553390.856056,21323485.148528,24484471.115944,13129212.28013,23450907.993616,43332822.47603,16803650.43294,27082618.844911,16558756.361637,35271968.20994,50858139.758328,47624768.688893,42019358.859609,28450708.64682,61672659.071488,37405523.060808,27775872.764176,32550.97437,23728307.571091,16492548.375277,40866834.744252,19054430.663073,31958405.555878,43061377.188496,51966992.142968,33273738.594092,40343979.337599,47059108.051154,27354562.19102,42390433.676428,56114358.330743,55613782.115497,64036955.628224,30453710.255024,71824800.377902,98240940.140934,68260919.663824,40298637.000708,0,37349421.177528,67160763.32696,27522175.677768,10649562.34359\n0,30599344.079277,13034569.255539,13391500.685262,16360442.760479,9576724.379286,21221916.467808,17246859.418636,15376291.087104,19292167.568164,13587276.324062,23598071.977102,12890268.137271,24894273.783581,25214776.128021,22443164.237342,42581914.900776,39466124.739409,28323660.901975,26104314.409332,10562843.50121,23117143.306105,20878308.240036,12093336.193711,20491831.028983,10898045.233805,27696182.374624,26711378.246976,21982502.36257,16485342.631902,11772570.684873,18483950.99633,14445562.849487,16410586.946014,23536965.239,19134944.12796,22653117.481495,34401869.98259,51073270.409871,25898168.44339,14850258.702314,25425275.986484,22901451.081037,17052278.666064,28589557.092777,8772142.4924,25775829.49131,26158394.862441,18383960.16939,33407240.343888,29295800.547178,39803133.513204,26088161.521808,55368340.577754,40198107.634765,16050387.431784,56063481.368099,51326971.28665,44396338.346134,29366398.308574,15192074.897436,54659931.583789,26293639.40216,39023190.807882,12278975.649686\n13024292.89511,17724882.949182,26512602.390342,19341202.099888,27430971.774435,11846108.660763,17183576.137205,15991331.545182,28698609.69504,24300774.437404,12146013.830579,35274612.281715,14543636.7551,22912717.96214,29530431.812384,23736989.351004,36728868.340703,72382139.269552,81868113.70497,20929766.25934,10649490.850106,19434318.248725,24038424.021094,25389748.049007,25556274.956793,11054206.31298,20736020.002708,25326408.459932,27708797.33816,18902553.780304,14732708.910488,24374516.400865,29277822.035759,25037653.091266,19172648.054986,15712818.152805,24896089.885296,21133337.028906,48197852.524041,23121198.486094,9991105.819493,33600261.940337,21555942.674718,21517692.8169,11539411.385607,52431244.994386,22388965.272786,24972474.83861,25608675.705787,14703982.711473,23916615.72585,25404788.817921,27928217.644448,40745887.858225,19369477.222252,29689843.405708,74118007.855448,44004328.354843,25198370.198215,15156330.235892,47431857.695945,42407281.19262,20156567.084447,11477964.007434\n13953355.065872,74967.19128,22328183.208056,24423668.721798,22432915.491726,9091971.0956779,24949728.28505058,31312606.39332933,18404385.107021,22336417.13018052,11563234.17239922,26229539.30726235,18677005.3405378,21480389.70851029,19601290.98964394,19799201.46755301,27486383.65566,33923983.75606581,39519140.34718576,25327557.53278066,16842071.1858215,8903212.98553498,30466237.10135684,19803597.93910176,20019408.40360801,11168615.72546572,22659281.1098795,21626226.59852586,15797291.9283904,20032496.82666071,21789685.6659086,32382334.82427314,21216355.92038111,38133952.4155864,9781196.84041202,6395185.08508016,18325014.7380212,12417912.8349472,11676282.36991055,6045165.6248787,8114656.33510884,14786372.02911202,20274118.9875225,9010108.35183157,7517642.71812136,9725750.60408012,49875.9499608,18204971.72515614,15183642.84459905,14927900.09355602,11037173.53600245,102632110.47685684,33910944.03364794,41185912.00524352,40483776.21330073,21672658.70812294,28140532.69393088,35233661.13288209,44491317.24671345,43196885.7097933,30572418.59489168,81343632.84849978,68919206.45415908,46222286.7809434,30597310.8710563,15920920.39532796\n19856159.70060394,35544205.54239415,26292917.81024272,18601614.73668168,24816676.43358627,21508042.97013645,21136710.80040662,24874630.63195938,22427959.67169047,25353227.0377896,29931601.53160324,27747103.22508956,37284704.89807236,26575627.70376721,24259173.83985738,34845599.67574373,50942925.38863772,40118114.58606666,23753270.26018444,16116423.08585377,25052429.10218651,31623203.49323046,29620997.1852209,27380047.74817551,19500982.43326857,24343431.87483414,27565708.28992582,27523411.02013226,35519022.4123689,18845821.25841272,31222710.97304972,39912564.74873995,39998487.29203919,39232325.09399354,22653898.01370348,60731060.94757811,40745159.30089889,29614058.98296129,865884.20153998,25508667.87360084,32413381.3815661,49043555.60018546,32478218.83054107,45381162.21039323,19070968.34850426,42159213.0898961,29271423.37287124,49320205.7533721,49803034.19950013,20159508.32809461,60809868.72288156,46107856.21711773,63282311.47091752,72704435.07450292,28237675.34456993,81169295.43420444,49155537.79130994,91300515.53896402,61125001.54915385,68637915.01800888,24304591.20803683,22220870.54066203,75729925.44792925,34738691.63839163,17033922.38927827\n9008.5743488,32232311.89737897,25650091.37668694,21524613.02360362,15936039.74653194,28328841.0980026,34721777.93623363,35030881.06854767,26577802.29280813,13076772.24643433,21907747.96675424,23526494.41387935,34156040.50771788,59770930.92681636,27654703.24198421,35583699.5950615,32913506.35538594,30982105.42647262,31257828.06860622,14991576.18334568,22385222.65187339,26597221.54243519,24165100.3123127,28656222.71942324,16216917.42165307,20214722.27141645,24692281.92075737,32077932.85091282,25719984.52940386,16261800.72812856,23869661.41141118,27081547.72954343,36490124.43464493,29301571.26008247,17674003.11464841,30577488.72036858,33090403.64937614,29190728.05082501,34938333.45079246,21934035.37216946,31191245.6483869,30551136.7211249,22402591.91862153,44121768.06631611,15719341.02533544,26935939.85893677,31162288.6540637,30250157.01708547,31753726.20413664,25137605.63683668,38610627.06137203,46398823.23958596,57370364.98831857,40124158.26551592,23280139.03318826,59081050.03495596,59830907.8324499,47187778.3492239,91769610.66566043,45613728.7642362,55438182.9281954,55555047.98893136,57948469.58151386,27581406.27918171,21762078.4879977\n119753.52982495,28278196.9936386,30197410.6779036,25700400.60832377,28220570.32191282,21395352.88141486,33615076.16932961,34804427.26746786,34973813.67657646,24511655.37081381,19528045.39134323,21838341.1366837,52287543.37194159,44243540.43562061,40063821.5443145,19501869.58770053,56212450.42086539,63588110.5148423,42723617.89909914,36094605.77389123,18230581.02780441,27775009.04587618,29855714.90473202,27011798.18308497,30781862.19713376,21515759.43156701,20638381.3316303,33724830.61017364,32416530.86655484,32952830.47525812,18800297.93157789,41103800.60458312,48229304.71508121,40968014.74852574,39110612.65567277,27809847.94401614,33231031.86050736,69104308.82333696,35102549.16641497,35793692.04455654,22372420.03300378,18524577.918313,32237195.00617938,37400726.59515149,,18939224.12877496,24975216.46605993,40791755.41282873,36108691.3522374,28891473.93884697,24787072.86659033,43561358.6918195,38040688.30703992,38475866.50720816,35469148.18829971,24118840.17019797,47791183.94532378,121135529.7892277,52603848.32892278,55980835.35253983,40279918.33007806,72610098.16609334,91969631.2530282,55661114.39045478,53186157.50905938,23262680.49692702\n38889822.82023985,13944084.36810594,33953057.83603836,27865612.55174688,22305025.80365052,33078179.05852543,35425286.13550746,48565857.7435526,30302169.20151306,22233088.32520934,39847878.8537773,42094736.54339098,51941462.99851283,43638049.41891405,24819434.05073875,75489635.51241892,50157070.85411125,52916587.3527871,33668122.57420117,19098853.57156392,32543328.93444175,26751224.15849583,30737960.02013384,31704851.93712678,19868947.63068251,29129881.6313887,30568553.73015935,28575406.74445879,31596397.43783092,22084006.93955826,24949024.21586151,36270955.55309465,30159083.67957296,25529236.72875218,29893129.06079371,48518389.86221355,54832159.95260073,41870608.93591808,37500789.63210371,19817998.88485963,32289175.25989605,31457453.79912251,34603557.20151757,28283636.28949701,31864961.28719937,23180252.030844,16357130.72300002,35539702.59553936,25940542.91448555,24711618.24379547,58352833.90450645,41253427.29676794,52381421.86904117,47723905.29690153,43896169.2916739,42841685.15164125,52204073.95891449,80470465.26359896,52498052.38153927,58500680.66813876,113963677.57442782,122546139.96435854,69865635.27037137,33923688.55672547,25518238.85021607\n30503242.3910918,42032793.43433609,41662164.9188145,28842288.23663895,21763240.00414158,35171124.77359116,38834780.28546037,41962661.70146658,33431172.66817472,28777729.82169837,33699659.28159455,40974303.46372357,64663100.54766111,46517698.20182298,23411455.22009064,20340.56740236,44514081.25168817,81289780.51967211,76073291.42759189,47326753.47675211,24716318.39335822,9818.54065809,37980401.45712274,65530083.57712502,35181903.47446951,38575127.96388017,25990586.22784739,42521611.50607909,36540527.83904129,30480640.7924935,45491661.27640826,28559145.06153722,54801166.05984217,37035714.85285122,58421777.74489067,46029710.07562666,27018745.10416745,48839964.08193723,69492340.46087381,34167120.37123303,20607334.71003603,9953641.26284463,38626780.11462687,63465529.02934036,91921936.53677779,58192184.08218339,33368286.83335214,57087541.77185211,52692434.61579537,53424182.94340477,39269148.08993578,29055260.56334575,64884753.04821091,64430003.48857481,81317098.04317208,53570663.83569388,42717312.2504892,176406570.40362927,87791651.33494304,114692336.11199748,103608477.69025378,144107710.59995468,55066803.08150489,79046877.32619115,165716121.08609299,39287089.24082189,36867797.96850997\n15628784.18981154,24349143.35173366,36935691.55934007,34341543.80387314,21787621.83606592,65486.45466295,33678052.29254437,33921349.03115113,47599399.34554569,33179594.56448224,20368137.02398821,13165.97966656,26899095.86847141,28060004.33129439,34832291.46927598,34789619.46319784,25346861.4376606,81523.22853004,36065897.89477075,48049071.3206866,46691326.5943146,29123989.28149839,21588918.38496687,54296538.50964706,32003576.92487488,38977965.08838618,36221105.80771135,20779023.26057472,32296005.78537613,37289180.02941928,37015192.73209517,29510521.85925711,20359301.66458299,27409266.93792277,40417887.1547479,33998517.31246024,29137575.71535755,17594069.47851034,40523477.72712078,38597876.72440036,65982599.35880422,50351705.93848809,21662879.32975807,45330042.18630926,53969561.79843624,46688148.28950248,37574556.68639373,34431545.79188322,21198108.68527625,46006968.27509888,49587192.99174414,25144453.81712872,17239256.79651394,40039067.45341717,64029983.73684655,64889189.35650123,26023840.13295058,32731710.59214719,65992239.62514175,102186534.6339968,73163547.40521963,53911216.75343623,39857545.70990488,79911772.0736838,219868738.67757043,552069.07606732,121591676.4286049,28992908.68791575\n27538145.58885271,46591228.74123302,49447894.04189352,33780853.36897074,20272094.58981713,28007.44287346,31372780.64250756,23513444.57904348,40734163.16947148,42046219.13310656,23695281.27516863,32900568.98157721,57323282.46832054,49740028.30647988,28695364.11429965,25793906.74243546,48119220.13362139,76105269.64147361,56897786.4829767,43859080.30906185,34139162.8910064,38080883.63682967,38394158.7757968,44838258.61931079,31349990.13374425,25422302.17952128,37369447.09103826,31913657.48468162,46437513.85757711,42815496.64352133,28827272.89578923,35230715.2914866,39661275.87354353,66145369.91066567,41876091.6500177,35322275.02925152,41256503.15099322,76807244.95489845,55797778.26606993,61032822.57691702,36080428.72287887,29011039.29749142,30822567.33724938,47796071.30934056,41415365.42584352,24614049.15221886,51841823.87499973,51196610.32853915,50258991.90133188,36613314.0484632,33838690.33949613,30861781.21035057,36759727.57791928,47887307.30259707,57161037.40329371,51602811.81272525,47843577.4076414,59787262.52064996,137361810.67508877,55391629.82809058,91682308.93182576,131630354.57733788,103134199.53438951,186286503.1550336,41174982.03571144,30141681.99303126\n48276205.70281575,40071415.36610148,33526999.34851782,14345313.56406261,23231258.34246,40990705.85244395,46751150.91239533,55371706.50605556,34260573.34460165,27184735.01674709,46081360.28093798,42040273.56980222,41159231.90746211,48973836.05525399,28480105.96725744,56700546.68800452,64238219.26050898,81783461.46666977,46185671.8404506,29037852.26506271,42310005.74445619,34253751.24935192,54201579.49250649,41418399.80704229,30240465.06403328,34918847.32384906,44282825.88684358,49411996.92062656,42778166.2554007,28460054.11116622,44213188.32958029,37293535.97510896,39365797.69640914,38325134.56978121,28567796.71067503,56501573.26835928,44513555.30416855,25770570.84926819,22082370.31527154,30437283.43101438,177257958.42150959,80419589.45740095,37646967.26119191,49412891.71431608,36811818.71265482,34479820.90147748,20632228.56297349,70563348.85979468,42445542.47047066,33651504.69803086,76207523.19562092,68014229.46355883,177082991.00353416,69661949.42948744,31251608.28954064,61446398.55330646,92871816.12841862,65840740.68291775,89159920.5625249,75605639.3497027,107413302.26415979,122471928.59985679,211133113.44829275,46091270.9938394,33517185.04329253\n52620513.75087606,39592682.65652347,49848100.17647435,50491727.77390766,39686338.40654407,35756800.14672284,56011065.83262549,59346435.54099631,62033888.04628822,27968565.17583587,43699891.28966866,44785997.84801349,43806129.82217479,56637315.54815941,41008409.14921959,68498930.16988822,86485044.5397684,69782750.22284046,63363811.91692562,35845182.65537745,42056238.01139049,44069415.96402761,65231623.15826193,45794085.30989243,40235121.51903829,46889225.81966347,45838500.31998303,83987582.16487526,39180433.85011755,28901227.95587996,43922063.1030713,50723392.38466624,51639465.26084507,53792137.96405123,41470049.31146483,76850355.8968016,49203288.66504572,50555122.0886639,43314128.43922005,15788986.82328538,60783252.83623454,74211654.07758584,77920923.66467083,51227333.3277362,39203170.83502011,48428991.82569963,52221029.68364132,56833096.35558342,58007133.61236869,99494443.55303791,63236471.26325039,77365580.066818,125658295.154109,112171325.64773079,56915700.06882264,112833659.28624257,150703825.18168718,123948020.98058585,242695240.27607346,90928233.25469683,286605517.27711215,41059232.11385266,108642097.97424037,141943752.68371325,47296483.10599913`,\n      effectType: 'etch',\n      etchWidth: 0.020,\n      forceClose: false,\n      isDramatic: false,\n      isSingleton: false,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 4,\n      showSurround: true,\n      throughHoleExists: true,\n      throughHoleRadius: 0.25,\n      throughHoleX: 1.5,\n      throughHoleY: 0.5,\n      units: 'in',\n    },\n  },\n  {\n    title: 'Kansas City Royals (Stolen Bases) - 1969 to 2016',\n    description: 'Number of stolen bases for the Kansas Royals, grouped by year',\n    images: ['examples/royals-steals/1.jpg', 'examples/royals-steals/2.jpg', 'examples/royals-steals/3.jpg', 'examples/royals-steals/4.jpg', 'examples/royals-steals/5.jpg'],\n    settings: {\n      cellSize: 4,\n      curveOffsetX: 0,\n      curveOffsetY: 0,\n      curveRotation: 0,\n      curveScaleX: 1.00,\n      curveScaleY: 0.00,\n      datum: `0.7914\n0.5988\n0.8075\n0.5519\n0.6481\n0.9012\n0.9568\n1.3457\n1.0494\n1.3333\n1.2778\n1.142\n0.9709\n0.821\n1.1166\n0.6543\n0.7901\n0.5988\n0.7716\n0.8509\n0.9506\n0.6646\n0.7346\n0.8086\n0.6173\n1.2174\n0.8333\n1.2112\n0.8075\n0.8385\n0.7888\n0.7469\n0.6173\n0.8642\n0.7407\n0.4136\n0.3272\n0.4012\n0.4815\n0.4877\n0.5432\n0.7099\n0.9444\n0.8148\n0.9444\n0.9444\n0.642\n0.7469`,\n      effectType: 'cut',\n      forceClose: false,\n      isDramatic: false,\n      isSingleton: false,\n      lineType: 'radial',\n      pageWidth: 16,\n      pageHeight: 12,\n      shapeSideCount: 2,\n      showSurround: false,\n      throughHoleExists: true,\n      throughHoleRadius: 0.25,\n      throughHoleX: 2,\n      throughHoleY: 2,\n      units: 'in',\n    },\n  },\n];\n","import React, { Component } from 'react';\nimport { Popover } from 'antd';\n\nclass Example extends Component {\n  state = {\n    imageIndex: 0,\n  }\n\n  nextImage = () => {\n    const { images } = this.props;\n    const { imageIndex } = this.state;\n    let nextIndex = imageIndex + 1;\n\n    if (nextIndex > images.length - 1) {\n      nextIndex = 0;\n    }\n\n    this.setState({ imageIndex: nextIndex });\n  }\n\n  render() {\n    const { imageIndex } = this.state;\n    const { title, description, images } = this.props;\n\n    return (\n      <Popover\n        content={description}\n        title={title}\n        overlayClassName=\"example-popover\"\n        overlayStyle={{\n          maxWidth: '22%',\n          arrowPointAtCenter: true,\n        }}\n      >\n        <div\n          tabIndex=\"0\"\n          role=\"button\"\n          onKeyPress={this.nextImage}\n          onClick={this.nextImage}\n          style={{\n            backgroundImage: `url(${images[imageIndex]})`,\n            backgroundSize: 'contain',\n            backgroundPosition: 'center',\n            cursor: 'pointer',\n            width: '25%',\n            paddingBottom: '25%',\n            float: 'left',\n            position: 'relative',\n            display: 'inline-block',\n            overflow: 'hidden',\n          }}\n        />\n      </Popover>\n    );\n  }\n}\n\nexport default Example;\n","import React from 'react';\nimport * as Styles from './Styles';\nimport ExampleData from './Examples.data';\nimport Example from './Example';\n\n\nfunction Examples(props) {\n  const { visible, onClose } = props;\n\n  const translateY = visible ? '-100%' : '0%';\n  const examples = ExampleData.map((d, i) => (\n    <Example\n      // eslint-disable-next-line react/no-array-index-key\n      key={i}\n      images={d.images}\n      title={d.title}\n      description={d.description}\n    />\n  ));\n\n  return (\n    <div style={{\n      backgroundColor: Styles.colors[8],\n      width: '100%',\n      height: '100%',\n      overflow: 'scroll',\n      position: 'absolute',\n      top: '100%',\n      transition: 'transform .3s ease-in-out',\n      transform: `translateY(${translateY})`,\n      zIndex: 3,\n    }}\n    >\n      <a\n        id=\"close-examples-button\"\n        href=\"#close-example\"\n        onClick={onClose}\n        style={{\n          cursor: 'pointer',\n          color: Styles.colors[0],\n          backgroundColor: Styles.colors[8],\n          position: 'absolute',\n          fontSize: 50,\n          right: 0,\n          top: 20,\n          zIndex: 1,\n          padding: '0px 20px',\n          borderRight: 'none',\n        }}\n      >\n        &times;\n      </a>\n      {examples}\n    </div>\n  );\n}\n\nexport default Examples;\n","import { notification } from 'antd';\nimport dayjs from 'dayjs';\n\nimport * as Styles from './Styles';\nimport { svgDownloadContainerId } from './util';\n\nfunction downloadSvgDocument() {\n  const documentContainer = document.getElementById(svgDownloadContainerId);\n  const svgDocument = documentContainer.innerHTML;\n  const file = `data:application/octet-stream;base64,${window.btoa(svgDocument)}`;\n\n  const timestamp = dayjs().format('YYYY-MM-DDTHH:mm');\n\n  notification.warning({\n    message: 'Warning',\n    description: 'DataForms outputs cut files as SVG. Before sending to laser cutter, change the document settings to standard or metric units with 72 DPI. If the document is setup properly, the document dimensions in the vector graphics editor will match the dimensions listed on the page tab from DataForms. Cut line strokes will be set to 0.001 inches if using standard units, etch lines set to the specified etch width in DataForms.',\n    duration: 0,\n    style: {\n      backgroundColor: Styles.colors[10],\n    },\n  });\n\n  const aLink = document.createElement('a');\n  aLink.download = `DataForms ${timestamp}.svg`;\n  aLink.href = file;\n  aLink.dispatchEvent(new window.MouseEvent('click'));\n}\n\nexport default downloadSvgDocument;\n","import React, { Component } from 'react';\nimport {\n  Col, Modal, Row, Button,\n} from 'antd';\n\nimport ContactForm from './Contact.form';\nimport Examples from './Examples';\nimport * as Styles from './Styles';\nimport downloadSvgDocument from './Download';\n\n\nclass Footer extends Component {\n  state = {\n    contactModalVisible: false,\n    examplesVisible: false,\n  }\n\n  showContactModal = (e) => {\n    e.preventDefault();\n    this.setState({ contactModalVisible: true });\n  }\n\n  showExamples = (e) => {\n    e.preventDefault();\n    this.setState({ examplesVisible: true });\n  }\n\n  closeContactModal = () => {\n    this.setState({ contactModalVisible: false });\n  }\n\n  closeExamples = () => {\n    this.setState({ examplesVisible: false });\n  }\n\n  render() {\n    const { contactModalVisible, examplesVisible } = this.state;\n    return (\n      <React.Fragment>\n        <Row style={{\n          height: Styles.footerHeight,\n          borderTop: `1px solid ${Styles.colors[5]}`,\n          position: 'absolute',\n          bottom: 0,\n          width: '100%',\n        }}\n        >\n          <Col\n            span={23}\n            offset={1}\n            style={{\n              marginRight: 20, marginTop: 10, padding: '15px 0 30px',\n            }}\n          >\n            <Button\n              type=\"default\"\n              onClick={downloadSvgDocument}\n              style={{\n                backgroundColor: Styles.colors[10],\n                marginRight: '20px',\n                float: 'right',\n              }}\n            >\n                Download SVG\n            </Button>\n            <a\n              style={{ padding: 20 }}\n              href=\"#contact-modal\"\n              onClick={this.showContactModal}\n            >\n              Contact\n            </a>\n            <span> | </span>\n            <a\n              style={{ padding: 20 }}\n              href=\"https://github.com/joelongstreet/data-forms\"\n              target=\"blank\"\n            >\n              Github\n            </a>\n            <span> | </span>\n            <a\n              style={{ padding: 20 }}\n              href=\"#show-examples\"\n              onClick={this.showExamples}\n            >\n              Examples\n            </a>\n          </Col>\n        </Row>\n        <Modal\n          onCancel={this.closeContactModal}\n          visible={contactModalVisible}\n          footer={[]}\n          wrapClassName=\"ant-modal-wrap-contact\"\n        >\n          <ContactForm onSubmit={this.closeContactModal} />\n        </Modal>\n        <Examples\n          onClose={this.closeExamples}\n          visible={examplesVisible}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nconst SettingsContext = React.createContext();\n\nexport default SettingsContext;\n","import React from 'react';\nimport * as Styles from './Styles';\n\nimport SettingsContext from './Settings.context';\n\n\nfunction Legend() {\n  function setEffectType(context, effectType) {\n    context.setEffectType(effectType);\n  }\n\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <div\n          style={{\n            cursor: 'pointer',\n            padding: 10,\n            paddingRight: 20,\n            left: 0,\n            border: `1px solid ${Styles.colors[5]}`,\n            borderLeft: 'none',\n            position: 'absolute',\n            zIndex: 2,\n            top: Styles.headerHeight + 30,\n          }}\n        >\n          <div\n            role=\"button\"\n            tabIndex=\"0\"\n            onKeyPress={() => setEffectType(context, 'cut')}\n            onClick={() => setEffectType(context, 'cut')}\n          >\n            <div style={Styles.getLegendLineStyle(2)} />\n            Cut\n          </div>\n          <div\n            role=\"button\"\n            tabIndex=\"0\"\n            onKeyPress={() => setEffectType(context, 'etch')}\n            onClick={() => setEffectType(context, 'etch')}\n          >\n            <div style={Styles.getLegendLineStyle(3)} />\n            Etch\n          </div>\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default Legend;\n","import React from 'react';\nimport { times } from 'lodash';\n\nimport * as Styles from './Styles';\nimport { convertUnitsToPixels } from './util';\n\nconst scaleFactor = 10;\n\nfunction PagePreview(props) {\n  const {\n    cellSize,\n    datum,\n    isSingleton,\n    pageHeight,\n    pageWidth,\n    units,\n  } = props;\n\n  const dataRowCount = isSingleton ? 1 : datum.split('\\n').length;\n  const s = convertUnitsToPixels(cellSize, units) / scaleFactor;\n  const w = convertUnitsToPixels(pageWidth, units) / scaleFactor;\n  const h = convertUnitsToPixels(pageHeight, units) / scaleFactor;\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        bottom: 20,\n        right: 20,\n        border: `1px solid ${Styles.colors[1]}`,\n        width: w,\n        height: h,\n      }}\n    >\n      {times(dataRowCount, i => (\n        <div\n          key={i}\n          style={{\n            width: s - 1,\n            height: s - 1,\n            border: `1px solid ${Styles.colors[6]}`,\n            boxSizing: 'border-box',\n            float: 'left',\n            margin: '1px 0 0 1px',\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default PagePreview;\n","import * as d3 from 'd3';\n\nimport * as Styles from './Styles';\nimport {\n  convertDegreesToRadians,\n  getCoordsFromRadiansAndRadius,\n} from './util';\n\n\n// surrounding polygons can \"look\" off center.\n// rotate each polygon a certain number of degrees\n// dependent on the number of sides\nconst rotationMap = {\n  3: -89, 4: 0, 5: -18, 6: 0, 7: 38.5, 8: 0,\n};\n\n// straight lines to connect the vertices of a polygon\nconst polygonSurroundLineFunction = d3\n  .line()\n  .x(d => d[0])\n  .y(d => d[1])\n  .curve(d3.curveLinearClosed);\n\n// return a [[x, y], [x,y]...] list of points to create the\n// vertices of a surrounding polygon\nfunction getVerticesForSurroundingPolygon(shapeSideCount, radius) {\n  const vertices = [...Array(shapeSideCount)].map((x, i) => {\n    const angle = (360 / shapeSideCount) * i;\n    const radian = convertDegreesToRadians(angle);\n\n    return getCoordsFromRadiansAndRadius(radian, radius);\n  });\n\n  vertices.push(vertices[0]);\n  return vertices;\n}\n\n\nfunction Tile(props) {\n  const {\n    cellSize,\n    curveOffsetX,\n    curveOffsetY,\n    curveRotation,\n    curveScaleX,\n    curveScaleY,\n    curveType,\n    data,\n    effectType,\n    etchWidth,\n    group,\n    isPreview,\n    lineType,\n    forceClose,\n    shapeSideCount,\n    showSurround,\n    throughHoleExists,\n    throughHoleRadius,\n    throughHoleX,\n    throughHoleY,\n    xOffset,\n    yDomain,\n    yOffset,\n  } = props;\n\n  const etchColor = isPreview ? Styles.colors[3] : 'black';\n  const cutColor = isPreview ? Styles.colors[2] : 'black';\n  const cutPathWidth = isPreview ? 1 : 0.1;\n\n  // create a multidimensional array to give each item an x value (the indece)\n  const datum = data.map((d, i) => [i, d]);\n  if (forceClose) datum.push([data.length, data[0]]);\n\n  // scale x axis to the length of the data set\n  const xDomainMax = forceClose ? datum.length - 1 : datum.length;\n  const xDomain = [0, xDomainMax];\n\n  let xF;\n  let yF;\n  let lineF;\n\n  if (lineType === 'linear') {\n    xF = d3.scaleLinear()\n      .range([0, cellSize * curveScaleX])\n      .domain(xDomain);\n\n    yF = d3.scaleLinear()\n      .range([0, cellSize * curveScaleY])\n      .domain(yDomain);\n\n    lineF = d3.line()\n      .x(d => xF(d[0]))\n      .y(d => yF(d[1]));\n  } else if (lineType === 'radial') {\n    xF = d3.scaleTime()\n      .range([0, 2 * Math.PI])\n      .domain(xDomain);\n\n    yF = d3.scaleLinear().range([\n      (cellSize / (curveScaleY * 7)) * curveScaleX,\n      cellSize * curveScaleX,\n    ]).domain(yDomain);\n\n    lineF = d3.lineRadial()\n      .angle(d => xF(d[0]))\n      .radius(d => yF(d[1]));\n  }\n\n  lineF.curve(d3[curveType]);\n\n  // draw the group for this tile which contains all other shapes\n  group.attr(\n    'transform',\n    `translate(${xOffset}, ${yOffset})`,\n  );\n\n  // optionally draw a surrounding polygon\n  if (showSurround) {\n    const rotation = rotationMap[shapeSideCount] || 0;\n    const vertices = getVerticesForSurroundingPolygon(shapeSideCount, cellSize / 2);\n\n    if (shapeSideCount === 2) {\n      group.append('circle')\n        .attr('fill', 'none')\n        .attr('stroke', cutColor)\n        .attr('r', cellSize / 2)\n        .attr('cx', cellSize / 2)\n        .attr('cy', cellSize / 2)\n        .attr('stroke-width', cutPathWidth);\n    } else {\n      group\n        .append('path')\n        .datum(vertices)\n        .attr('fill', 'none')\n        .attr('stroke', cutColor)\n        .attr('stroke-width', cutPathWidth)\n        .attr('transform', `rotate(${rotation}, ${cellSize / 2}, ${cellSize / 2})`)\n        .attr('d', polygonSurroundLineFunction);\n    }\n  }\n\n  const translate = lineType === 'radial' ? [cellSize / 2, cellSize / 2] : [0, 0];\n  translate[0] += curveOffsetX;\n  translate[1] += curveOffsetY;\n\n  const curvePathWidth = effectType === 'etch' ? etchWidth : cutPathWidth;\n  const curveColor = effectType === 'etch' ? etchColor : cutColor;\n  const curveTranslationString = `${translate[0]}, ${translate[1]}`;\n  const curveRotationString = lineType === 'radial' ? curveRotation : `${curveRotation}, ${cellSize / 2}, ${cellSize / 2}`;\n\n  // draw the data curve\n  let curve;\n  if (data.length === 1 && lineType === 'radial') {\n    const ratio = cellSize / yDomain[1];\n    const radius = (data[0] * ratio) / 2;\n    curve = group.append('circle');\n    curve.attr('r', radius * curveScaleX);\n  } else {\n    curve = group.append('path');\n    curve.datum(datum).attr('d', lineF);\n  }\n  curve.attr(\n    'transform',\n    `translate(${curveTranslationString}) rotate(${curveRotationString})`,\n  )\n    .attr('fill', 'none')\n    .attr('stroke', curveColor)\n    .attr('stroke-width', curvePathWidth);\n\n  // draw the through hole\n  if (throughHoleExists) {\n    group.append('circle')\n      .attr('cx', throughHoleX)\n      .attr('cy', throughHoleY)\n      .attr('fill', 'none')\n      .attr('stroke', cutColor)\n      .attr('r', throughHoleRadius / 2) // why?\n      .attr('stroke-width', cutPathWidth);\n  }\n\n  return group;\n}\n\nexport default Tile;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport 'd3-selection-multi';\nimport { withFauxDOM } from 'react-faux-dom';\nimport { uniq } from 'lodash';\n\nimport {\n  convertUnitsToPixels,\n  svgDocumentMeta,\n  svgDownloadContainerId,\n} from './util';\nimport * as Styles from './Styles';\nimport Tile from './Tile';\n\n\nconst dontRenderOnUpdate = [\n  'animateFauxDOM',\n  'connectFauxDOM',\n  'document',\n  'documentPreview',\n  'drawFauxDOM',\n  'isAnimagiontFauxDOM',\n  'stopAnimatingFauxDOM',\n];\n\nclass Tiles extends Component {\n  constructor(props) {\n    super(props);\n    this.renderD3 = this.renderD3.bind(this);\n    this.svg = React.createRef();\n  }\n\n  componentDidMount() {\n    this.renderD3();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { props } = this;\n\n    // fauxDom attaches items to props\n    // manually check props for update so we can ignore\n    // any magically added fauxDom props, avoids infinite\n    // redraw loops\n    const render = Object.keys(props).some((key) => {\n      if (dontRenderOnUpdate.includes(key)) return false;\n      return props[key] !== prevProps[key];\n    });\n\n    if (render) this.renderD3();\n  }\n\n  renderD3() {\n    const { props } = this;\n\n    // setup the faux doms and draw the svgs if they don't already exist\n    const fauxDoc = props.connectFauxDOM('div', 'document');\n    const fauxDocPreview = props.connectFauxDOM('div', 'documentPreview');\n    let svg = d3.select(fauxDoc).select('svg');\n    let svgPreview = d3.select(fauxDocPreview).select('svg');\n    if (svg.empty()) svg = d3.select(fauxDoc).append('svg');\n    if (svgPreview.empty()) svgPreview = d3.select(fauxDocPreview).append('svg');\n\n    // create a static id so we can reference the inner html of this\n    // element for other parts of the application\n    d3.select(fauxDoc)\n      .attr('id', svgDownloadContainerId)\n      .attr('key', svgDownloadContainerId);\n    d3.select(fauxDocPreview).attr('style', { height: '100%' });\n\n    const {\n      curveRotation,\n      curveScaleX,\n      curveScaleY,\n      curveType,\n      datum,\n      effectType,\n      isDramatic,\n      isSingleton,\n      lineType,\n      forceClose,\n      shapeSideCount,\n      showSurround,\n      throughHoleExists,\n      units,\n    } = props;\n\n    // these props will be converted to pixel units\n    let {\n      cellSize,\n      curveOffsetX,\n      curveOffsetY,\n      etchWidth,\n      pageHeight,\n      pageWidth,\n      throughHoleRadius,\n      throughHoleX,\n      throughHoleY,\n    } = props;\n\n    cellSize = convertUnitsToPixels(cellSize, units);\n    curveOffsetX = convertUnitsToPixels(curveOffsetX, units);\n    curveOffsetY = convertUnitsToPixels(curveOffsetY, units);\n    etchWidth = convertUnitsToPixels(etchWidth, units);\n    pageHeight = convertUnitsToPixels(pageHeight, units);\n    pageWidth = convertUnitsToPixels(pageWidth, units);\n    throughHoleRadius = convertUnitsToPixels(throughHoleRadius, units);\n    throughHoleX = convertUnitsToPixels(throughHoleX, units);\n    throughHoleY = convertUnitsToPixels(throughHoleY, units);\n\n    // break the stringed datasets into rows and columns\n    const dataSets = datum\n      .split('\\n')\n      .map((ds) => {\n        let row = ds.split(',');\n        if (isDramatic) {\n          row = row.reduce((r, a) => r.concat(a, 0), []);\n        }\n        return row.map(d => Number(d));\n      });\n\n    // find the highest and lowest values for the data set\n    const yDomain = d3.extent(\n      uniq(\n        dataSets.flat(),\n      ),\n    );\n\n    // reverse the data domain when displaying linearly to\n    // make the data feel right side up\n    if (lineType === 'linear') yDomain.reverse();\n\n    // determine the total height of the svgPreview\n    let svgPreviewHeight = (\n      (cellSize * dataSets.length)\n      + (Styles.previewVerticalCellPadding * dataSets.length)\n    );\n    if (isSingleton) svgPreviewHeight = '100%';\n\n    svgPreview.attrs({\n      style: { display: 'block', margin: 'auto' },\n      width: cellSize,\n      height: svgPreviewHeight,\n    });\n\n    svg.attrs(\n      Object.assign({\n        width: '100%',\n        height: '100%',\n        viewBox: `0 0 ${pageWidth} ${pageHeight}`,\n      }, svgDocumentMeta),\n    );\n\n    // dump all the svg children whenever we redraw\n    svg.selectAll('*').remove();\n    svgPreview.selectAll('*').remove();\n\n    const tileOptions = {\n      cellSize,\n      curveOffsetX,\n      curveOffsetY,\n      curveRotation,\n      curveScaleX,\n      curveScaleY,\n      curveType,\n      effectType,\n      etchWidth,\n      lineType,\n      forceClose,\n      shapeSideCount,\n      showSurround,\n      throughHoleExists,\n      throughHoleRadius,\n      throughHoleX,\n      throughHoleY,\n      yDomain,\n    };\n\n    // Draw the preview tiles\n    dataSets.map((data, i) => {\n      const xOffset = 0;\n      let yOffset = i * cellSize + Styles.previewVerticalCellPadding * (i + 1);\n      if (isSingleton) yOffset = 0;\n\n      const group = svgPreview.append('g');\n      const opts = Object.assign({}, tileOptions, {\n        xOffset, yOffset, data, group, isPreview: true,\n      });\n      return new Tile(opts);\n    });\n\n    // Draw the hidden tile download document\n    const margin = 1;\n    const cellsPerRow = Math.floor(pageWidth / (cellSize + margin));\n    dataSets.map((data, i) => {\n      let yOffset = Math.floor(i / cellsPerRow) * (cellSize + margin);\n      let xOffset = (i % cellsPerRow) * (cellSize + margin);\n\n      if (isSingleton) {\n        xOffset = 0;\n        yOffset = 0;\n      }\n\n      const group = svg.append('g');\n      const opts = Object.assign({}, tileOptions, {\n        xOffset, yOffset, data, group, isPreview: false,\n      });\n      return new Tile(opts);\n    });\n\n    props.drawFauxDOM();\n  }\n\n  render() {\n    const { document, documentPreview } = this.props;\n    return (\n      <React.Fragment>\n        {document}\n        {documentPreview}\n      </React.Fragment>\n    );\n  }\n}\n\nconst FauxDom = withFauxDOM(Tiles);\n\nexport default FauxDom;\n","import React, { Component } from 'react';\nimport { ScrollToHOC } from 'react-scroll-to';\n\nimport * as Styles from './Styles';\nimport { convertUnitsToPixels } from './util';\nimport SettingsContext from './Settings.context';\nimport Tiles from './Tiles';\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollArea = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { props } = this;\n\n    if (props.textAreaHighlightIndex !== prevProps.textAreaHighlightIndex) {\n      const cellSize = convertUnitsToPixels(props.cellSize, props.units);\n      const cellWithPadding = cellSize + Styles.previewVerticalCellPadding;\n      const y = props.textAreaHighlightIndex * cellWithPadding - cellWithPadding;\n      props.scrollTo({\n        ref: this.scrollArea, y, smooth: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.scrollArea}\n        style={{\n          position: 'relative',\n          height: '100%',\n          overflow: 'scroll',\n        }}\n      >\n        <SettingsContext.Consumer>\n          {context => (\n            <Tiles\n              curveOffsetX={context.state.curveOffsetX}\n              curveOffsetY={context.state.curveOffsetY}\n              curveRotation={context.state.curveRotation}\n              curveScaleX={context.state.curveScaleX}\n              curveScaleY={context.state.curveScaleY}\n              curveType={context.state.curveType}\n              cellSize={context.state.cellSize}\n              datum={context.state.datum}\n              effectType={context.state.effectType}\n              etchWidth={context.state.etchWidth}\n              forceClose={context.state.forceClose}\n              isDramatic={context.state.isDramatic}\n              isSingleton={context.state.isSingleton}\n              lineType={context.state.lineType}\n              pageHeight={context.state.pageHeight}\n              pageWidth={context.state.pageWidth}\n              shapeSideCount={context.state.shapeSideCount}\n              showSurround={context.state.showSurround}\n              throughHoleExists={context.state.throughHoleExists}\n              throughHoleRadius={context.state.throughHoleRadius}\n              throughHoleX={context.state.throughHoleX}\n              throughHoleY={context.state.throughHoleY}\n              units={context.state.units}\n            />\n          )}\n        </SettingsContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport default ScrollToHOC(Preview);\n","import React from 'react';\n\nimport {\n  Row,\n  Col,\n  Slider,\n  InputNumber,\n} from 'antd';\n\nimport SettingsContext from './Settings.context';\n\nconst defaultSliderStepSize = 0.01;\nconst defaultInputPrevision = 2;\n\nfunction handleSelect(e) {\n  const { target } = e;\n  target.type = 'text';\n  target.setSelectionRange(0, target.value.length);\n  target.type = 'number';\n}\n\nfunction handleChange(val, stateSetter) {\n  if (!val) return;\n\n  const num = Number(val);\n  if (Number.isNaN(num)) return;\n\n  stateSetter(num);\n}\n\nfunction getInputPrecision(propsPrecision) {\n  if (propsPrecision === 0) return 0;\n  if (!propsPrecision) return defaultInputPrevision;\n  return propsPrecision;\n}\n\nfunction UnitSlider(props) {\n  const { inputPrecision } = props;\n  const precision = getInputPrecision(inputPrecision);\n\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <Row>\n          <Col span={4}>\n            <div style={{ marginTop: 7 }}>{props.label}</div>\n          </Col>\n          <Col span={13}>\n            <Slider\n              disabled={props.disabled}\n              value={props.value}\n              min={props.min}\n              max={props.max}\n              step={props.step || defaultSliderStepSize}\n              onChange={props.onChange}\n            />\n          </Col>\n          <Col span={6}>\n            <InputNumber\n              disabled={props.disabled}\n              style={{ float: 'right' }}\n              min={props.min}\n              max={props.max}\n              value={props.value}\n              precision={precision}\n              onChange={val => handleChange(val, props.onChange)}\n              onClick={handleSelect}\n              step={props.step || defaultSliderStepSize}\n            />\n          </Col>\n          <Col span={1}>\n            <span style={{ float: 'right', paddingTop: 8, fontSize: '85%' }}>\n              {props.hideUnits ? '' : context.state.units}\n            </span>\n          </Col>\n        </Row>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default UnitSlider;\n","import React from 'react';\nimport {\n  Checkbox,\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Select,\n  Tooltip,\n} from 'antd';\n\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\nimport * as Styles from './Styles';\n\nconst { Option } = Select;\n\n/* eslint-disable no-multi-spaces */\nconst curves = [\n  { functionName: 'curveBasis',             title: 'Basis'              },\n  { functionName: 'curveBasisClosed',       title: 'BasisClosed'        },\n  { functionName: 'curveCardinal',          title: 'Cardinal'           },\n  { functionName: 'curveCardinalClosed',    title: 'Cardinal Closed'    },\n  { functionName: 'curveCatmullRom',        title: 'Catmull-Rom'        },\n  { functionName: 'curveCatmullRomClosed',  title: 'Catmull-Rom Closed' },\n  { functionName: 'curveLinear',            title: 'Linear'             },\n  { functionName: 'curveLinearClosed',      title: 'Linear Closed'      },\n  { functionName: 'curveMonotoneX',         title: 'MonotoneX'          },\n  { functionName: 'curveMonotoneY',         title: 'MonotoneY'          },\n  { functionName: 'curveNatural',           title: 'Natural'            },\n  { functionName: 'curveStep',              title: 'Step'               },\n  { functionName: 'curveStepAfter',         title: 'Step After'         },\n  { functionName: 'curveStepBefore',        title: 'Step Before'        },\n];\n/* eslint-enable no-multi-spaces */\n\n/* eslint-disable react/no-array-index-key */\nconst curveOptions = curves.map((e, i) => <Option key={i} value={i}>{e.title}</Option>);\n/* eslint-enable react/no-array-index-key */\n\nfunction getDefaultCurve(curveType) {\n  return curves.findIndex(c => c.functionName === curveType);\n}\n\nfunction getCurrentCurve(curveType) {\n  const curve = curves.find(c => c.functionName === curveType);\n  return curve.title;\n}\n\nfunction getSurroundTooltipTitle(isSingleton) {\n  if (isSingleton) {\n    return 'Surround disabled in singleton mode. Uncheck \"Singleton\" in the data tab to enable surrounds';\n  }\n  return 'Toggle the surrounding cut shape';\n}\n\nfunction getThroughTooltipTitle(isSingleton) {\n  if (isSingleton) {\n    return 'Through disabled in singleton mode. Uncheck \"Singleton\" in the data tab to enable throughs';\n  }\n  return 'Toggle the through hole';\n}\n\nfunction handleCurveChange(val, context) {\n  const curve = curves[val];\n  context.setCurveType(curve.functionName);\n}\n\nfunction SettingsShape() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Tooltip title=\"Encapsulate the data in a shape\">\n            <Divider>Surround</Divider>\n          </Tooltip>\n          <Row>\n            <Col>\n              <Tooltip title={getSurroundTooltipTitle(context.state.isSingleton)}>\n                <Checkbox\n                  style={{ float: 'right', marginBottom: 10 }}\n                  disabled={context.state.isSingleton}\n                  checked={context.state.showSurround}\n                  onChange={e => context.setShowSurround(e.target.checked)}\n                >\n                  Show\n                </Checkbox>\n              </Tooltip>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Size\"\n            onChange={context.setCellSize}\n            value={context.state.cellSize}\n            min={context.state.cellSizeMin}\n            max={context.state.cellSizeMax}\n          />\n\n          <UnitSlider\n            label=\"Sides\"\n            disabled={!context.state.showSurround}\n            onChange={context.setShapeSideCount}\n            value={context.state.shapeSideCount}\n            inputPrecision={0}\n            min={2}\n            max={8}\n            step={1}\n            hideUnits\n          />\n\n          <Tooltip title=\"Add a cut hole. Used to tie components together or mount data on a string\">\n            <Divider style={Styles.divider}>Through</Divider>\n          </Tooltip>\n          <Row>\n            <Col>\n              <Tooltip title={getThroughTooltipTitle(context.state.isSingleton)}>\n                <Checkbox\n                  style={{ float: 'right', marginBottom: 10 }}\n                  disabled={context.state.isSingleton}\n                  checked={context.state.throughHoleExists}\n                  onChange={e => context.setThroughHoleExists(e.target.checked)}\n                >\n                  Show\n                </Checkbox>\n              </Tooltip>\n            </Col>\n          </Row>\n\n          <UnitSlider\n            label=\"Radius\"\n            onChange={context.setThroughHoleRadius}\n            value={context.state.throughHoleRadius}\n            min={0}\n            max={context.state.cellSize / 2}\n            disabled={!context.state.throughHoleExists}\n          />\n          <UnitSlider\n            label=\"X\"\n            onChange={context.setThroughHoleX}\n            value={context.state.throughHoleX}\n            min={0}\n            max={context.state.cellSize}\n            disabled={!context.state.throughHoleExists}\n          />\n          <UnitSlider\n            label=\"Y\"\n            onChange={context.setThroughHoleY}\n            value={context.state.throughHoleY}\n            min={0}\n            max={context.state.cellSize}\n            disabled={!context.state.throughHoleExists}\n          />\n          <Tooltip title=\"Control the shape of the data\">\n            <Divider style={Styles.divider}>Curve</Divider>\n          </Tooltip>\n          <Row style={{ marginBottom: 20 }}>\n            <Col span={12}>\n              <Radio.Group\n                value={context.state.lineType}\n                onChange={e => context.setLineType(e.target.value, true)}\n              >\n                <Tooltip title=\"Wrap the data around a circle\">\n                  <Radio.Button value=\"radial\">Radial</Radio.Button>\n                </Tooltip>\n                <Tooltip title=\"Draw the data linearly\">\n                  <Radio.Button value=\"linear\">Linear</Radio.Button>\n                </Tooltip>\n              </Radio.Group>\n            </Col>\n            <Col span={12}>\n              <Tooltip title=\"Force the path to close. Used for non closing curve types (Natural, Step, etc.)\">\n                <Checkbox\n                  style={{ float: 'right' }}\n                  checked={context.state.forceClose}\n                  disabled={context.state.lineType === 'linear'}\n                  onChange={e => context.setForceClose(e.target.checked)}\n                >\n                  Close Path\n                </Checkbox>\n              </Tooltip>\n            </Col>\n          </Row>\n          <Tooltip title=\"Curve type\">\n            <Select\n              defaultValue={getDefaultCurve(context.state.curveType)}\n              style={{ width: '100%', marginBottom: 15 }}\n              onChange={val => handleCurveChange(val, context)}\n              value={getCurrentCurve(context.state.curveType)}\n            >\n              {curveOptions}\n            </Select>\n          </Tooltip>\n\n          <UnitSlider\n            label=\"X\"\n            onChange={context.setCurveOffsetX}\n            value={context.state.curveOffsetX}\n            min={-1 * context.state.cellSize}\n            max={context.state.cellSize}\n          />\n          <UnitSlider\n            label=\"Y\"\n            onChange={context.setCurveOffsetY}\n            value={context.state.curveOffsetY}\n            min={-1 * context.state.cellSize}\n            max={context.state.cellSize}\n          />\n          <UnitSlider\n            label=\"Rotate\"\n            hideUnits\n            onChange={context.setCurveRotation}\n            value={context.state.curveRotation}\n            inputPrecision={1}\n            step={0.1}\n            min={-180}\n            max={180}\n          />\n          <UnitSlider\n            label=\"Scale X\"\n            hideUnits\n            onChange={context.setCurveScaleX}\n            value={context.state.curveScaleX}\n            min={-3}\n            max={3}\n          />\n          <UnitSlider\n            label=\"Scale Y\"\n            hideUnits\n            onChange={context.setCurveScaleY}\n            value={context.state.curveScaleY}\n            min={-3}\n            max={3}\n          />\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsShape;\n","import React, { Component } from 'react';\nimport { random } from 'lodash';\nimport {\n  Checkbox,\n  Col,\n  Divider,\n  Input,\n  Radio,\n  Row,\n  Select,\n  Tooltip,\n} from 'antd';\n\nimport ExampleData from './Examples.data';\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\nimport * as Styles from './Styles';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\n/* eslint-disable react/no-array-index-key */\nconst examplesOptions = ExampleData.map((e, i) => <Option key={i} value={i}>{e.title}</Option>);\n/* eslint-enable react/no-array-index-key */\n\nfunction capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nfunction handleExampleChange(val, context) {\n  const { settings } = ExampleData[val];\n  Object.keys(settings).forEach((settingKey) => {\n    const fn = `set${capitalize(settingKey)}`;\n    context[fn](settings[settingKey]);\n  });\n}\n\nfunction calculateTilePreviewPosition(e, context) {\n  const { target } = e;\n  const line = target.value.substr(0, target.selectionStart).split('\\n').length;\n  context.setTextAreaHighlightIndex(line);\n}\n\nconst defaultSelectValue = random(0, ExampleData.length - 1);\n\nclass SettingsDatum extends Component {\n  componentDidMount() {\n    handleExampleChange(defaultSelectValue, this.context);\n  }\n\n  render() {\n    return (\n      <SettingsContext.Consumer>\n        {context => (\n          <React.Fragment>\n            <Tooltip title=\"Load an example\">\n              <Divider>Example</Divider>\n            </Tooltip>\n            <Select\n              defaultValue={defaultSelectValue}\n              style={{ width: '100%' }}\n              onChange={val => handleExampleChange(val, context)}\n            >\n              {examplesOptions}\n            </Select>\n\n            <Tooltip title=\"Control the interpretation of the data\">\n              <Divider style={Styles.divider}>Interpret</Divider>\n            </Tooltip>\n\n            <Row style={{ marginBottom: 20 }}>\n              <Col span={12}>\n                <Radio.Group\n                  value={context.state.effectType}\n                  onChange={e => context.setEffectType(e.target.value)}\n                >\n                  <Tooltip title=\"Draw the data as an etch\">\n                    <Radio.Button value=\"etch\">Etch</Radio.Button>\n                  </Tooltip>\n                  <Tooltip title=\"Draw the data as a cut\">\n                    <Radio.Button value=\"cut\">Cut</Radio.Button>\n                  </Tooltip>\n                </Radio.Group>\n              </Col>\n              <Col span={12}>\n                <Tooltip title=\"Draw all data rows from the same origin\">\n                  <Checkbox\n                    style={{ float: 'right' }}\n                    checked={context.state.isSingleton}\n                    onChange={e => context.setIsSingleton(e.target.checked)}\n                  >\n                    Overlap\n                  </Checkbox>\n                </Tooltip>\n              </Col>\n            </Row>\n\n            <UnitSlider\n              label=\"Etch\"\n              onChange={context.setEtchWidth}\n              value={context.state.etchWidth}\n              min={context.state.etchWidthMin}\n              step={0.01}\n              max={context.state.etchWidthMax}\n              disabled={context.state.effectType !== 'etch'}\n            />\n\n            <Tooltip title=\"Enter data\">\n              <Divider style={Styles.divider}>Entry</Divider>\n            </Tooltip>\n            <Row>\n              <Col>\n                <Tooltip title=\"Add zeros between each data point\">\n                  <Checkbox\n                    style={{ float: 'right', marginBottom: 10 }}\n                    checked={context.state.isDramatic}\n                    onChange={e => context.setIsDramatic(e.target.checked)}\n                  >\n                    Dramatize\n                  </Checkbox>\n                </Tooltip>\n              </Col>\n            </Row>\n            <TextArea\n              rows={10}\n              onClick={e => calculateTilePreviewPosition(e, context)}\n              onKeyUp={e => calculateTilePreviewPosition(e, context)}\n              value={context.state.datum}\n              style={{ fontFamily: 'monospace', whiteSpace: 'nowrap' }}\n              onChange={e => context.setDatum(e.target.value)}\n            />\n          </React.Fragment>\n        )}\n      </SettingsContext.Consumer>\n    );\n  }\n}\n\nSettingsDatum.contextType = SettingsContext;\nexport default SettingsDatum;\n","import React from 'react';\nimport {\n  Button,\n  Col,\n  Divider,\n  Radio,\n  Row,\n  Select,\n  Tooltip,\n} from 'antd';\n\nimport * as Styles from './Styles';\nimport UnitSlider from './UnitSlider';\nimport SettingsContext from './Settings.context';\nimport downloadSvgDocument from './Download';\n\nconst { Option } = Select;\nconst presets = [\n  {\n    name: 'Epilog Fusion Pro 48',\n    width: 48,\n    height: 36,\n  },\n  {\n    name: 'Epilog Fusion Pro 32',\n    width: 32,\n    height: 20,\n  },\n  {\n    name: 'Epilog Helix',\n    width: 24,\n    height: 18,\n  },\n  {\n    name: 'Epilog Mini 24',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Mini 18',\n    width: 18,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 24',\n    width: 24,\n    height: 12,\n  },\n  {\n    name: 'Epilog Zing 16',\n    width: 16,\n    height: 12,\n  },\n];\n\nconst presetOptions = presets.map((p, i) => <Option key={p.name} value={i}>{p.name}</Option>);\n\nfunction handlePresetChange(val, context) {\n  if (context.state.units !== 'in') {\n    context.setUnits('in');\n  }\n\n  const current = { width: context.state.pageWidth, height: context.state.pageHeight };\n  const dimensions = presets[val] || current;\n  context.setPageHeight(dimensions.height);\n  context.setPageWidth(dimensions.width);\n}\n\nfunction SettingsPage() {\n  return (\n    <SettingsContext.Consumer>\n      {context => (\n        <React.Fragment>\n          <Divider>Setup</Divider>\n\n          <Row style={{ marginBottom: 20 }}>\n            <Col>\n              <Radio.Group\n                style={{ textAlign: 'center', width: '100%' }}\n                value={context.state.units}\n                onChange={e => context.setUnits(e.target.value)}\n              >\n                <Tooltip title=\"Set the document to standard units\">\n                  <Radio.Button value=\"in\">in</Radio.Button>\n                </Tooltip>\n                <Tooltip title=\"Set the document to metric units\">\n                  <Radio.Button value=\"cm\">cm</Radio.Button>\n                </Tooltip>\n              </Radio.Group>\n            </Col>\n          </Row>\n\n          <Tooltip title=\"Load a document preset\">\n            <Select\n              defaultValue={6}\n              style={{ width: '100%', marginBottom: 15 }}\n              onChange={val => handlePresetChange(val, context)}\n            >\n              {presetOptions}\n            </Select>\n          </Tooltip>\n\n          <UnitSlider\n            label=\"Width\"\n            onChange={context.setPageWidth}\n            value={context.state.pageWidth}\n            min={0}\n            max={context.state.pageWidthMax}\n          />\n          <UnitSlider\n            label=\"Height\"\n            onChange={context.setPageHeight}\n            value={context.state.pageHeight}\n            min={0}\n            max={context.state.pageHeightMax}\n          />\n\n          <Divider style={Styles.divider} />\n          <Button\n            type=\"default\"\n            block\n            onClick={downloadSvgDocument}\n            style={{ display: 'block', margin: 'auto', backgroundColor: Styles.colors[10] }}\n          >\n            Download SVG\n          </Button>\n        </React.Fragment>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n\nexport default SettingsPage;\n","import React from 'react';\nimport {\n  Tabs,\n  Row,\n  Col,\n} from 'antd';\n\nimport SettingsShape from './Settings-shape';\nimport SettingsDatum from './Settings-datum';\nimport SettingsPage from './Settings-page';\n\nconst { TabPane } = Tabs;\n\nfunction Settings() {\n  return (\n    <Tabs\n      defaultActiveKey=\"2\"\n      tabBarStyle={{ textAlign: 'center' }}\n      style={{ paddingBottom: 50 }}\n    >\n      <TabPane tab=\"Shape\" key=\"1\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsShape />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Data\" key=\"2\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsDatum />\n          </Col>\n        </Row>\n      </TabPane>\n      <TabPane tab=\"Page\" key=\"3\">\n        <Row>\n          <Col span={20} offset={2}>\n            <SettingsPage />\n          </Col>\n        </Row>\n      </TabPane>\n    </Tabs>\n  );\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { zipObject, round } from 'lodash';\nimport SettingsContext from './Settings.context';\n\nimport { inchesPerCentimenter, centimetersPerInch } from './util';\n\nconst unitConversionPrecision = 2;\n\n\nclass SettingsProvider extends Component {\n  state = {\n    cellSize: 4,\n    cellSizeMin: 0.1,\n    cellSizeMax: 10,\n    curveOffsetX: 0,\n    curveOffsetY: 0.2,\n    curveRotation: 0,\n    curveScaleX: 0.5,\n    curveScaleY: 0.5,\n    curveType: 'curveBasisClosed',\n    datum: '',\n    effectType: 'etch',\n    etchWidth: 0.01,\n    etchWidthMin: 0.001,\n    etchWidthMax: 0.2,\n    isDramatic: true,\n    isSingleton: false,\n    lineType: 'radial',\n    pageWidth: 16,\n    pageWidthMax: 48,\n    pageHeight: 12,\n    pageHeightMax: 96,\n    shapeSideCount: 4,\n    showSurround: true,\n    textAreaHighlightIndex: 0,\n    throughHoleExists: true,\n    throughHoleRadius: 0.12,\n    throughHoleX: 2,\n    throughHoleY: 0.5,\n    units: 'in',\n  }\n\n  getStateKeysWithUnits = () => [\n    'defaultSliderStepSize',\n    'cellSize', 'cellSizeMin', 'cellSizeMax',\n    'curveOffsetX', 'curveOffsetY',\n    'etchWidth', 'etchWidthMax',\n    'throughHoleRadius', 'throughHoleX', 'throughHoleY',\n    'pageWidth', 'pageWidthMax', 'pageHeight', 'pageHeightMax',\n  ]\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <SettingsContext.Provider value={{\n        state: this.state,\n        setCellSize: (cellSize) => {\n          const { state } = this;\n\n          if (state.throughHoleExists) {\n            const xRatio = state.throughHoleX / state.cellSize;\n            const yRatio = state.throughHoleY / state.cellSize;\n\n            this.setState({\n              throughHoleX: xRatio * cellSize,\n              throughHoleY: yRatio * cellSize,\n            });\n          }\n\n          this.setState({ cellSize });\n        },\n        setCurveType: (curveType) => {\n          const { lineType } = this.state;\n          if (lineType === 'radial' && curveType.includes('Closed')) {\n            this.setState({ forceClose: false });\n          }\n          this.setState({ curveType });\n        },\n        setCurveOffsetX: curveOffsetX => this.setState({ curveOffsetX }),\n        setCurveOffsetY: curveOffsetY => this.setState({ curveOffsetY }),\n        setCurveRotation: curveRotation => this.setState({ curveRotation }),\n        setCurveScaleX: curveScaleX => this.setState({ curveScaleX }),\n        setCurveScaleY: curveScaleY => this.setState({ curveScaleY }),\n        setDatum: datum => this.setState({ datum }),\n        setEffectType: effectType => this.setState({ effectType }),\n        setEtchWidth: etchWidth => this.setState({ etchWidth }),\n        setForceClose: forceClose => this.setState({ forceClose }),\n        setIsDramatic: isDramatic => this.setState({ isDramatic }),\n        setIsSingleton: (isSingleton) => {\n          if (isSingleton) {\n            this.setState({\n              throughHoleExists: false,\n              showSurround: false,\n            });\n          }\n\n          this.setState({ isSingleton });\n        },\n        setLineType: (lineType, suggestCurveType) => {\n          const { curveType } = this.state;\n\n          let newCurveType;\n          if (lineType === 'linear' && suggestCurveType) {\n            if (curveType === 'curveBasisClosed') newCurveType = 'curveBasis';\n            if (curveType === 'curveCardinalClosed') newCurveType = 'curveCardinal';\n            if (curveType === 'curveCatmullRomClosed') newCurveType = 'curveCatmullRom';\n            if (curveType === 'curveLinearClosed') newCurveType = 'curveLinear';\n            this.setState({ forceClose: false });\n          }\n          if (lineType === 'radial' && suggestCurveType) {\n            if (curveType === 'curveBasis') newCurveType = 'curveBasisClosed';\n            else if (curveType === 'curveCardinal') newCurveType = 'curveCardinalClosed';\n            else if (curveType === 'curveCatmullRom') newCurveType = 'curveCatmullRomClosed';\n            else if (curveType === 'curveLinear') newCurveType = 'curveLinearClosed';\n            else this.setState({ forceClose: true });\n          }\n          if (newCurveType) this.setState({ curveType: newCurveType });\n\n          this.setState({ lineType });\n        },\n        setPageWidth: pageWidth => this.setState({ pageWidth }),\n        setPageHeight: pageHeight => this.setState({ pageHeight }),\n        setShapeSideCount: shapeSideCount => this.setState({ shapeSideCount }),\n        setTextAreaHighlightIndex: textAreaHighlightIndex => this.setState({\n          textAreaHighlightIndex,\n        }),\n        setThroughHoleExists: throughHoleExists => this.setState({ throughHoleExists }),\n        setThroughHoleRadius: throughHoleRadius => this.setState({ throughHoleRadius }),\n        setThroughHoleX: throughHoleX => this.setState({ throughHoleX }),\n        setThroughHoleY: throughHoleY => this.setState({ throughHoleY }),\n        setUnits: (unit) => {\n          const { state } = this;\n          if (state.units !== unit) {\n            const factor = unit === 'cm' ? centimetersPerInch : inchesPerCentimenter;\n\n            const keys = this.getStateKeysWithUnits();\n            const zipped = zipObject(\n              keys,\n              keys.map(key => round(state[key] * factor, unitConversionPrecision)),\n            );\n            this.setState(zipped);\n          }\n          this.setState({ units: unit });\n        },\n        setShowSurround: (showSurround) => {\n          if (!showSurround) {\n            this.setState({\n              throughHoleExists: false,\n            });\n          }\n          this.setState({ showSurround });\n        },\n      }}\n      >\n        {children}\n      </SettingsContext.Provider>\n    );\n  }\n}\n\nexport default SettingsProvider;\n","import React from 'react';\nimport {\n  Col,\n  Layout,\n  Row,\n} from 'antd';\n\nimport * as Styles from './Styles';\nimport Analytics from './Analytics';\nimport Footer from './Footer';\nimport Legend from './Legend';\nimport PagePreview from './PagePreview';\nimport Preview from './Preview';\nimport Settings from './Settings';\nimport SettingsProvider from './Settings.provider';\nimport SettingsContext from './Settings.context';\n\nconst {\n  Content,\n  Sider,\n} = Layout;\n\nfunction App() {\n  return (\n    <SettingsProvider>\n      <Legend />\n\n      {/* Page Header */}\n      <Row style={{ borderBottom: `1px solid ${Styles.colors[5]}` }}>\n        <Col span={23} offset={1}>\n          <h1 style={{\n            height: Styles.headerHeight,\n            fontFamily: \"'Share Tech Mono', monospace\",\n            color: Styles.colors[8],\n            padding: '10px 0 7px 0',\n            margin: 0,\n            letterSpacing: 20,\n            fontSize: '40px',\n            textShadow: '2px 2px 2px black',\n          }}\n          >\n            DATA FORMS\n          </h1>\n        </Col>\n      </Row>\n\n      { /* Sidebar and preview */ }\n      <Layout\n        style={{\n          width: '100%', height: '100%', position: 'absolute', top: 0, background: 'none', overflow: 'hidden',\n        }}\n      >\n        <Content\n          style={{\n            marginTop: Styles.headerHeight,\n            marginBottom: Styles.footerHeight,\n            position: 'relative',\n            overflow: 'hidden',\n          }}\n        >\n          <SettingsContext.Consumer>\n            {context => (\n              <React.Fragment>\n                <PagePreview\n                  cellSize={context.state.cellSize}\n                  datum={context.state.datum}\n                  isSingleton={context.state.isSingleton}\n                  pageHeight={context.state.pageHeight}\n                  pageWidth={context.state.pageWidth}\n                  units={context.state.units}\n                />\n                <Preview\n                  cellSize={context.state.cellSize}\n                  textAreaHighlightIndex={context.state.textAreaHighlightIndex}\n                  units={context.state.units}\n                />\n              </React.Fragment>\n            )}\n          </SettingsContext.Consumer>\n        </Content>\n        <Sider\n          width={450}\n          style={{\n            marginBottom: Styles.footerHeight,\n            marginRight: 20,\n            marginTop: 33,\n            background: Styles.colors[0],\n            border: `1px solid ${Styles.colors[5]}`,\n            borderBottom: 'none',\n            overflowY: 'scroll',\n          }}\n        >\n          <Settings />\n        </Sider>\n      </Layout>\n\n      <Footer />\n      <Analytics />\n    </SettingsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}